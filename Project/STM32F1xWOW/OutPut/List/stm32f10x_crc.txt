; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\stm32f10x_crc.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\stm32f10x_crc.crf ..\..\Library\STM32F10x_StdPeriph_Driver\SCR\stm32f10x_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;65     *******************************************************************************/
;;;66     u32 CRC_CalcBlockCRC(u32 pBuffer[], u32 BufferLength)
000000  b510              PUSH     {r4,lr}
;;;67     {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;68       u32 index = 0;
000006  2100              MOVS     r1,#0
;;;69       
;;;70       for(index = 0; index < BufferLength; index++)
000008  bf00              NOP      
00000a  e004              B        |L1.22|
                  |L1.12|
;;;71       {
;;;72         CRC->DR = pBuffer[index];
00000c  f8520021          LDR      r0,[r2,r1,LSL #2]
000010  4c03              LDR      r4,|L1.32|
000012  6020              STR      r0,[r4,#0]
000014  1c49              ADDS     r1,r1,#1              ;70
                  |L1.22|
000016  4299              CMP      r1,r3                 ;70
000018  d3f8              BCC      |L1.12|
;;;73       }
;;;74     
;;;75       return (CRC->DR);
00001a  4801              LDR      r0,|L1.32|
00001c  6800              LDR      r0,[r0,#0]
;;;76     }
00001e  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  |L1.32|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;49     *******************************************************************************/
;;;50     u32 CRC_CalcCRC(u32 Data)
000000  4601              MOV      r1,r0
;;;51     {
;;;52       CRC->DR = Data;
000002  4802              LDR      r0,|L2.12|
000004  6001              STR      r1,[r0,#0]
;;;53       
;;;54       return (CRC->DR);
000006  6800              LDR      r0,[r0,#0]
;;;55     }
000008  4770              BX       lr
;;;56     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;84     *******************************************************************************/
;;;85     u32 CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;86     {
;;;87       return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;88     }
000004  4770              BX       lr
;;;89     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;108    *******************************************************************************/
;;;109    u8 CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;110    {
;;;111      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;112    }
000004  4770              BX       lr
;;;113    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;36     *******************************************************************************/
;;;37     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;38     {
;;;39       /* Reset CRC generator */
;;;40       CRC->CR = CR_RESET_Set;
000002  4901              LDR      r1,|L5.8|
000004  6088              STR      r0,[r1,#8]
;;;41     }
000006  4770              BX       lr
;;;42     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;96     *******************************************************************************/
;;;97     void CRC_SetIDRegister(u8 IDValue)
000000  4901              LDR      r1,|L6.8|
;;;98     {
;;;99       CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;100    }
000004  4770              BX       lr
;;;101    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000
