; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\ec11encoder.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\ec11encoder.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\ec11encoder.crf ..\..\Driver\Components\SCR\EC11Encoder.C]
                          THUMB

                          AREA ||i.EC11_GetStatus||, CODE, READONLY, ALIGN=1

                  EC11_GetStatus PROC
;;;48     *******************************************************************************/
;;;49     EC11_StatusTypeDef EC11_GetStatus(EC11_ConfTypeDef *EC11_Conf)
000000  b570              PUSH     {r4-r6,lr}
;;;50     {
000002  4604              MOV      r4,r0
;;;51     	EC11_StatusTypeDef	EC11_Status=EC11_IDLE;	//无触发
000004  2500              MOVS     r5,#0
;;;52     	//--------------按键处理
;;;53     	if(GPIO_ReadInputDataBit(EC11_Conf->EC11_Button_PORT,EC11_Conf->EC11_Button_Pin)==0)		//输入低电平---被按压
000006  88a1              LDRH     r1,[r4,#4]
000008  6820              LDR      r0,[r4,#0]
00000a  f7fffffe          BL       GPIO_ReadInputDataBit
00000e  bba8              CBNZ     r0,|L1.124|
;;;54     	{
;;;55     //		EC11_Conf->ButtonTimeCount++;		//按键计时
;;;56     		//------单次按键
;;;57     		if(EC11_Conf->LongPressFlag==0&&EC11_Conf->ButtonActiveFlag==0)
000010  7da0              LDRB     r0,[r4,#0x16]
000012  b970              CBNZ     r0,|L1.50|
000014  f8940028          LDRB     r0,[r4,#0x28]
000018  b958              CBNZ     r0,|L1.50|
;;;58     		{			
;;;59     			if(EC11_Conf->ButtonTimeCount<EC11_Conf->ButtonEffectiveTime)	//计时未到达按键有效时间
00001a  6a21              LDR      r1,[r4,#0x20]
00001c  6ae0              LDR      r0,[r4,#0x2c]
00001e  4288              CMP      r0,r1
000020  d203              BCS      |L1.42|
;;;60     			{
;;;61     				EC11_Conf->ButtonTimeCount++;		//按键计时
000022  6ae0              LDR      r0,[r4,#0x2c]
000024  1c40              ADDS     r0,r0,#1
000026  62e0              STR      r0,[r4,#0x2c]
000028  e02d              B        |L1.134|
                  |L1.42|
;;;62     			}
;;;63     			else
;;;64     			{
;;;65     				EC11_Conf->ButtonActiveFlag=1;	//按键有效标志----针对单次按键,ButtonActiveFlag==0;按键时长未到，按键无效，ButtonActiveFlag==1，按键有效，ButtonTimeCount不再计时，防止溢出
00002a  2001              MOVS     r0,#1
00002c  f8840028          STRB     r0,[r4,#0x28]
                  |L1.48|
;;;66     				return(EC11_Button);		//返回一次有效按键
;;;67     			}
;;;68     		}
;;;69     		//------长按
;;;70     		else	if(EC11_Conf->LongPressFlag==1)
;;;71     		{
;;;72     			EC11_Conf->ButtonTimeCount++;		//按键计时
;;;73     			if(EC11_Conf->ButtonTimeCount>=EC11_Conf->ButtonEffectiveTime&&EC11_Conf->ButtonActiveFlag==0)	//计时到达按键有效时间且未发生单次触发
;;;74     			{
;;;75     				EC11_Conf->ButtonActiveFlag=1;	//按键有效标志----针对单次按键,ButtonActiveFlag==0;按键时长未到，按键无效，ButtonActiveFlag==1，按键有效，ButtonTimeCount不再计时，防止溢出
;;;76     				return(EC11_Button);		//返回一次有效按键
;;;77     			}
;;;78     			else if(EC11_Conf->ButtonTimeCount>=EC11_Conf->LongPressStartTime&&EC11_Conf->ButtonActiveFlag==1)	//计时到达按键有效时间且已发生单次触发，后面则为连续按键计数
;;;79     			{
;;;80     				if(EC11_Conf->ButtonTimeCount>=EC11_Conf->LongPressStartTime+EC11_Conf->LongPressEffectiveTime)		//到达一个单步计时
;;;81     				{
;;;82     					EC11_Conf->ButtonTimeCount-=EC11_Conf->LongPressEffectiveTime;			//恢复一个单步计时，准备下一个单步计时 0.2秒一个返回周期
;;;83     					return(EC11_Button);		//返回一次有效按键
;;;84     				}				
;;;85     			}
;;;86     		}
;;;87     	}
;;;88     	else		//按键松开
;;;89     	{
;;;90     		EC11_Conf->ButtonActiveFlag=0;	//按键有效标志----针对单次按键,ButtonActiveFlag==0;按键时长未到，按键无效，ButtonActiveFlag==1，按键有效，ButtonTimeCount不再计时，防止溢出
;;;91     		EC11_Conf->ButtonTimeCount=0;		//清除按键计时
;;;92     	}
;;;93     	//--------------编码器处理
;;;94     	if(GPIO_ReadInputDataBit(EC11_Conf->EC11_A_PORT,EC11_Conf->EC11_A_Pin)==0)		//A脚检测到低电平
;;;95     	{
;;;96     		EC11_Conf->EncoderTimeCountA++;		//引脚A计时时间---计时到EncoderEffectiveTime表示编码有效，过滤干扰使用
;;;97     	}
;;;98     	if(GPIO_ReadInputDataBit(EC11_Conf->EC11_B_PORT,EC11_Conf->EC11_B_Pin)==0)		//B脚检测到低电平
;;;99     	{
;;;100    		EC11_Conf->EncoderTimeCountB++;		//引脚B计时时间---计时到EncoderEffectiveTime表示编码有效，过滤干扰使用
;;;101    	}
;;;102    	if(		(GPIO_ReadInputDataBit(EC11_Conf->EC11_A_PORT,EC11_Conf->EC11_A_Pin)==1)	\
;;;103    			&&(GPIO_ReadInputDataBit(EC11_Conf->EC11_B_PORT,EC11_Conf->EC11_B_Pin)==1)	\
;;;104    			&&(EC11_Conf->EncoderTimeCountA>EC11_Conf->EncoderEffectiveTime							\
;;;105    			&&EC11_Conf->EncoderTimeCountB>EC11_Conf->EncoderEffectiveTime)
;;;106    		)
;;;107    	{
;;;108    		if(EC11_Conf->EncoderTimeCountA>EC11_Conf->EncoderTimeCountB)
;;;109    		{
;;;110    			EC11_Status=EC11_ClockWise;					//CW顺时针信号
;;;111    		}
;;;112    		else
;;;113    		{
;;;114    			EC11_Status=EC11_AntiClockWise;				//CCW逆时针信号
;;;115    		}		
;;;116    		EC11_Conf->EncoderTimeCountA=0;		//引脚A计时时间---计时到EncoderEffectiveTime表示编码有效，过滤干扰使用
;;;117    		EC11_Conf->EncoderTimeCountB=0;		//引脚B计时时间---计时到EncoderEffectiveTime表示编码有效，过滤干扰使用
;;;118    		return(EC11_Status);
;;;119    	}
;;;120    	return(EC11_Status);
;;;121    }
000030  bd70              POP      {r4-r6,pc}
                  |L1.50|
000032  7da0              LDRB     r0,[r4,#0x16]         ;70
000034  2801              CMP      r0,#1                 ;70
000036  d126              BNE      |L1.134|
000038  6ae0              LDR      r0,[r4,#0x2c]         ;72
00003a  1c40              ADDS     r0,r0,#1              ;72
00003c  62e0              STR      r0,[r4,#0x2c]         ;72
00003e  6a21              LDR      r1,[r4,#0x20]         ;73
000040  6ae0              LDR      r0,[r4,#0x2c]         ;73
000042  4288              CMP      r0,r1                 ;73
000044  d306              BCC      |L1.84|
000046  f8940028          LDRB     r0,[r4,#0x28]         ;73
00004a  b918              CBNZ     r0,|L1.84|
00004c  2001              MOVS     r0,#1                 ;75
00004e  f8840028          STRB     r0,[r4,#0x28]         ;75
000052  e7ed              B        |L1.48|
                  |L1.84|
000054  69a1              LDR      r1,[r4,#0x18]         ;78
000056  6ae0              LDR      r0,[r4,#0x2c]         ;78
000058  4288              CMP      r0,r1                 ;78
00005a  d314              BCC      |L1.134|
00005c  f8940028          LDRB     r0,[r4,#0x28]         ;78
000060  2801              CMP      r0,#1                 ;78
000062  d110              BNE      |L1.134|
000064  e9d40106          LDRD     r0,r1,[r4,#0x18]      ;80
000068  4408              ADD      r0,r0,r1              ;80
00006a  6ae1              LDR      r1,[r4,#0x2c]         ;80
00006c  4288              CMP      r0,r1                 ;80
00006e  d80a              BHI      |L1.134|
000070  69e1              LDR      r1,[r4,#0x1c]         ;82
000072  6ae0              LDR      r0,[r4,#0x2c]         ;82
000074  1a40              SUBS     r0,r0,r1              ;82
000076  62e0              STR      r0,[r4,#0x2c]         ;82
000078  2001              MOVS     r0,#1                 ;83
00007a  e7d9              B        |L1.48|
                  |L1.124|
00007c  e7ff              B        |L1.126|
                  |L1.126|
00007e  2000              MOVS     r0,#0                 ;90
000080  f8840028          STRB     r0,[r4,#0x28]         ;90
000084  62e0              STR      r0,[r4,#0x2c]         ;91
                  |L1.134|
000086  89a1              LDRH     r1,[r4,#0xc]          ;94
000088  68a0              LDR      r0,[r4,#8]            ;94
00008a  f7fffffe          BL       GPIO_ReadInputDataBit
00008e  b910              CBNZ     r0,|L1.150|
000090  6b20              LDR      r0,[r4,#0x30]         ;96
000092  1c40              ADDS     r0,r0,#1              ;96
000094  6320              STR      r0,[r4,#0x30]         ;96
                  |L1.150|
000096  8aa1              LDRH     r1,[r4,#0x14]         ;98
000098  6920              LDR      r0,[r4,#0x10]         ;98
00009a  f7fffffe          BL       GPIO_ReadInputDataBit
00009e  b910              CBNZ     r0,|L1.166|
0000a0  6b60              LDR      r0,[r4,#0x34]         ;100
0000a2  1c40              ADDS     r0,r0,#1              ;100
0000a4  6360              STR      r0,[r4,#0x34]         ;100
                  |L1.166|
0000a6  89a1              LDRH     r1,[r4,#0xc]          ;102
0000a8  68a0              LDR      r0,[r4,#8]            ;102
0000aa  f7fffffe          BL       GPIO_ReadInputDataBit
0000ae  2801              CMP      r0,#1                 ;102
0000b0  d119              BNE      |L1.230|
0000b2  8aa1              LDRH     r1,[r4,#0x14]         ;103
0000b4  6920              LDR      r0,[r4,#0x10]         ;103
0000b6  f7fffffe          BL       GPIO_ReadInputDataBit
0000ba  2801              CMP      r0,#1                 ;103
0000bc  d113              BNE      |L1.230|
0000be  6a61              LDR      r1,[r4,#0x24]         ;104
0000c0  6b20              LDR      r0,[r4,#0x30]         ;104
0000c2  4288              CMP      r0,r1                 ;104
0000c4  d90f              BLS      |L1.230|
0000c6  6a61              LDR      r1,[r4,#0x24]         ;105
0000c8  6b60              LDR      r0,[r4,#0x34]         ;105
0000ca  4288              CMP      r0,r1                 ;105
0000cc  d90b              BLS      |L1.230|
0000ce  e9d4010c          LDRD     r0,r1,[r4,#0x30]      ;108
0000d2  4288              CMP      r0,r1                 ;108
0000d4  d901              BLS      |L1.218|
0000d6  2502              MOVS     r5,#2                 ;110
0000d8  e000              B        |L1.220|
                  |L1.218|
0000da  2503              MOVS     r5,#3                 ;114
                  |L1.220|
0000dc  2000              MOVS     r0,#0                 ;116
0000de  6320              STR      r0,[r4,#0x30]         ;116
0000e0  6360              STR      r0,[r4,#0x34]         ;117
0000e2  4628              MOV      r0,r5                 ;118
0000e4  e7a4              B        |L1.48|
                  |L1.230|
0000e6  4628              MOV      r0,r5                 ;120
0000e8  e7a2              B        |L1.48|
;;;122    
                          ENDP


                          AREA ||i.EC11_PinConf||, CODE, READONLY, ALIGN=2

                  EC11_PinConf PROC
;;;14     *******************************************************************************/
;;;15     void EC11_PinConf(EC11_ConfTypeDef *EC11_Conf)
000000  b510              PUSH     {r4,lr}
;;;16     {
000002  4604              MOV      r4,r0
;;;17     	GPIO_Configuration_IPU	(EC11_Conf->EC11_Button_PORT,		EC11_Conf->EC11_Button_Pin);		//将GPIO相应管脚配置为上拉输入模式----V20170605
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_Configuration_IPU
;;;18     	GPIO_Configuration_IPU	(EC11_Conf->EC11_A_PORT,				EC11_Conf->EC11_A_Pin);					//将GPIO相应管脚配置为上拉输入模式----V20170605
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_Configuration_IPU
;;;19     	GPIO_Configuration_IPU	(EC11_Conf->EC11_B_PORT,				EC11_Conf->EC11_B_Pin);					//将GPIO相应管脚配置为上拉输入模式----V20170605
000014  8aa1              LDRH     r1,[r4,#0x14]
000016  6920              LDR      r0,[r4,#0x10]
000018  f7fffffe          BL       GPIO_Configuration_IPU
;;;20     	
;;;21     	//时间参数默认配置：//输入参数按1us时间计算
;;;22     	if(EC11_Conf->LongPressFlag!=0)			//允许长按
00001c  7da0              LDRB     r0,[r4,#0x16]
00001e  b138              CBZ      r0,|L2.48|
;;;23     	{
;;;24     		if(EC11_Conf->LongPressStartTime==0)	//长按有效但是起始时间未设定，3秒后按键未松开表示长按
000020  69a0              LDR      r0,[r4,#0x18]
000022  b908              CBNZ     r0,|L2.40|
;;;25     		{
;;;26     			EC11_Conf->LongPressStartTime=3000000;	//3x1000x1000		3秒
000024  4809              LDR      r0,|L2.76|
000026  61a0              STR      r0,[r4,#0x18]
                  |L2.40|
;;;27     		}
;;;28     		if(EC11_Conf->LongPressEffectiveTime==0)	//长按有效但是步长时间未设定，每0.5（500ms)秒一步
000028  69e0              LDR      r0,[r4,#0x1c]
00002a  b908              CBNZ     r0,|L2.48|
;;;29     		{
;;;30     			EC11_Conf->LongPressEffectiveTime=500000;	//5x100x1000		0.5秒
00002c  4808              LDR      r0,|L2.80|
00002e  61e0              STR      r0,[r4,#0x1c]
                  |L2.48|
;;;31     		}
;;;32     	}
;;;33     	if(EC11_Conf->ButtonEffectiveTime==0)	//单按键有效时间--0.05秒
000030  6a20              LDR      r0,[r4,#0x20]
000032  b910              CBNZ     r0,|L2.58|
;;;34     	{
;;;35     		EC11_Conf->ButtonEffectiveTime=50000;			//1x100x1000
000034  f24c3050          MOV      r0,#0xc350
000038  6220              STR      r0,[r4,#0x20]
                  |L2.58|
;;;36     	}
;;;37     	if(EC11_Conf->EncoderEffectiveTime==0)	//编码器有效时间---1mS
00003a  6a60              LDR      r0,[r4,#0x24]
00003c  b910              CBNZ     r0,|L2.68|
;;;38     	{
;;;39     		EC11_Conf->EncoderEffectiveTime=800;				//1x800us
00003e  f44f7048          MOV      r0,#0x320
000042  6260              STR      r0,[r4,#0x24]
                  |L2.68|
;;;40     	}
;;;41     	EC11_Conf->ButtonActiveFlag=0;			//按键有效标志----针对单次按键,ButtonActiveFlag==0;按键时长未到，按键无效，ButtonActiveFlag==1，按键有效，ButtonTimeCount不再计时，防止溢出
000044  2000              MOVS     r0,#0
000046  f8840028          STRB     r0,[r4,#0x28]
;;;42     }
00004a  bd10              POP      {r4,pc}
;;;43     /*******************************************************************************
                          ENDP

                  |L2.76|
                          DCD      0x002dc6c0
                  |L2.80|
                          DCD      0x0007a120
