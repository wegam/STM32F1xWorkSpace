; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\stm32_systick.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\stm32_systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\stm32_systick.crf ..\..\Driver\WOW\SCR\STM32_SYSTICK.C]
                          THUMB

                          AREA ||i.DeleyuS||, CODE, READONLY, ALIGN=1

                  DeleyuS PROC
;;;204    *******************************************************************************/
;;;205    void DeleyuS(unsigned int Time)
000000  0080              LSLS     r0,r0,#2
;;;206    {
;;;207    	Time	=	Time*4;
;;;208    	while(Time--)
000002  e008              B        |L1.22|
                  |L1.4|
;;;209    	{
;;;210    		__nop();
000004  bf00              NOP      
;;;211    		__nop();
000006  bf00              NOP      
;;;212    		__nop();
000008  bf00              NOP      
;;;213    		__nop();
00000a  bf00              NOP      
;;;214    		__nop();
00000c  bf00              NOP      
;;;215    		__nop();
00000e  bf00              NOP      
;;;216    		__nop();
000010  bf00              NOP      
;;;217    		__nop();
000012  bf00              NOP      
;;;218    		__nop();
000014  bf00              NOP      
                  |L1.22|
000016  1e01              SUBS     r1,r0,#0              ;208
000018  f1a00001          SUB      r0,r0,#1              ;208
00001c  d1f2              BNE      |L1.4|
;;;219    //		__nop();
;;;220    		
;;;221    	}
;;;222    }
00001e  4770              BX       lr
;;;223    
                          ENDP


                          AREA ||i.SysTick_Configuration||, CODE, READONLY, ALIGN=2

                  SysTick_Configuration PROC
;;;35     *******************************************************************************/
;;;36     void SysTick_Configuration(unsigned long Time)	//系统嘀嗒时钟配置72MHz,单位为uS
000000  b510              PUSH     {r4,lr}
;;;37     {	
000002  4604              MOV      r4,r0
;;;38     	
;;;39     	if(Time	==	0)
000004  b904              CBNZ     r4,|L2.8|
                  |L2.6|
;;;40     		return;
;;;41     	RCC_GetClocksFreq(&RCC_ClocksStatus);	//获取时钟参数
;;;42     	
;;;43     	SysTick->CTRL &= 0xFFFFFFFD;									//SysTick_ITConfig(DISABLE);					//关闭中断
;;;44     	SysTick->CTRL &= SysTick_Counter_Disable;			//SysTick_CounterCmd(SysTick_Counter_Disable);	//关闭计数
;;;45     	SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;	//SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;46     	SysTick->LOAD = ((RCC_ClocksStatus.SYSCLK_Frequency)/8000000)*Time;	//SysTick_SetReload(9*time);				//Time--uS  -8为了减小误差，不可以-9，防止Time==1的情况
;;;47     	SysTick->CTRL |= ((u32)0x00000002);
;;;48     	SysTick->CTRL |= SysTick_Counter_Enable;			//SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;49     	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;50     	
;;;51     	SysTick->CTRL |= ((u32)0x00000002);	//开中断
;;;52     	
;;;53     	Load	=	SysTick->LOAD;							//获取原重装载值
;;;54     	Ctrl	=	SysTick->CTRL&0x0000FFFF;		//获取原控制参数
;;;55     ////	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);					//系统时钟 72MHZ
;;;56     //	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;57     ////	SysTick_SetReload(9);			//1uS
;;;58     //	SysTick_SetReload((RCC_ClocksStatus.SYSCLK_Frequency/8000000)*Time);				//Time--uS
;;;59     //	SysTick_ITConfig(DISABLE);					//关闭中断
;;;60     //	SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;61     //	SysTick_ITConfig(ENABLE);
;;;62     //	
;;;63     //	Load	=	SysTick->LOAD;							//获取原重装载值
;;;64     //	Ctrl	=	SysTick->CTRL&0x0000FFFF;		//获取原控制参数
;;;65     	
;;;66     //	if(Time	==	0)
;;;67     //		return;
;;;68     ////	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);					//系统时钟 72MHZ
;;;69     //	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;70     ////	SysTick_SetReload(9);			//1uS
;;;71     //	SysTick_SetReload(9*Time-1);				//Time--uS
;;;72     //	SysTick_ITConfig(DISABLE);					//关闭中断
;;;73     //	SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;74     //	SysTick_ITConfig(ENABLE);
;;;75     }
000006  bd10              POP      {r4,pc}
                  |L2.8|
000008  481d              LDR      r0,|L2.128|
00000a  f7fffffe          BL       RCC_GetClocksFreq
00000e  f04f20e0          MOV      r0,#0xe000e000        ;43
000012  6900              LDR      r0,[r0,#0x10]         ;43
000014  f0200002          BIC      r0,r0,#2              ;43
000018  f04f21e0          MOV      r1,#0xe000e000        ;43
00001c  6108              STR      r0,[r1,#0x10]         ;43
00001e  4608              MOV      r0,r1                 ;44
000020  6900              LDR      r0,[r0,#0x10]         ;44
000022  f0200001          BIC      r0,r0,#1              ;44
000026  6108              STR      r0,[r1,#0x10]         ;44
000028  4608              MOV      r0,r1                 ;45
00002a  6900              LDR      r0,[r0,#0x10]         ;45
00002c  f0200004          BIC      r0,r0,#4              ;45
000030  6108              STR      r0,[r1,#0x10]         ;45
000032  4813              LDR      r0,|L2.128|
000034  6800              LDR      r0,[r0,#0]            ;46  ; RCC_ClocksStatus
000036  4913              LDR      r1,|L2.132|
000038  fbb0f0f1          UDIV     r0,r0,r1              ;46
00003c  4360              MULS     r0,r4,r0              ;46
00003e  f04f21e0          MOV      r1,#0xe000e000        ;46
000042  6148              STR      r0,[r1,#0x14]         ;46
000044  4608              MOV      r0,r1                 ;47
000046  6900              LDR      r0,[r0,#0x10]         ;47
000048  f0400002          ORR      r0,r0,#2              ;47
00004c  6108              STR      r0,[r1,#0x10]         ;47
00004e  4608              MOV      r0,r1                 ;48
000050  6900              LDR      r0,[r0,#0x10]         ;48
000052  f0400001          ORR      r0,r0,#1              ;48
000056  6108              STR      r0,[r1,#0x10]         ;48
000058  2000              MOVS     r0,#0                 ;49
00005a  6188              STR      r0,[r1,#0x18]         ;49
00005c  4608              MOV      r0,r1                 ;51
00005e  6900              LDR      r0,[r0,#0x10]         ;51
000060  f0400002          ORR      r0,r0,#2              ;51
000064  6108              STR      r0,[r1,#0x10]         ;51
000066  4608              MOV      r0,r1                 ;53
000068  6940              LDR      r0,[r0,#0x14]         ;53
00006a  4907              LDR      r1,|L2.136|
00006c  6008              STR      r0,[r1,#0]            ;53  ; Load
00006e  f04f20e0          MOV      r0,#0xe000e000        ;54
000072  6900              LDR      r0,[r0,#0x10]         ;54
000074  b280              UXTH     r0,r0                 ;54
000076  4905              LDR      r1,|L2.140|
000078  6008              STR      r0,[r1,#0]            ;54  ; Ctrl
00007a  bf00              NOP      
00007c  e7c3              B        |L2.6|
;;;76     /*******************************************************************************
                          ENDP

00007e  0000              DCW      0x0000
                  |L2.128|
                          DCD      RCC_ClocksStatus
                  |L2.132|
                          DCD      0x007a1200
                  |L2.136|
                          DCD      Load
                  |L2.140|
                          DCD      Ctrl

                          AREA ||i.SysTick_DeleyS||, CODE, READONLY, ALIGN=2

                  SysTick_DeleyS PROC
;;;168    *******************************************************************************/
;;;169    void SysTick_DeleyS(unsigned int Time)
000000  b900              CBNZ     r0,|L3.4|
                  |L3.2|
;;;170    {
;;;171    
;;;172    	if(Time	==	0)
;;;173    		return;
;;;174    //	SysTick_DeleymS(Time*1000);
;;;175    //	RCC_GetClocksFreq(&RCC_ClocksStatus);	//获取时钟参数
;;;176    //	
;;;177    	SysTick->CTRL &= 0xFFFFFFFD;									//SysTick_ITConfig(DISABLE);					//关闭中断
;;;178    	SysTick->CTRL &= SysTick_Counter_Disable;			//SysTick_CounterCmd(SysTick_Counter_Disable);	//关闭计数
;;;179    //	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;180    	SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;	//SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;181    //	SysTick->LOAD = (((RCC_ClocksStatus.SYSCLK_Frequency)/8));	//SysTick_SetReload(8M);				//Time--mS  -8为了减小误差，不可以-9，防止Time==1的情况
;;;182    	SysTick->LOAD = 9000000;	//SysTick_SetReload(8M);				//Time--mS  -8为了减小误差，不可以-9，防止Time==1的情况	
;;;183    	SysTick->CTRL |= SysTick_Counter_Enable;			//SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;184    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;185    	while(Time)
;;;186    	{
;;;187    		while(SysTick->VAL	==	0);			//等待开始装载
;;;188    		while(SysTick->VAL	!=	0);			//等待倒计数完成
;;;189    		Time--;
;;;190    	}
;;;191    	
;;;192    	SysTick->LOAD	=	Load;			//恢复原控制参数
;;;193    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;194    	SysTick->CTRL	=	Ctrl;			//恢复原控制参数
;;;195    }
000002  4770              BX       lr
                  |L3.4|
000004  f04f21e0          MOV      r1,#0xe000e000        ;177
000008  6909              LDR      r1,[r1,#0x10]         ;177
00000a  f0210102          BIC      r1,r1,#2              ;177
00000e  f04f22e0          MOV      r2,#0xe000e000        ;177
000012  6111              STR      r1,[r2,#0x10]         ;177
000014  4611              MOV      r1,r2                 ;178
000016  6909              LDR      r1,[r1,#0x10]         ;178
000018  f0210101          BIC      r1,r1,#1              ;178
00001c  6111              STR      r1,[r2,#0x10]         ;178
00001e  4611              MOV      r1,r2                 ;180
000020  6909              LDR      r1,[r1,#0x10]         ;180
000022  f0210104          BIC      r1,r1,#4              ;180
000026  6111              STR      r1,[r2,#0x10]         ;180
000028  4912              LDR      r1,|L3.116|
00002a  6151              STR      r1,[r2,#0x14]         ;182
00002c  4611              MOV      r1,r2                 ;183
00002e  6909              LDR      r1,[r1,#0x10]         ;183
000030  f0410101          ORR      r1,r1,#1              ;183
000034  6111              STR      r1,[r2,#0x10]         ;183
000036  2100              MOVS     r1,#0                 ;184
000038  6191              STR      r1,[r2,#0x18]         ;184
00003a  e00c              B        |L3.86|
                  |L3.60|
00003c  bf00              NOP                            ;187
                  |L3.62|
00003e  f04f21e0          MOV      r1,#0xe000e000        ;187
000042  6989              LDR      r1,[r1,#0x18]         ;187
000044  2900              CMP      r1,#0                 ;187
000046  d0fa              BEQ      |L3.62|
000048  bf00              NOP                            ;188
                  |L3.74|
00004a  f04f21e0          MOV      r1,#0xe000e000        ;188
00004e  6989              LDR      r1,[r1,#0x18]         ;188
000050  2900              CMP      r1,#0                 ;188
000052  d1fa              BNE      |L3.74|
000054  1e40              SUBS     r0,r0,#1              ;189
                  |L3.86|
000056  2800              CMP      r0,#0                 ;185
000058  d1f0              BNE      |L3.60|
00005a  4907              LDR      r1,|L3.120|
00005c  6809              LDR      r1,[r1,#0]            ;192  ; Load
00005e  f04f22e0          MOV      r2,#0xe000e000        ;192
000062  6151              STR      r1,[r2,#0x14]         ;192
000064  2100              MOVS     r1,#0                 ;193
000066  6191              STR      r1,[r2,#0x18]         ;193
000068  4904              LDR      r1,|L3.124|
00006a  6809              LDR      r1,[r1,#0]            ;194  ; Ctrl
00006c  6111              STR      r1,[r2,#0x10]         ;194
00006e  bf00              NOP      
000070  e7c7              B        |L3.2|
;;;196    /*******************************************************************************
                          ENDP

000072  0000              DCW      0x0000
                  |L3.116|
                          DCD      0x00895440
                  |L3.120|
                          DCD      Load
                  |L3.124|
                          DCD      Ctrl

                          AREA ||i.SysTick_DeleymS||, CODE, READONLY, ALIGN=2

                  SysTick_DeleymS PROC
;;;133    *******************************************************************************/
;;;134    void SysTick_DeleymS(unsigned int Time)
000000  b510              PUSH     {r4,lr}
;;;135    {
000002  4604              MOV      r4,r0
;;;136    
;;;137    	if(Time	==	0)
000004  b904              CBNZ     r4,|L4.8|
                  |L4.6|
;;;138    		return;
;;;139    	
;;;140    	RCC_GetClocksFreq(&RCC_ClocksStatus);	//获取时钟参数
;;;141    	
;;;142    	SysTick->CTRL &= 0xFFFFFFFD;									//SysTick_ITConfig(DISABLE);					//关闭中断
;;;143    	SysTick->CTRL &= SysTick_Counter_Disable;			//SysTick_CounterCmd(SysTick_Counter_Disable);	//关闭计数
;;;144    //	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;145    	SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;	//SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;146    	SysTick->LOAD = (((RCC_ClocksStatus.SYSCLK_Frequency)/8000));	//SysTick_SetReload(9*time);				//Time--mS  -8为了减小误差，不可以-9，防止Time==1的情况	
;;;147    	SysTick->CTRL |= SysTick_Counter_Enable;			//SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;148    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值	
;;;149    	while(Time)
;;;150    	{
;;;151    		while(SysTick->VAL	==	0);			//等待开始装载
;;;152    		while(SysTick->VAL	!=	0);			//等待倒计数完成
;;;153    		Time--;
;;;154    	}	
;;;155    	
;;;156    	SysTick->LOAD	=	Load;			//恢复原控制参数
;;;157    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;158    	SysTick->CTRL	=	Ctrl;			//恢复原控制参数
;;;159    }
000006  bd10              POP      {r4,pc}
                  |L4.8|
000008  4820              LDR      r0,|L4.140|
00000a  f7fffffe          BL       RCC_GetClocksFreq
00000e  f04f20e0          MOV      r0,#0xe000e000        ;142
000012  6900              LDR      r0,[r0,#0x10]         ;142
000014  f0200002          BIC      r0,r0,#2              ;142
000018  f04f21e0          MOV      r1,#0xe000e000        ;142
00001c  6108              STR      r0,[r1,#0x10]         ;142
00001e  4608              MOV      r0,r1                 ;143
000020  6900              LDR      r0,[r0,#0x10]         ;143
000022  f0200001          BIC      r0,r0,#1              ;143
000026  6108              STR      r0,[r1,#0x10]         ;143
000028  4608              MOV      r0,r1                 ;145
00002a  6900              LDR      r0,[r0,#0x10]         ;145
00002c  f0200004          BIC      r0,r0,#4              ;145
000030  6108              STR      r0,[r1,#0x10]         ;145
000032  4816              LDR      r0,|L4.140|
000034  6800              LDR      r0,[r0,#0]            ;146  ; RCC_ClocksStatus
000036  f44f51fa          MOV      r1,#0x1f40            ;146
00003a  fbb0f0f1          UDIV     r0,r0,r1              ;146
00003e  f04f21e0          MOV      r1,#0xe000e000        ;146
000042  6148              STR      r0,[r1,#0x14]         ;146
000044  4608              MOV      r0,r1                 ;147
000046  6900              LDR      r0,[r0,#0x10]         ;147
000048  f0400001          ORR      r0,r0,#1              ;147
00004c  6108              STR      r0,[r1,#0x10]         ;147
00004e  2000              MOVS     r0,#0                 ;148
000050  6188              STR      r0,[r1,#0x18]         ;148
000052  e00c              B        |L4.110|
                  |L4.84|
000054  bf00              NOP                            ;151
                  |L4.86|
000056  f04f20e0          MOV      r0,#0xe000e000        ;151
00005a  6980              LDR      r0,[r0,#0x18]         ;151
00005c  2800              CMP      r0,#0                 ;151
00005e  d0fa              BEQ      |L4.86|
000060  bf00              NOP                            ;152
                  |L4.98|
000062  f04f20e0          MOV      r0,#0xe000e000        ;152
000066  6980              LDR      r0,[r0,#0x18]         ;152
000068  2800              CMP      r0,#0                 ;152
00006a  d1fa              BNE      |L4.98|
00006c  1e64              SUBS     r4,r4,#1              ;153
                  |L4.110|
00006e  2c00              CMP      r4,#0                 ;149
000070  d1f0              BNE      |L4.84|
000072  4807              LDR      r0,|L4.144|
000074  6800              LDR      r0,[r0,#0]            ;156  ; Load
000076  f04f21e0          MOV      r1,#0xe000e000        ;156
00007a  6148              STR      r0,[r1,#0x14]         ;156
00007c  2000              MOVS     r0,#0                 ;157
00007e  6188              STR      r0,[r1,#0x18]         ;157
000080  4804              LDR      r0,|L4.148|
000082  6800              LDR      r0,[r0,#0]            ;158  ; Ctrl
000084  6108              STR      r0,[r1,#0x10]         ;158
000086  bf00              NOP      
000088  e7bd              B        |L4.6|
;;;160    /*******************************************************************************
                          ENDP

00008a  0000              DCW      0x0000
                  |L4.140|
                          DCD      RCC_ClocksStatus
                  |L4.144|
                          DCD      Load
                  |L4.148|
                          DCD      Ctrl

                          AREA ||i.SysTick_DeleyuS||, CODE, READONLY, ALIGN=2

                  SysTick_DeleyuS PROC
;;;97     *******************************************************************************/
;;;98     void SysTick_DeleyuS(unsigned int Time)
000000  b538              PUSH     {r3-r5,lr}
;;;99     {
000002  4604              MOV      r4,r0
;;;100    	
;;;101    	vu32 LOADTemp	=	0;			//SysTick重装载值寄存器--最大计数0xFFFFFF：Systick是一个递减的定时器，当定时器递减至0时，重载寄存器中的值就会被重装载，继续开始递减。
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;102    	
;;;103    	if(Time	==	0)
000008  b904              CBNZ     r4,|L5.12|
                  |L5.10|
;;;104    		return;
;;;105    	
;;;106    	RCC_GetClocksFreq(&RCC_ClocksStatus);	//获取时钟参数
;;;107    	
;;;108    	SysTick->CTRL &= 0xFFFFFFFD;									//SysTick_ITConfig(DISABLE);					//关闭中断
;;;109    	SysTick->CTRL &= SysTick_Counter_Disable;			//SysTick_CounterCmd(SysTick_Counter_Disable);	//关闭计数
;;;110    //	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;111    	SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;	//SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);			//系统时钟/8==9MHz
;;;112    	SysTick->LOAD = (RCC_ClocksStatus.SYSCLK_Frequency/8000000)*Time;	//SysTick_SetReload(9*time);				//Time--uS  -8为了减小误差，不可以-9，防止Time==1的情况
;;;113    	SysTick->CTRL |= SysTick_Counter_Enable;			//SysTick_CounterCmd(SysTick_Counter_Enable);	//使能计数
;;;114    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;115    	
;;;116    	while(SysTick->VAL	==	0);			//等待开始装载
;;;117    	while(SysTick->VAL	!=	0);			//等待倒计数完成
;;;118    
;;;119    	
;;;120    	
;;;121    	SysTick->LOAD	=	Load;			//恢复原控制参数
;;;122    	SysTick->VAL = SysTick_Counter_Clear;					//SysTick_CounterCmd(SysTick_Counter_Clear);	//清除倒计数值
;;;123    	SysTick->CTRL	=	Ctrl;			//恢复原控制参数
;;;124    }
00000a  bd38              POP      {r3-r5,pc}
                  |L5.12|
00000c  481e              LDR      r0,|L5.136|
00000e  f7fffffe          BL       RCC_GetClocksFreq
000012  f04f20e0          MOV      r0,#0xe000e000        ;108
000016  6900              LDR      r0,[r0,#0x10]         ;108
000018  f0200002          BIC      r0,r0,#2              ;108
00001c  f04f21e0          MOV      r1,#0xe000e000        ;108
000020  6108              STR      r0,[r1,#0x10]         ;108
000022  4608              MOV      r0,r1                 ;109
000024  6900              LDR      r0,[r0,#0x10]         ;109
000026  f0200001          BIC      r0,r0,#1              ;109
00002a  6108              STR      r0,[r1,#0x10]         ;109
00002c  4608              MOV      r0,r1                 ;111
00002e  6900              LDR      r0,[r0,#0x10]         ;111
000030  f0200004          BIC      r0,r0,#4              ;111
000034  6108              STR      r0,[r1,#0x10]         ;111
000036  4814              LDR      r0,|L5.136|
000038  6800              LDR      r0,[r0,#0]            ;112  ; RCC_ClocksStatus
00003a  4914              LDR      r1,|L5.140|
00003c  fbb0f0f1          UDIV     r0,r0,r1              ;112
000040  4360              MULS     r0,r4,r0              ;112
000042  f04f21e0          MOV      r1,#0xe000e000        ;112
000046  6148              STR      r0,[r1,#0x14]         ;112
000048  4608              MOV      r0,r1                 ;113
00004a  6900              LDR      r0,[r0,#0x10]         ;113
00004c  f0400001          ORR      r0,r0,#1              ;113
000050  6108              STR      r0,[r1,#0x10]         ;113
000052  2000              MOVS     r0,#0                 ;114
000054  6188              STR      r0,[r1,#0x18]         ;114
000056  bf00              NOP                            ;116
                  |L5.88|
000058  f04f20e0          MOV      r0,#0xe000e000        ;116
00005c  6980              LDR      r0,[r0,#0x18]         ;116
00005e  2800              CMP      r0,#0                 ;116
000060  d0fa              BEQ      |L5.88|
000062  bf00              NOP                            ;117
                  |L5.100|
000064  f04f20e0          MOV      r0,#0xe000e000        ;117
000068  6980              LDR      r0,[r0,#0x18]         ;117
00006a  2800              CMP      r0,#0                 ;117
00006c  d1fa              BNE      |L5.100|
00006e  4808              LDR      r0,|L5.144|
000070  6800              LDR      r0,[r0,#0]            ;121  ; Load
000072  f04f21e0          MOV      r1,#0xe000e000        ;121
000076  6148              STR      r0,[r1,#0x14]         ;121
000078  2000              MOVS     r0,#0                 ;122
00007a  6188              STR      r0,[r1,#0x18]         ;122
00007c  4805              LDR      r0,|L5.148|
00007e  6800              LDR      r0,[r0,#0]            ;123  ; Ctrl
000080  6108              STR      r0,[r1,#0x10]         ;123
000082  bf00              NOP      
000084  e7c1              B        |L5.10|
;;;125    /*******************************************************************************
                          ENDP

000086  0000              DCW      0x0000
                  |L5.136|
                          DCD      RCC_ClocksStatus
                  |L5.140|
                          DCD      0x007a1200
                  |L5.144|
                          DCD      Load
                  |L5.148|
                          DCD      Ctrl

                          AREA ||i.SysTick_Server||, CODE, READONLY, ALIGN=1

                  SysTick_Server PROC
;;;84     *******************************************************************************/
;;;85     void SysTick_Server(void)				//嘀嗒时钟服务
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87     	WOW_Server();	
000002  f7fffffe          BL       WOW_Server
;;;88     }
000006  bd10              POP      {r4,pc}
;;;89     /*******************************************************************************
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  RCC_ClocksStatus
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  Load
                          DCD      0x00000000
                  Ctrl
                          DCD      0x00000000
