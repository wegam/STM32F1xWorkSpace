; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\tm1616.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\tm1616.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\tm1616.crf ..\..\Driver\Components\SCR\TM1616.C]
                          THUMB

                          AREA ||i.TM1616_Delay||, CODE, READONLY, ALIGN=1

                  TM1616_Delay PROC
;;;31     *******************************************************************************/
;;;32     void TM1616_Delay(u16 time)
000000  bf00              NOP      
                  |L1.2|
;;;33     {
;;;34     	while(time--);
000002  1e01              SUBS     r1,r0,#0
000004  f1a00201          SUB      r2,r0,#1
000008  b290              UXTH     r0,r2
00000a  d1fa              BNE      |L1.2|
;;;35     }
00000c  4770              BX       lr
;;;36     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1616_Display||, CODE, READONLY, ALIGN=2

                  TM1616_Display PROC
;;;41     *******************************************************************************/
;;;42     void TM1616_Display(TM1616Def *Pinfo,u16 Data)
000000  b570              PUSH     {r4-r6,lr}
;;;43     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;44     	TM1616_WriteCommand(Pinfo,0x00);		//显示模式
000006  2100              MOVS     r1,#0
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       TM1616_WriteCommand
;;;45     	TM1616_WriteCommand(Pinfo,0x40);		//地址自增命令	
00000e  2140              MOVS     r1,#0x40
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       TM1616_WriteCommand
;;;46     
;;;47     	Pinfo->STB_PORT->BRR = Pinfo->STB_Pin;		//stb=0;
000016  8aa0              LDRH     r0,[r4,#0x14]
000018  6921              LDR      r1,[r4,#0x10]
00001a  6148              STR      r0,[r1,#0x14]
;;;48     	
;;;49     	TM1616_Delay(2);
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       TM1616_Delay
;;;50     	
;;;51     	TM1616_WriteByte(Pinfo,0xC0);    //设置起始地址
000022  21c0              MOVS     r1,#0xc0
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       TM1616_WriteByte
;;;52     	
;;;53     	TM1616_WriteByte(Pinfo,TM1616_SegCode[(Data/1000)%10]);
00002a  f44f707a          MOV      r0,#0x3e8
00002e  fb95f0f0          SDIV     r0,r5,r0
000032  210a              MOVS     r1,#0xa
000034  fb90f2f1          SDIV     r2,r0,r1
000038  fb010012          MLS      r0,r1,r2,r0
00003c  4923              LDR      r1,|L2.204|
00003e  5c0e              LDRB     r6,[r1,r0]
000040  4631              MOV      r1,r6
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       TM1616_WriteByte
;;;54     	TM1616_WriteByte(Pinfo,0x00);
000048  2100              MOVS     r1,#0
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       TM1616_WriteByte
;;;55     	TM1616_WriteByte(Pinfo,TM1616_SegCode[(Data/100)%10]);
000050  2064              MOVS     r0,#0x64
000052  fb95f0f0          SDIV     r0,r5,r0
000056  210a              MOVS     r1,#0xa
000058  fb90f2f1          SDIV     r2,r0,r1
00005c  fb010012          MLS      r0,r1,r2,r0
000060  491a              LDR      r1,|L2.204|
000062  5c0e              LDRB     r6,[r1,r0]
000064  4631              MOV      r1,r6
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       TM1616_WriteByte
;;;56     	TM1616_WriteByte(Pinfo,0x00);
00006c  2100              MOVS     r1,#0
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       TM1616_WriteByte
;;;57     	TM1616_WriteByte(Pinfo,TM1616_SegCode[(Data/10)%10]);
000074  200a              MOVS     r0,#0xa
000076  fb95f0f0          SDIV     r0,r5,r0
00007a  210a              MOVS     r1,#0xa
00007c  fb90f2f1          SDIV     r2,r0,r1
000080  fb010012          MLS      r0,r1,r2,r0
000084  4911              LDR      r1,|L2.204|
000086  5c0e              LDRB     r6,[r1,r0]
000088  4631              MOV      r1,r6
00008a  4620              MOV      r0,r4
00008c  f7fffffe          BL       TM1616_WriteByte
;;;58     	TM1616_WriteByte(Pinfo,0x00);
000090  2100              MOVS     r1,#0
000092  4620              MOV      r0,r4
000094  f7fffffe          BL       TM1616_WriteByte
;;;59     	TM1616_WriteByte(Pinfo,TM1616_SegCode[Data%10]);
000098  200a              MOVS     r0,#0xa
00009a  fb95f1f0          SDIV     r1,r5,r0
00009e  fb005011          MLS      r0,r0,r1,r5
0000a2  490a              LDR      r1,|L2.204|
0000a4  5c0e              LDRB     r6,[r1,r0]
0000a6  4631              MOV      r1,r6
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       TM1616_WriteByte
;;;60     	TM1616_WriteByte(Pinfo,0x00);
0000ae  2100              MOVS     r1,#0
0000b0  4620              MOV      r0,r4
0000b2  f7fffffe          BL       TM1616_WriteByte
;;;61     	
;;;62     	TM1616_Delay(2);
0000b6  2002              MOVS     r0,#2
0000b8  f7fffffe          BL       TM1616_Delay
;;;63     	Pinfo->STB_PORT->BSRR = Pinfo->STB_Pin;		//stb=1;
0000bc  8aa0              LDRH     r0,[r4,#0x14]
0000be  6921              LDR      r1,[r4,#0x10]
0000c0  6108              STR      r0,[r1,#0x10]
;;;64     	
;;;65     	TM1616_WriteCommand(Pinfo,0x8D);		//亮度命令	
0000c2  218d              MOVS     r1,#0x8d
0000c4  4620              MOV      r0,r4
0000c6  f7fffffe          BL       TM1616_WriteCommand
;;;66     }
0000ca  bd70              POP      {r4-r6,pc}
;;;67     /*******************************************************************************
                          ENDP

                  |L2.204|
                          DCD      TM1616_SegCode

                          AREA ||i.TM1616_Initialize||, CODE, READONLY, ALIGN=1

                  TM1616_Initialize PROC
;;;19     *******************************************************************************/
;;;20     void TM1616_Initialize(TM1616Def *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;21     {
000002  4604              MOV      r4,r0
;;;22     	GPIO_Configuration_OPP50	(Pinfo->DIO_PORT,		Pinfo->DIO_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_Configuration_OPP50
;;;23     	GPIO_Configuration_OPP50	(Pinfo->CLK_PORT,		Pinfo->CLK_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_Configuration_OPP50
;;;24     	GPIO_Configuration_OPP50	(Pinfo->STB_PORT,		Pinfo->STB_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000014  8aa1              LDRH     r1,[r4,#0x14]
000016  6920              LDR      r0,[r4,#0x10]
000018  f7fffffe          BL       GPIO_Configuration_OPP50
;;;25     }
00001c  bd10              POP      {r4,pc}
;;;26     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1616_WriteByte||, CODE, READONLY, ALIGN=1

                  TM1616_WriteByte PROC
;;;72     *******************************************************************************/
;;;73     static void TM1616_WriteByte(TM1616Def *Pinfo,unsigned char byted)
000000  b570              PUSH     {r4-r6,lr}
;;;74     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;75     	unsigned char i=0;
000006  2600              MOVS     r6,#0
;;;76     	for(i=0;i<8;i++)
000008  bf00              NOP      
00000a  e01a              B        |L4.66|
                  |L4.12|
;;;77     	{
;;;78     		GPIO_ResetBits(Pinfo->CLK_PORT, Pinfo->CLK_Pin);
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_ResetBits
;;;79     		TM1616_Delay(2);
000014  2002              MOVS     r0,#2
000016  f7fffffe          BL       TM1616_Delay
;;;80     		if((byted&0x01)==0x01)						 //确认最低位数，从低位开始写入
00001a  f0050001          AND      r0,r5,#1
00001e  b118              CBZ      r0,|L4.40|
;;;81     		{
;;;82     			Pinfo->DIO_PORT->BSRR = Pinfo->DIO_Pin;		//dio=1;
000020  88a0              LDRH     r0,[r4,#4]
000022  6821              LDR      r1,[r4,#0]
000024  6108              STR      r0,[r1,#0x10]
000026  e002              B        |L4.46|
                  |L4.40|
;;;83     		}
;;;84     		else
;;;85     		{
;;;86     			Pinfo->DIO_PORT->BRR = Pinfo->DIO_Pin;		//dio=0;
000028  88a0              LDRH     r0,[r4,#4]
00002a  6821              LDR      r1,[r4,#0]
00002c  6148              STR      r0,[r1,#0x14]
                  |L4.46|
;;;87     		}
;;;88     		TM1616_Delay(2);
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       TM1616_Delay
;;;89     		GPIO_SetBits(Pinfo->CLK_PORT, Pinfo->CLK_Pin);
000034  89a1              LDRH     r1,[r4,#0xc]
000036  68a0              LDR      r0,[r4,#8]
000038  f7fffffe          BL       GPIO_SetBits
;;;90     		//TM1616_Delay(1);
;;;91     		byted=byted>>1;							 //右移一位		
00003c  106d              ASRS     r5,r5,#1
00003e  1c70              ADDS     r0,r6,#1              ;76
000040  b2c6              UXTB     r6,r0                 ;76
                  |L4.66|
000042  2e08              CMP      r6,#8                 ;76
000044  dbe2              BLT      |L4.12|
;;;92     	}
;;;93     }
000046  bd70              POP      {r4-r6,pc}
;;;94     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1616_WriteCommand||, CODE, READONLY, ALIGN=1

                  TM1616_WriteCommand PROC
;;;99     *******************************************************************************/
;;;100    static void TM1616_WriteCommand(TM1616Def *Pinfo,unsigned char command)
000000  b570              PUSH     {r4-r6,lr}
;;;101    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;102    	Pinfo->STB_PORT->BRR = Pinfo->STB_Pin;		//stb=0;
000006  8aa0              LDRH     r0,[r4,#0x14]
000008  6921              LDR      r1,[r4,#0x10]
00000a  6148              STR      r0,[r1,#0x14]
;;;103    	TM1616_Delay(1);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       TM1616_Delay
;;;104    	TM1616_WriteByte(Pinfo,command);
000012  4629              MOV      r1,r5
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       TM1616_WriteByte
;;;105    	TM1616_Delay(1);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       TM1616_Delay
;;;106    	Pinfo->STB_PORT->BSRR = Pinfo->STB_Pin;		//stb=1;
000020  8aa0              LDRH     r0,[r4,#0x14]
000022  6921              LDR      r1,[r4,#0x10]
000024  6108              STR      r0,[r1,#0x10]
;;;107    }
000026  bd70              POP      {r4-r6,pc}
;;;108    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  TM1616_Daddr
000000  c0c2c4c6          DCB      0xc0,0xc2,0xc4,0xc6
000004  c8caccce          DCB      0xc8,0xca,0xcc,0xce
                  TM1616_SegCode
000008  3f065b4f          DCB      0x3f,0x06,0x5b,0x4f
00000c  666d7d07          DCB      0x66,0x6d,0x7d,0x07
000010  7f6f00ff          DCB      0x7f,0x6f,0x00,0xff
                  TM1616_CovSeg
000014  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000
