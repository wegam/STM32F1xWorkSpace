; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\drv8801.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\drv8801.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\drv8801.crf ..\..\Driver\Components\SCR\DRV8801.C]
                          THUMB

                          AREA ||i.DRV8801_Brake_FCCW||, CODE, READONLY, ALIGN=1

                  DRV8801_Brake_FCCW PROC
;;;150    *******************************************************************************/
;;;151    void DRV8801_Brake_FCCW(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;152    {
000002  4604              MOV      r4,r0
;;;153    	//慢急停 P通道放电：PHASE=0;ENABLE=0;nSLEEP=1;MODE1=0;MODE2=X;
;;;154    	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;155    	
;;;156    	GPIO_ResetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);		//反转--逆时针
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_ResetBits
;;;157    	GPIO_ResetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);					//使能	
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_ResetBits
;;;158    	
;;;159    	
;;;160    	GPIO_ResetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//0
00001c  8ca1              LDRH     r1,[r4,#0x24]
00001e  6a20              LDR      r0,[r4,#0x20]
000020  f7fffffe          BL       GPIO_ResetBits
;;;161    	GPIO_SetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
000024  8da1              LDRH     r1,[r4,#0x2c]
000026  6aa0              LDR      r0,[r4,#0x28]
000028  f7fffffe          BL       GPIO_SetBits
;;;162    	
;;;163    	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
00002c  8aa1              LDRH     r1,[r4,#0x14]
00002e  6920              LDR      r0,[r4,#0x10]
000030  f7fffffe          BL       GPIO_SetBits
;;;164    }
000034  bd10              POP      {r4,pc}
;;;165    /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_Brake_FCW||, CODE, READONLY, ALIGN=1

                  DRV8801_Brake_FCW PROC
;;;131    *******************************************************************************/
;;;132    void DRV8801_Brake_FCW(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;133    {
000002  4604              MOV      r4,r0
;;;134    	//慢急停 N通道放电：PHASE=1;ENABLE=0;nSLEEP=1;MODE1=0;MODE2=X;
;;;135    	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;136    	
;;;137    	GPIO_SetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);		//反转--逆时针
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_SetBits
;;;138    	GPIO_ResetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);				//使能	
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_ResetBits
;;;139    	
;;;140    	GPIO_ResetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//1
00001c  8ca1              LDRH     r1,[r4,#0x24]
00001e  6a20              LDR      r0,[r4,#0x20]
000020  f7fffffe          BL       GPIO_ResetBits
;;;141    	GPIO_SetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
000024  8da1              LDRH     r1,[r4,#0x2c]
000026  6aa0              LDR      r0,[r4,#0x28]
000028  f7fffffe          BL       GPIO_SetBits
;;;142    	
;;;143    	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);		//关闭睡眠模式
00002c  8aa1              LDRH     r1,[r4,#0x14]
00002e  6920              LDR      r0,[r4,#0x10]
000030  f7fffffe          BL       GPIO_SetBits
;;;144    }
000034  bd10              POP      {r4,pc}
;;;145    /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_Brake_SN||, CODE, READONLY, ALIGN=1

                  DRV8801_Brake_SN PROC
;;;92     *******************************************************************************/
;;;93     void DRV8801_Brake_SN(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95     	//慢急停 N通道放电：PHASE=X;ENABLE=0;nSLEEP=1;MODE1=1;MODE2=0;
;;;96     	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;97     	
;;;98     	
;;;99     	GPIO_ResetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);	//反转--逆时针
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_ResetBits
;;;100    	GPIO_ResetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);					//使能	
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_ResetBits
;;;101    	GPIO_SetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//无效
00001c  8ca1              LDRH     r1,[r4,#0x24]
00001e  6a20              LDR      r0,[r4,#0x20]
000020  f7fffffe          BL       GPIO_SetBits
;;;102    	GPIO_ResetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
000024  8da1              LDRH     r1,[r4,#0x2c]
000026  6aa0              LDR      r0,[r4,#0x28]
000028  f7fffffe          BL       GPIO_ResetBits
;;;103    	
;;;104    	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);		//关闭睡眠模式
00002c  8aa1              LDRH     r1,[r4,#0x14]
00002e  6920              LDR      r0,[r4,#0x10]
000030  f7fffffe          BL       GPIO_SetBits
;;;105    }
000034  bd10              POP      {r4,pc}
;;;106    /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_Brake_SP||, CODE, READONLY, ALIGN=1

                  DRV8801_Brake_SP PROC
;;;111    *******************************************************************************/
;;;112    void DRV8801_Brake_SP(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;113    {
000002  4604              MOV      r4,r0
;;;114    	//慢急停 P通道放电：PHASE=X;ENABLE=0;nSLEEP=1;MODE1=1;MODE2=1;
;;;115    	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;116    	
;;;117    	
;;;118    	GPIO_ResetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);	//反转--逆时针
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_ResetBits
;;;119    	GPIO_ResetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);					//使能	
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_ResetBits
;;;120    	GPIO_SetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//无效
00001c  8ca1              LDRH     r1,[r4,#0x24]
00001e  6a20              LDR      r0,[r4,#0x20]
000020  f7fffffe          BL       GPIO_SetBits
;;;121    	GPIO_SetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
000024  8da1              LDRH     r1,[r4,#0x2c]
000026  6aa0              LDR      r0,[r4,#0x28]
000028  f7fffffe          BL       GPIO_SetBits
;;;122    	
;;;123    	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);		//关闭睡眠模式
00002c  8aa1              LDRH     r1,[r4,#0x14]
00002e  6920              LDR      r0,[r4,#0x10]
000030  f7fffffe          BL       GPIO_SetBits
;;;124    	
;;;125    }
000034  bd10              POP      {r4,pc}
;;;126    /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_CCW||, CODE, READONLY, ALIGN=1

                  DRV8801_CCW PROC
;;;74     *******************************************************************************/
;;;75     void DRV8801_CCW(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;76     {
000002  4604              MOV      r4,r0
;;;77     	//逆时针：PHASE=0;ENABLE=1;nSLEEP=1;MODE1=X;MODE2=X;
;;;78     	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;79     	
;;;80     	GPIO_ResetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);	//反转--逆时针
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_ResetBits
;;;81     	GPIO_SetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);					//使能	
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_SetBits
;;;82     	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);		//关闭睡眠模式
00001c  8aa1              LDRH     r1,[r4,#0x14]
00001e  6920              LDR      r0,[r4,#0x10]
000020  f7fffffe          BL       GPIO_SetBits
;;;83     	
;;;84     //	GPIO_SetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//无效
;;;85     //	GPIO_SetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
;;;86     }
000024  bd10              POP      {r4,pc}
;;;87     /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_CW||, CODE, READONLY, ALIGN=1

                  DRV8801_CW PROC
;;;55     *******************************************************************************/
;;;56     void DRV8801_CW(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;57     {
000002  4604              MOV      r4,r0
;;;58     	//顺时针：PHASE=1;ENABLE=1;nSLEEP=1;MODE1=X;MODE2=X;
;;;59     	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;60     	
;;;61     	GPIO_SetBits(Pinfo->DRV8801_PHASE_PORT, Pinfo->DRV8801_PHASE_Pin);		//正转--顺时针	
00000c  8ba1              LDRH     r1,[r4,#0x1c]
00000e  69a0              LDR      r0,[r4,#0x18]
000010  f7fffffe          BL       GPIO_SetBits
;;;62     	GPIO_SetBits(Pinfo->DRV8801_EN_PORT, Pinfo->DRV8801_EN_Pin);					//使能
000014  89a1              LDRH     r1,[r4,#0xc]
000016  68a0              LDR      r0,[r4,#8]
000018  f7fffffe          BL       GPIO_SetBits
;;;63     	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);		//关闭睡眠模式
00001c  8aa1              LDRH     r1,[r4,#0x14]
00001e  6920              LDR      r0,[r4,#0x10]
000020  f7fffffe          BL       GPIO_SetBits
;;;64     	
;;;65     	
;;;66     //	GPIO_SetBits(Pinfo->DRV8801_MODE1_PORT, Pinfo->DRV8801_MODE1_Pin);		//无效
;;;67     //	GPIO_SetBits(Pinfo->DRV8801_MODE2_PORT, Pinfo->DRV8801_MODE2_Pin);		//无效
;;;68     }
000024  bd10              POP      {r4,pc}
;;;69     /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_Delay||, CODE, READONLY, ALIGN=1

                  DRV8801_Delay PROC
;;;26     *******************************************************************************/
;;;27     void DRV8801_Delay(u16 time)
000000  bf00              NOP      
                  |L7.2|
;;;28     {
;;;29     	while(time--);
000002  1e01              SUBS     r1,r0,#0
000004  f1a00201          SUB      r2,r0,#1
000008  b290              UXTH     r0,r2
00000a  d1fa              BNE      |L7.2|
;;;30     }
00000c  4770              BX       lr
;;;31     /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_PinConf||, CODE, READONLY, ALIGN=1

                  DRV8801_PinConf PROC
;;;36     *******************************************************************************/
;;;37     void DRV8801_PinConf(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;38     {
000002  4604              MOV      r4,r0
;;;39     	GPIO_Configuration_INA		(Pinfo->DRV8801_VPORTI_PORT,	Pinfo->DRV8801_VPORTI_Pin);			//将GPIO相应管脚配置为模拟输入模式----V20170605
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_Configuration_INA
;;;40     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_EN_PORT,			Pinfo->DRV8801_EN_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_Configuration_OPP50
;;;41     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_SLEEP_PORT,		Pinfo->DRV8801_SLEEP_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000014  8aa1              LDRH     r1,[r4,#0x14]
000016  6920              LDR      r0,[r4,#0x10]
000018  f7fffffe          BL       GPIO_Configuration_OPP50
;;;42     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_PHASE_PORT,		Pinfo->DRV8801_PHASE_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00001c  8ba1              LDRH     r1,[r4,#0x1c]
00001e  69a0              LDR      r0,[r4,#0x18]
000020  f7fffffe          BL       GPIO_Configuration_OPP50
;;;43     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_MODE1_PORT,		Pinfo->DRV8801_MODE1_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000024  8ca1              LDRH     r1,[r4,#0x24]
000026  6a20              LDR      r0,[r4,#0x20]
000028  f7fffffe          BL       GPIO_Configuration_OPP50
;;;44     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_MODE2_PORT,		Pinfo->DRV8801_MODE2_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00002c  8da1              LDRH     r1,[r4,#0x2c]
00002e  6aa0              LDR      r0,[r4,#0x28]
000030  f7fffffe          BL       GPIO_Configuration_OPP50
;;;45     	GPIO_Configuration_OPP50	(Pinfo->DRV8801_FAULT_PORT,		Pinfo->DRV8801_FAULT_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000034  8ea1              LDRH     r1,[r4,#0x34]
000036  6b20              LDR      r0,[r4,#0x30]
000038  f7fffffe          BL       GPIO_Configuration_OPP50
;;;46     	
;;;47     	GPIO_ResetBits(Pinfo->DRV8801_EN_PORT, 		Pinfo->DRV8801_EN_Pin);
00003c  89a1              LDRH     r1,[r4,#0xc]
00003e  68a0              LDR      r0,[r4,#8]
000040  f7fffffe          BL       GPIO_ResetBits
;;;48     	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);
000044  8aa1              LDRH     r1,[r4,#0x14]
000046  6920              LDR      r0,[r4,#0x10]
000048  f7fffffe          BL       GPIO_ResetBits
;;;49     }
00004c  bd10              POP      {r4,pc}
;;;50     /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_Sleep||, CODE, READONLY, ALIGN=1

                  DRV8801_Sleep PROC
;;;170    *******************************************************************************/
;;;171    void DRV8801_Sleep(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;172    {
000002  4604              MOV      r4,r0
;;;173    	//慢急停 P通道放电：PHASE=0;ENABLE=0;nSLEEP=1;MODE1=0;MODE2=X;
;;;174    	GPIO_ResetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;175    }
00000c  bd10              POP      {r4,pc}
;;;176    /*******************************************************************************
                          ENDP


                          AREA ||i.DRV8801_WKup||, CODE, READONLY, ALIGN=1

                  DRV8801_WKup PROC
;;;181    *******************************************************************************/
;;;182    void DRV8801_WKup(DRV8801_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;183    {
000002  4604              MOV      r4,r0
;;;184    	//慢急停 P通道放电：PHASE=0;ENABLE=0;nSLEEP=1;MODE1=0;MODE2=X;
;;;185    	GPIO_SetBits(Pinfo->DRV8801_SLEEP_PORT, Pinfo->DRV8801_SLEEP_Pin);			//关闭睡眠模式
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_SetBits
;;;186    }
00000c  bd10              POP      {r4,pc}
;;;187    
                          ENDP

