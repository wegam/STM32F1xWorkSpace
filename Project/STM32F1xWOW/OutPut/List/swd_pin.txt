; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\swd_pin.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\swd_pin.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\swd_pin.crf ..\..\Driver\Protocol\swd_pin.c]
                          THUMB

                          AREA ||i.DELAY_US||, CODE, READONLY, ALIGN=1

                  DELAY_US PROC
;;;28     
;;;29     void DELAY_US(unsigned long us)
000000  b50c              PUSH     {r2,r3,lr}
;;;30     {
;;;31         volatile unsigned long i, j;
;;;32     
;;;33         for(i = 0; i < us; i++)
000002  2100              MOVS     r1,#0
000004  9101              STR      r1,[sp,#4]
000006  e00c              B        |L1.34|
                  |L1.8|
;;;34         {
;;;35             for(j = 0; j < 30U; j++)
000008  2100              MOVS     r1,#0
00000a  9100              STR      r1,[sp,#0]
00000c  e003              B        |L1.22|
                  |L1.14|
;;;36             {
;;;37                 __nop();
00000e  bf00              NOP      
000010  9900              LDR      r1,[sp,#0]            ;35
000012  1c49              ADDS     r1,r1,#1              ;35
000014  9100              STR      r1,[sp,#0]            ;35
                  |L1.22|
000016  9900              LDR      r1,[sp,#0]            ;35
000018  291e              CMP      r1,#0x1e              ;35
00001a  d3f8              BCC      |L1.14|
00001c  9901              LDR      r1,[sp,#4]            ;33
00001e  1c49              ADDS     r1,r1,#1              ;33
000020  9101              STR      r1,[sp,#4]            ;33
                  |L1.34|
000022  9901              LDR      r1,[sp,#4]            ;33
000024  4281              CMP      r1,r0                 ;33
000026  d3ef              BCC      |L1.8|
;;;38             }
;;;39         }
;;;40     
;;;41     }
000028  bd0c              POP      {r2,r3,pc}
;;;42     
                          ENDP


                          AREA ||i.PIN_DELAY||, CODE, READONLY, ALIGN=1

                  PIN_DELAY PROC
;;;42     
;;;43     void PIN_DELAY(void)
000000  2002              MOVS     r0,#2
;;;44     {
;;;45           unsigned short count;
;;;46           count = 2;
;;;47           while (--count);
000002  bf00              NOP      
                  |L2.4|
000004  1e41              SUBS     r1,r0,#1
000006  b289              UXTH     r1,r1
000008  1e08              SUBS     r0,r1,#0
00000a  d1fb              BNE      |L2.4|
;;;48     }
00000c  4770              BX       lr
;;;49     /*******************************************************************************
                          ENDP


                          AREA ||i.SW_CLOCK_CYCLE||, CODE, READONLY, ALIGN=2

                  SW_CLOCK_CYCLE PROC
;;;74     *******************************************************************************/
;;;75     void SW_CLOCK_CYCLE(void)
000000  f44f7000          MOV      r0,#0x200
;;;76     {
;;;77     //    SWCLK_CLR();		//SWCLK	=	LOW
;;;78     //    ///PIN_DELAY();	//此处以后增加频率关系
;;;79     //    SWCLK_SET();		//SWCLK	=	HIGH
;;;80     //    ///PIN_DELAY();
;;;81     	//20180605
;;;82     //	PIN_DELAY();
;;;83     	SWCLK_SET();		//SWCLK	=	HIGH
000004  4902              LDR      r1,|L3.16|
000006  6008              STR      r0,[r1,#0]
;;;84     //	PIN_DELAY();
;;;85     	SWCLK_CLR();		//SWCLK	=	LOW
000008  1d09              ADDS     r1,r1,#4
00000a  6008              STR      r0,[r1,#0]
;;;86     	
;;;87     }
00000c  4770              BX       lr
;;;88     /*******************************************************************************
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      0x40010810

                          AREA ||i.SW_PinInit||, CODE, READONLY, ALIGN=2

                  SW_PinInit PROC
;;;11     
;;;12     void SW_PinInit(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
;;;14         /* release trst pin */
;;;15         SWDIO_SET_OUTPUT() ;//SWDIO设置为输出
000002  f44f6180          MOV      r1,#0x400
000006  4811              LDR      r0,|L4.76|
000008  f7fffffe          BL       GPIO_Configuration_OPP50
;;;16     
;;;17         SWCLK_SET_OUTPUT();	//SWCLK设置为输出
00000c  f44f7100          MOV      r1,#0x200
000010  480e              LDR      r0,|L4.76|
000012  f7fffffe          BL       GPIO_Configuration_OPP50
;;;18         RESET_SET_OUTPUT();	//RESET设置为输出
000016  480e              LDR      r0,|L4.80|
000018  6800              LDR      r0,[r0,#0]
00001a  f4206070          BIC      r0,r0,#0xf00
00001e  490c              LDR      r1,|L4.80|
000020  6008              STR      r0,[r1,#0]
000022  4608              MOV      r0,r1
000024  6800              LDR      r0,[r0,#0]
000026  f4407040          ORR      r0,r0,#0x300
00002a  6008              STR      r0,[r1,#0]
;;;19         RESET_CLR();/////
00002c  2004              MOVS     r0,#4
00002e  4908              LDR      r1,|L4.80|
000030  3114              ADDS     r1,r1,#0x14
000032  6008              STR      r0,[r1,#0]
;;;20     
;;;21         SWDIO_SET();//(swdio)PB3输出1
000034  0200              LSLS     r0,r0,#8
000036  4905              LDR      r1,|L4.76|
000038  3110              ADDS     r1,r1,#0x10
00003a  6008              STR      r0,[r1,#0]
;;;22         SWCLK_CLR();//(swclk)PB2输出0
00003c  1040              ASRS     r0,r0,#1
00003e  1d09              ADDS     r1,r1,#4
000040  6008              STR      r0,[r1,#0]
;;;23         RESET_SET();//(Trst)PB10输出1
000042  2004              MOVS     r0,#4
000044  4902              LDR      r1,|L4.80|
000046  3110              ADDS     r1,r1,#0x10
000048  6008              STR      r0,[r1,#0]
;;;24     }
00004a  bd10              POP      {r4,pc}
;;;25     
                          ENDP

                  |L4.76|
                          DCD      0x40010800
                  |L4.80|
                          DCD      0x40010c00

                          AREA ||i.SW_READ_BIT||, CODE, READONLY, ALIGN=2

                  SW_READ_BIT PROC
;;;57     *******************************************************************************/
;;;58     unsigned long SW_READ_BIT(void)
000000  b510              PUSH     {r4,lr}
;;;59     {
;;;60         unsigned long bit;    
;;;61         bit = SWDIO_IN();
000002  f44f6180          MOV      r1,#0x400
000006  4806              LDR      r0,|L5.32|
000008  f7fffffe          BL       GPIO_ReadInputDataBit
00000c  4604              MOV      r4,r0
;;;62     		SWCLK_SET();				//SWCLK	=	HIGH	
00000e  f44f7000          MOV      r0,#0x200
000012  4903              LDR      r1,|L5.32|
000014  3110              ADDS     r1,r1,#0x10
000016  6008              STR      r0,[r1,#0]
;;;63     		SWCLK_CLR();		//SWCLK	=	LOW
000018  1d09              ADDS     r1,r1,#4
00001a  6008              STR      r0,[r1,#0]
;;;64         return bit;
00001c  4620              MOV      r0,r4
;;;65     }
00001e  bd10              POP      {r4,pc}
;;;66     /*******************************************************************************
                          ENDP

                  |L5.32|
                          DCD      0x40010800

                          AREA ||i.SW_WRITE_BIT||, CODE, READONLY, ALIGN=2

                  SW_WRITE_BIT PROC
;;;96     *******************************************************************************/
;;;97     void SW_WRITE_BIT(unsigned long bit)
000000  f0000101          AND      r1,r0,#1
;;;98     {    
;;;99       if(bit&0x01)
000004  b121              CBZ      r1,|L6.16|
;;;100      {
;;;101        SWDIO_PORT ->BSRR	=	SWDIO_PIN; //SWDIO_OUT(1)
000006  f44f6180          MOV      r1,#0x400
00000a  4a08              LDR      r2,|L6.44|
00000c  6011              STR      r1,[r2,#0]
00000e  e004              B        |L6.26|
                  |L6.16|
;;;102      }
;;;103      else
;;;104      {
;;;105        SWDIO_PORT ->BRR 	= SWDIO_PIN;  //SWDIO_OUT(0)
000010  f44f6180          MOV      r1,#0x400
000014  4a05              LDR      r2,|L6.44|
000016  1d12              ADDS     r2,r2,#4
000018  6011              STR      r1,[r2,#0]
                  |L6.26|
;;;106      }
;;;107      SWCLK_PORT ->BSRR	=	SWCLK_PIN;  //SWCLK	=	HIGH
00001a  f44f7100          MOV      r1,#0x200
00001e  4a03              LDR      r2,|L6.44|
000020  6011              STR      r1,[r2,#0]
;;;108      SWCLK_PORT ->BSRR	=	SWCLK_PIN;  //SWCLK	=	HIGH
000022  6011              STR      r1,[r2,#0]
;;;109      SWCLK_PORT ->BSRR	=	SWCLK_PIN;  //SWCLK	=	HIGH
000024  6011              STR      r1,[r2,#0]
;;;110      SWCLK_PORT ->BRR 	=	SWCLK_PIN;  //SWCLK	=	LOW
000026  1d12              ADDS     r2,r2,#4
000028  6011              STR      r1,[r2,#0]
;;;111    }
00002a  4770              BX       lr
;;;112    
                          ENDP

                  |L6.44|
                          DCD      0x40010810
