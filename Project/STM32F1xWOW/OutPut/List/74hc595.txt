; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\74hc595.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\74hc595.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\74hc595.crf ..\..\Driver\Components\SCR\74HC595.C]
                          THUMB

                          AREA ||i.HC595_Delay||, CODE, READONLY, ALIGN=1

                  HC595_Delay PROC
;;;37     *******************************************************************************/
;;;38     void HC595_Delay(u32 time)
000000  bf00              NOP      
                  |L1.2|
;;;39     {
;;;40     	while(time--);
000002  1e01              SUBS     r1,r0,#0
000004  f1a00001          SUB      r0,r0,#1
000008  d1fb              BNE      |L1.2|
;;;41     }
00000a  4770              BX       lr
;;;42     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_PinConf||, CODE, READONLY, ALIGN=1

                  HC595_PinConf PROC
;;;47     *******************************************************************************/
;;;48     void HC595_PinConf(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;49     {
000002  4604              MOV      r4,r0
;;;50     	GPIO_Configuration_OPP50	(Pinfo->HC595_SDA_PORT,		Pinfo->HC595_SDA_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_Configuration_OPP50
;;;51     	GPIO_Configuration_OPP50	(Pinfo->HC595_SCK_PORT,		Pinfo->HC595_SCK_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_Configuration_OPP50
;;;52     	GPIO_Configuration_OPP50	(Pinfo->HC595_RCK_PORT,		Pinfo->HC595_RCK_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000014  8aa1              LDRH     r1,[r4,#0x14]
000016  6920              LDR      r0,[r4,#0x10]
000018  f7fffffe          BL       GPIO_Configuration_OPP50
;;;53     	
;;;54     //	GPIO_Configuration_OPP50	(Pinfo->HC595_CLR_PORT,		Pinfo->HC595_CLR_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;55     //	GPIO_Configuration_OPP50	(Pinfo->HC595_OE_PORT,		Pinfo->HC595_OE_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;56     }
00001c  bd10              POP      {r4,pc}
;;;57     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_RCK_HIGH||, CODE, READONLY, ALIGN=1

                  HC595_RCK_HIGH PROC
;;;112    *******************************************************************************/
;;;113    void HC595_RCK_HIGH(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;114    {
000002  4604              MOV      r4,r0
;;;115    	GPIO_SetBits(Pinfo->HC595_RCK_PORT, Pinfo->HC595_RCK_Pin);
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_SetBits
;;;116    }
00000c  bd10              POP      {r4,pc}
;;;117    /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_RCK_LOW||, CODE, READONLY, ALIGN=1

                  HC595_RCK_LOW PROC
;;;102    *******************************************************************************/
;;;103    void HC595_RCK_LOW(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;104    {
000002  4604              MOV      r4,r0
;;;105    	GPIO_ResetBits(Pinfo->HC595_RCK_PORT, Pinfo->HC595_RCK_Pin);
000004  8aa1              LDRH     r1,[r4,#0x14]
000006  6920              LDR      r0,[r4,#0x10]
000008  f7fffffe          BL       GPIO_ResetBits
;;;106    }
00000c  bd10              POP      {r4,pc}
;;;107    /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_SCK_HIGH||, CODE, READONLY, ALIGN=1

                  HC595_SCK_HIGH PROC
;;;92     *******************************************************************************/
;;;93     void HC595_SCK_HIGH(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95     	GPIO_SetBits(Pinfo->HC595_SCK_PORT, Pinfo->HC595_SCK_Pin);
000004  89a1              LDRH     r1,[r4,#0xc]
000006  68a0              LDR      r0,[r4,#8]
000008  f7fffffe          BL       GPIO_SetBits
;;;96     }
00000c  bd10              POP      {r4,pc}
;;;97     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_SCK_LOW||, CODE, READONLY, ALIGN=1

                  HC595_SCK_LOW PROC
;;;82     *******************************************************************************/
;;;83     void HC595_SCK_LOW(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;84     {
000002  4604              MOV      r4,r0
;;;85     	GPIO_ResetBits(Pinfo->HC595_SCK_PORT, Pinfo->HC595_SCK_Pin);
000004  89a1              LDRH     r1,[r4,#0xc]
000006  68a0              LDR      r0,[r4,#8]
000008  f7fffffe          BL       GPIO_ResetBits
;;;86     }
00000c  bd10              POP      {r4,pc}
;;;87     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_SDA_HIGH||, CODE, READONLY, ALIGN=1

                  HC595_SDA_HIGH PROC
;;;72     *******************************************************************************/
;;;73     void HC595_SDA_HIGH(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75     	GPIO_SetBits(Pinfo->HC595_SDA_PORT, Pinfo->HC595_SDA_Pin);
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_SetBits
;;;76     }
00000c  bd10              POP      {r4,pc}
;;;77     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_SDA_LOW||, CODE, READONLY, ALIGN=1

                  HC595_SDA_LOW PROC
;;;62     *******************************************************************************/
;;;63     void HC595_SDA_LOW(HC595_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;64     {
000002  4604              MOV      r4,r0
;;;65     	GPIO_ResetBits(Pinfo->HC595_SDA_PORT, Pinfo->HC595_SDA_Pin);
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_ResetBits
;;;66     }
00000c  bd10              POP      {r4,pc}
;;;67     /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_WriteByte||, CODE, READONLY, ALIGN=1

                  HC595_WriteByte PROC
;;;122    *******************************************************************************/
;;;123    void HC595_WriteByte(HC595_Pindef *Pinfo,u8 Seg)
000000  b570              PUSH     {r4-r6,lr}
;;;124    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;125    	unsigned char i=0;
000006  2500              MOVS     r5,#0
;;;126    	for(i=0;i<8;i++)
000008  bf00              NOP      
00000a  e020              B        |L9.78|
                  |L9.12|
;;;127    	{
;;;128    		HC595_SCK_LOW(Pinfo);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       HC595_SCK_LOW
;;;129    		HC595_Delay(HC595Time);
000012  f2413088          MOV      r0,#0x1388
000016  f7fffffe          BL       HC595_Delay
;;;130    		if((Seg&0x80)==0x80)
00001a  f0040080          AND      r0,r4,#0x80
00001e  2880              CMP      r0,#0x80
000020  d103              BNE      |L9.42|
;;;131    		{
;;;132    			HC595_SDA_HIGH(Pinfo);
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       HC595_SDA_HIGH
000028  e002              B        |L9.48|
                  |L9.42|
;;;133    		}
;;;134    		else
;;;135    		{
;;;136    			HC595_SDA_LOW(Pinfo);
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       HC595_SDA_LOW
                  |L9.48|
;;;137    		}
;;;138    		Seg=Seg<<1;
000030  0660              LSLS     r0,r4,#25
000032  0e04              LSRS     r4,r0,#24
;;;139    		HC595_Delay(HC595Time);
000034  f2413088          MOV      r0,#0x1388
000038  f7fffffe          BL       HC595_Delay
;;;140    		HC595_SCK_HIGH(Pinfo);
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       HC595_SCK_HIGH
;;;141    		HC595_Delay(HC595Time);		
000042  f2413088          MOV      r0,#0x1388
000046  f7fffffe          BL       HC595_Delay
00004a  1c68              ADDS     r0,r5,#1              ;126
00004c  b2c5              UXTB     r5,r0                 ;126
                  |L9.78|
00004e  2d08              CMP      r5,#8                 ;126
000050  dbdc              BLT      |L9.12|
;;;142    	}	
;;;143    }
000052  bd70              POP      {r4-r6,pc}
;;;144    /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_WriteByteN||, CODE, READONLY, ALIGN=1

                  HC595_WriteByteN PROC
;;;149    *******************************************************************************/
;;;150    void HC595_WriteByteN(HC595_Pindef *Pinfo,u8 Seg)
000000  b570              PUSH     {r4-r6,lr}
;;;151    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;152    	unsigned char i=0;
000006  2500              MOVS     r5,#0
;;;153    	for(i=0;i<8;i++)
000008  bf00              NOP      
00000a  e020              B        |L10.78|
                  |L10.12|
;;;154    	{
;;;155    		HC595_SCK_HIGH(Pinfo);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       HC595_SCK_HIGH
;;;156    		HC595_Delay(HC595Time);
000012  f2413088          MOV      r0,#0x1388
000016  f7fffffe          BL       HC595_Delay
;;;157    		if((Seg&0x80)==0x80)
00001a  f0040080          AND      r0,r4,#0x80
00001e  2880              CMP      r0,#0x80
000020  d103              BNE      |L10.42|
;;;158    		{			
;;;159    			HC595_SDA_LOW(Pinfo);
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       HC595_SDA_LOW
000028  e002              B        |L10.48|
                  |L10.42|
;;;160    		}
;;;161    		else
;;;162    		{
;;;163    			HC595_SDA_HIGH(Pinfo);
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       HC595_SDA_HIGH
                  |L10.48|
;;;164    		}
;;;165    		Seg=Seg<<1;
000030  0660              LSLS     r0,r4,#25
000032  0e04              LSRS     r4,r0,#24
;;;166    		HC595_Delay(HC595Time);		
000034  f2413088          MOV      r0,#0x1388
000038  f7fffffe          BL       HC595_Delay
;;;167    		HC595_SCK_LOW(Pinfo);	
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       HC595_SCK_LOW
;;;168    		HC595_Delay(HC595Time);		
000042  f2413088          MOV      r0,#0x1388
000046  f7fffffe          BL       HC595_Delay
00004a  1c68              ADDS     r0,r5,#1              ;153
00004c  b2c5              UXTB     r5,r0                 ;153
                  |L10.78|
00004e  2d08              CMP      r5,#8                 ;153
000050  dbdc              BLT      |L10.12|
;;;169    	}	
;;;170    }
000052  bd70              POP      {r4-r6,pc}
;;;171    /*******************************************************************************
                          ENDP


                          AREA ||i.HC595_WriteNumber||, CODE, READONLY, ALIGN=2

                  HC595_WriteNumber PROC
;;;176    *******************************************************************************/
;;;177    void HC595_WriteNumber(HC595_Pindef *Pinfo,u8 num)
000000  b570              PUSH     {r4-r6,lr}
;;;178    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;179    	HC595_WriteByte(Pinfo,HC595_SegCode[num]);	
000006  4803              LDR      r0,|L11.20|
000008  5d01              LDRB     r1,[r0,r4]
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       HC595_WriteByte
;;;180    }
000010  bd70              POP      {r4-r6,pc}
;;;181    /*******************************************************************************
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      HC595_SegCode

                          AREA ||i.HC595_WriteNumberN||, CODE, READONLY, ALIGN=2

                  HC595_WriteNumberN PROC
;;;186    *******************************************************************************/
;;;187    void HC595_WriteNumberN(HC595_Pindef *Pinfo,u8 num)
000000  b570              PUSH     {r4-r6,lr}
;;;188    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;189    	HC595_WriteByteN(Pinfo,HC595_SegCode[num]);	
000006  4803              LDR      r0,|L12.20|
000008  5d01              LDRB     r1,[r0,r4]
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       HC595_WriteByteN
;;;190    }
000010  bd70              POP      {r4-r6,pc}
;;;191    
                          ENDP

000012  0000              DCW      0x0000
                  |L12.20|
                          DCD      HC595_SegCode

                          AREA ||.data||, DATA, ALIGN=0

                  HC595_SegCode
000000  c0f9a4b0          DCB      0xc0,0xf9,0xa4,0xb0
000004  999282f8          DCB      0x99,0x92,0x82,0xf8
000008  8090              DCB      0x80,0x90
