; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\r61509v.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\r61509v.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\r61509v.crf ..\..\Driver\Components\SCR\R61509V.c]
                          THUMB

                          AREA ||i.R61509V_Clean||, CODE, READONLY, ALIGN=2

                  R61509V_Clean PROC
;;;671    *******************************************************************************/
;;;672    void R61509V_Clean(u16 Color)	//清除屏幕函数
000000  e92d4ffc          PUSH     {r2-r11,lr}
;;;673    {
000004  4682              MOV      r10,r0
;;;674    	unsigned short x,y;
;;;675    	unsigned short HSX,HEX,HSY,HEY,MaxH,MaxV;
;;;676    	unsigned long	length	=	0;
000006  2000              MOVS     r0,#0
000008  9001              STR      r0,[sp,#4]
;;;677    	eRotate	Rotate	=	pR61509V->Flag.Rotate;
00000a  4822              LDR      r0,|L1.148|
00000c  6800              LDR      r0,[r0,#0]  ; pR61509V
00000e  f890b05c          LDRB     r11,[r0,#0x5c]
;;;678    	
;;;679    	MaxH	=	pR61509V->Data.MaxH;
000012  4820              LDR      r0,|L1.148|
000014  6800              LDR      r0,[r0,#0]  ; pR61509V
000016  f8b08040          LDRH     r8,[r0,#0x40]
;;;680    	MaxV	=	pR61509V->Data.MaxV;	
00001a  481e              LDR      r0,|L1.148|
00001c  6800              LDR      r0,[r0,#0]  ; pR61509V
00001e  f8b09042          LDRH     r9,[r0,#0x42]
;;;681    	switch(Rotate)
000022  f1bb0f00          CMP      r11,#0
000026  d006              BEQ      |L1.54|
000028  f1bb0f01          CMP      r11,#1
00002c  d00c              BEQ      |L1.72|
00002e  f1bb0f02          CMP      r11,#2
000032  d11b              BNE      |L1.108|
000034  e011              B        |L1.90|
                  |L1.54|
;;;682    	{
;;;683    		case 	Draw_Rotate_0D:
;;;684    					HSX	=	0;
000036  2400              MOVS     r4,#0
;;;685    					HEX	=	MaxH-1;
000038  f1a80001          SUB      r0,r8,#1
00003c  b285              UXTH     r5,r0
;;;686    					HSY	=	0;
00003e  2600              MOVS     r6,#0
;;;687    					HEY	=	MaxV-1;
000040  f1a90001          SUB      r0,r9,#1
000044  b287              UXTH     r7,r0
;;;688    			break;
000046  e01a              B        |L1.126|
                  |L1.72|
;;;689    		case	Draw_Rotate_90D:
;;;690    					HSX	=	0;
000048  2400              MOVS     r4,#0
;;;691    					HEX	=	MaxV-1;
00004a  f1a90001          SUB      r0,r9,#1
00004e  b285              UXTH     r5,r0
;;;692    					HSY	=	0;
000050  2600              MOVS     r6,#0
;;;693    					HEY	=	MaxH-1;
000052  f1a80001          SUB      r0,r8,#1
000056  b287              UXTH     r7,r0
;;;694    			break;
000058  e011              B        |L1.126|
                  |L1.90|
;;;695    		case	Draw_Rotate_180D:
;;;696    					HSX	=	0;
00005a  2400              MOVS     r4,#0
;;;697    					HEX	=	MaxH-1;
00005c  f1a80001          SUB      r0,r8,#1
000060  b285              UXTH     r5,r0
;;;698    					HSY	=	0;
000062  2600              MOVS     r6,#0
;;;699    					HEY	=	MaxV-1;
000064  f1a90001          SUB      r0,r9,#1
000068  b287              UXTH     r7,r0
;;;700    			break;
00006a  e008              B        |L1.126|
                  |L1.108|
;;;701    		default:
;;;702    					HSX	=	0;
00006c  2400              MOVS     r4,#0
;;;703    					HEX	=	MaxV-1;
00006e  f1a90001          SUB      r0,r9,#1
000072  b285              UXTH     r5,r0
;;;704    					HSY	=	0;
000074  2600              MOVS     r6,#0
;;;705    					HEY	=	MaxH-1;
000076  f1a80001          SUB      r0,r8,#1
00007a  b287              UXTH     r7,r0
;;;706    			break;			
00007c  bf00              NOP      
                  |L1.126|
00007e  bf00              NOP                            ;688
;;;707    	}	
;;;708    	R61509V_Fill(HSX,HSY,HEX,HEY,Color);
000080  463b              MOV      r3,r7
000082  462a              MOV      r2,r5
000084  4631              MOV      r1,r6
000086  4620              MOV      r0,r4
000088  f8cda000          STR      r10,[sp,#0]
00008c  f7fffffe          BL       R61509V_Fill
;;;709    }
000090  e8bd8ffc          POP      {r2-r11,pc}
;;;710    /**************************************************************************************************
                          ENDP

                  |L1.148|
                          DCD      pR61509V

                          AREA ||i.R61509V_DrawCircle||, CODE, READONLY, ALIGN=1

                  R61509V_DrawCircle PROC
;;;565    **************************************************************************************************/
;;;566    void R61509V_DrawCircle(
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;567    												u16 x,u16 y,		//圆心坐标原点
;;;568    												u16 r,					//半径
;;;569    												u8 Filled,			//是否填充
;;;570    												u16 color				//颜色
;;;571    												)
;;;572    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4692              MOV      r10,r2
00000a  469b              MOV      r11,r3
00000c  f8dd8028          LDR      r8,[sp,#0x28]
;;;573    	int a,b;
;;;574    	int di;
;;;575    	a=0;b=r;	  
000010  2400              MOVS     r4,#0
000012  4655              MOV      r5,r10
;;;576    	di=3-(r<<1);             //判断下个点位置的标志
000014  2003              MOVS     r0,#3
000016  eba0094a          SUB      r9,r0,r10,LSL #1
;;;577    	while(a<=b)
00001a  e0c8              B        |L2.430|
                  |L2.28|
;;;578    	{
;;;579    		if(Filled)	//填充就画线
00001c  f1bb0f00          CMP      r11,#0
000020  d072              BEQ      |L2.264|
;;;580    		{
;;;581    			R61509V_DrawLine(x,y,x-b,y-a,color);             //3           
000022  1b38              SUBS     r0,r7,r4
000024  b283              UXTH     r3,r0
000026  1b70              SUBS     r0,r6,r5
000028  b282              UXTH     r2,r0
00002a  4639              MOV      r1,r7
00002c  4630              MOV      r0,r6
00002e  f8cd8000          STR      r8,[sp,#0]
000032  f7fffffe          BL       R61509V_DrawLine
;;;582    			R61509V_DrawLine(x,y,x+b,y-a,color);             //0           
000036  1b38              SUBS     r0,r7,r4
000038  b283              UXTH     r3,r0
00003a  1970              ADDS     r0,r6,r5
00003c  b282              UXTH     r2,r0
00003e  4639              MOV      r1,r7
000040  4630              MOV      r0,r6
000042  f8cd8000          STR      r8,[sp,#0]
000046  f7fffffe          BL       R61509V_DrawLine
;;;583    			R61509V_DrawLine(x,y,x-a,y+b,color);             //1       
00004a  1978              ADDS     r0,r7,r5
00004c  b283              UXTH     r3,r0
00004e  1b30              SUBS     r0,r6,r4
000050  b282              UXTH     r2,r0
000052  4639              MOV      r1,r7
000054  4630              MOV      r0,r6
000056  f8cd8000          STR      r8,[sp,#0]
00005a  f7fffffe          BL       R61509V_DrawLine
;;;584    			R61509V_DrawLine(x,y,x-b,y-a,color);             //7           
00005e  1b38              SUBS     r0,r7,r4
000060  b283              UXTH     r3,r0
000062  1b70              SUBS     r0,r6,r5
000064  b282              UXTH     r2,r0
000066  4639              MOV      r1,r7
000068  4630              MOV      r0,r6
00006a  f8cd8000          STR      r8,[sp,#0]
00006e  f7fffffe          BL       R61509V_DrawLine
;;;585    			R61509V_DrawLine(x,y,x-a,y-b,color);             //2             
000072  1b78              SUBS     r0,r7,r5
000074  b283              UXTH     r3,r0
000076  1b30              SUBS     r0,r6,r4
000078  b282              UXTH     r2,r0
00007a  4639              MOV      r1,r7
00007c  4630              MOV      r0,r6
00007e  f8cd8000          STR      r8,[sp,#0]
000082  f7fffffe          BL       R61509V_DrawLine
;;;586    			R61509V_DrawLine(x,y,x+b,y+a,color);             //4               
000086  1938              ADDS     r0,r7,r4
000088  b283              UXTH     r3,r0
00008a  1970              ADDS     r0,r6,r5
00008c  b282              UXTH     r2,r0
00008e  4639              MOV      r1,r7
000090  4630              MOV      r0,r6
000092  f8cd8000          STR      r8,[sp,#0]
000096  f7fffffe          BL       R61509V_DrawLine
;;;587    			R61509V_DrawLine(x,y,x+a,y-b,color);             //5
00009a  1b78              SUBS     r0,r7,r5
00009c  b283              UXTH     r3,r0
00009e  1930              ADDS     r0,r6,r4
0000a0  b282              UXTH     r2,r0
0000a2  4639              MOV      r1,r7
0000a4  4630              MOV      r0,r6
0000a6  f8cd8000          STR      r8,[sp,#0]
0000aa  f7fffffe          BL       R61509V_DrawLine
;;;588    			R61509V_DrawLine(x,y,x+a,y+b,color);             //6 
0000ae  1978              ADDS     r0,r7,r5
0000b0  b283              UXTH     r3,r0
0000b2  1930              ADDS     r0,r6,r4
0000b4  b282              UXTH     r2,r0
0000b6  4639              MOV      r1,r7
0000b8  4630              MOV      r0,r6
0000ba  f8cd8000          STR      r8,[sp,#0]
0000be  f7fffffe          BL       R61509V_DrawLine
;;;589    			R61509V_DrawLine(x,y,x-b,y+a,color);             
0000c2  1938              ADDS     r0,r7,r4
0000c4  b283              UXTH     r3,r0
0000c6  1b70              SUBS     r0,r6,r5
0000c8  b282              UXTH     r2,r0
0000ca  4639              MOV      r1,r7
0000cc  4630              MOV      r0,r6
0000ce  f8cd8000          STR      r8,[sp,#0]
0000d2  f7fffffe          BL       R61509V_DrawLine
;;;590    			a++;
0000d6  1c64              ADDS     r4,r4,#1
;;;591    			//使用Bresenham算法画圆     
;;;592    			if(di<0)
0000d8  f1b90f00          CMP      r9,#0
0000dc  da03              BGE      |L2.230|
;;;593    				di +=4*a+6;	  
0000de  00a0              LSLS     r0,r4,#2
0000e0  1d80              ADDS     r0,r0,#6
0000e2  4481              ADD      r9,r9,r0
0000e4  e004              B        |L2.240|
                  |L2.230|
;;;594    			else
;;;595    			{
;;;596    				di+=10+4*(a-b);   
0000e6  1b60              SUBS     r0,r4,r5
0000e8  0080              LSLS     r0,r0,#2
0000ea  300a              ADDS     r0,r0,#0xa
0000ec  4481              ADD      r9,r9,r0
;;;597    				b--;
0000ee  1e6d              SUBS     r5,r5,#1
                  |L2.240|
;;;598    			}
;;;599    			R61509V_DrawLine(x,y,x+a,y+b,color);				//AB 两个坐标画一条直线
0000f0  1978              ADDS     r0,r7,r5
0000f2  b283              UXTH     r3,r0
0000f4  1930              ADDS     r0,r6,r4
0000f6  b282              UXTH     r2,r0
0000f8  4639              MOV      r1,r7
0000fa  4630              MOV      r0,r6
0000fc  f8cd8000          STR      r8,[sp,#0]
000100  f7fffffe          BL       R61509V_DrawLine
000104  e053              B        |L2.430|
000106  e7ff              B        |L2.264|
                  |L2.264|
;;;600    		}
;;;601    		else
;;;602    		{
;;;603    			R61509V_DrawDot(x-b,y-a,color);             //3           
000108  1b3a              SUBS     r2,r7,r4
00010a  b291              UXTH     r1,r2
00010c  1b72              SUBS     r2,r6,r5
00010e  b290              UXTH     r0,r2
000110  4642              MOV      r2,r8
000112  f7fffffe          BL       R61509V_DrawDot
;;;604    			R61509V_DrawDot(x+b,y-a,color);             //0           
000116  1b3a              SUBS     r2,r7,r4
000118  b291              UXTH     r1,r2
00011a  1972              ADDS     r2,r6,r5
00011c  b290              UXTH     r0,r2
00011e  4642              MOV      r2,r8
000120  f7fffffe          BL       R61509V_DrawDot
;;;605    			R61509V_DrawDot(x-a,y+b,color);             //1       
000124  197a              ADDS     r2,r7,r5
000126  b291              UXTH     r1,r2
000128  1b32              SUBS     r2,r6,r4
00012a  b290              UXTH     r0,r2
00012c  4642              MOV      r2,r8
00012e  f7fffffe          BL       R61509V_DrawDot
;;;606    			R61509V_DrawDot(x-b,y-a,color);             //7           
000132  1b3a              SUBS     r2,r7,r4
000134  b291              UXTH     r1,r2
000136  1b72              SUBS     r2,r6,r5
000138  b290              UXTH     r0,r2
00013a  4642              MOV      r2,r8
00013c  f7fffffe          BL       R61509V_DrawDot
;;;607    			R61509V_DrawDot(x-a,y-b,color);             //2             
000140  1b7a              SUBS     r2,r7,r5
000142  b291              UXTH     r1,r2
000144  1b32              SUBS     r2,r6,r4
000146  b290              UXTH     r0,r2
000148  4642              MOV      r2,r8
00014a  f7fffffe          BL       R61509V_DrawDot
;;;608    			R61509V_DrawDot(x+b,y+a,color);             //4               
00014e  193a              ADDS     r2,r7,r4
000150  b291              UXTH     r1,r2
000152  1972              ADDS     r2,r6,r5
000154  b290              UXTH     r0,r2
000156  4642              MOV      r2,r8
000158  f7fffffe          BL       R61509V_DrawDot
;;;609    			R61509V_DrawDot(x+a,y-b,color);             //5
00015c  1b7a              SUBS     r2,r7,r5
00015e  b291              UXTH     r1,r2
000160  1932              ADDS     r2,r6,r4
000162  b290              UXTH     r0,r2
000164  4642              MOV      r2,r8
000166  f7fffffe          BL       R61509V_DrawDot
;;;610    			R61509V_DrawDot(x+a,y+b,color);             //6 
00016a  197a              ADDS     r2,r7,r5
00016c  b291              UXTH     r1,r2
00016e  1932              ADDS     r2,r6,r4
000170  b290              UXTH     r0,r2
000172  4642              MOV      r2,r8
000174  f7fffffe          BL       R61509V_DrawDot
;;;611    			R61509V_DrawDot(x-b,y+a,color);             
000178  193a              ADDS     r2,r7,r4
00017a  b291              UXTH     r1,r2
00017c  1b72              SUBS     r2,r6,r5
00017e  b290              UXTH     r0,r2
000180  4642              MOV      r2,r8
000182  f7fffffe          BL       R61509V_DrawDot
;;;612    			a++;
000186  1c64              ADDS     r4,r4,#1
;;;613    			//使用Bresenham算法画圆     
;;;614    			if(di<0)
000188  f1b90f00          CMP      r9,#0
00018c  da03              BGE      |L2.406|
;;;615    				di +=4*a+6;	  
00018e  00a0              LSLS     r0,r4,#2
000190  1d80              ADDS     r0,r0,#6
000192  4481              ADD      r9,r9,r0
000194  e004              B        |L2.416|
                  |L2.406|
;;;616    			else
;;;617    			{
;;;618    				di+=10+4*(a-b);   
000196  1b60              SUBS     r0,r4,r5
000198  0080              LSLS     r0,r0,#2
00019a  300a              ADDS     r0,r0,#0xa
00019c  4481              ADD      r9,r9,r0
;;;619    				b--;
00019e  1e6d              SUBS     r5,r5,#1
                  |L2.416|
;;;620    			}
;;;621    				R61509V_DrawDot(x+a,y+b,color);
0001a0  197a              ADDS     r2,r7,r5
0001a2  b291              UXTH     r1,r2
0001a4  1932              ADDS     r2,r6,r4
0001a6  b290              UXTH     r0,r2
0001a8  4642              MOV      r2,r8
0001aa  f7fffffe          BL       R61509V_DrawDot
                  |L2.430|
0001ae  42ac              CMP      r4,r5                 ;577
0001b0  f77faf34          BLE      |L2.28|
;;;622    		}
;;;623    	}
;;;624    }
0001b4  e8bd8ff8          POP      {r3-r11,pc}
;;;625    /**************************************************************************************************
                          ENDP


                          AREA ||i.R61509V_DrawDot||, CODE, READONLY, ALIGN=1

                  R61509V_DrawDot PROC
;;;486    *******************************************************************************/
;;;487    void R61509V_DrawDot(
000000  b537              PUSH     {r0-r2,r4,r5,lr}
;;;488    									unsigned short HSX,			//点X坐标*/
;;;489    									unsigned short HSY,			//点Y坐标*/
;;;490    									unsigned short Color		//点颜色*/	
;;;491    								)
;;;492    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;493    	R61509V_SetWindowAddress(HSX,HSY,HSX,HSY);	//设置光标位置
000006  462b              MOV      r3,r5
000008  4622              MOV      r2,r4
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       R61509V_SetWindowAddress
;;;494    	R61509V_WriteGRAM(&Color,1);
000012  2101              MOVS     r1,#1
000014  a802              ADD      r0,sp,#8
000016  f7fffffe          BL       R61509V_WriteGRAM
;;;495    }
00001a  bd3e              POP      {r1-r5,pc}
;;;496    /*******************************************************************************
                          ENDP


                          AREA ||i.R61509V_DrawLine||, CODE, READONLY, ALIGN=1

                  R61509V_DrawLine PROC
;;;504    *******************************************************************************/
;;;505    void R61509V_DrawLine(
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;506    									unsigned short HSX, unsigned short HSY, 	//x1,y1:起点坐标
;;;507    									unsigned short HEX, unsigned short HEY,		//x2,y2:终点坐标
;;;508    									unsigned short Color					//颜色
;;;509    )
;;;510    {
000004  b084              SUB      sp,sp,#0x10
000006  4681              MOV      r9,r0
000008  468a              MOV      r10,r1
;;;511    	u16 t; 
;;;512    	int xerr=0,yerr=0,delta_x,delta_y,distance; 
00000a  2000              MOVS     r0,#0
00000c  9002              STR      r0,[sp,#8]
00000e  4683              MOV      r11,r0
;;;513    	int incx,incy,uRow,uCol; 
;;;514    
;;;515    	delta_x=HEX-HSX; //计算坐标增量 
000010  9806              LDR      r0,[sp,#0x18]
000012  eba00509          SUB      r5,r0,r9
;;;516    	delta_y=HEY-HSY; 
000016  9807              LDR      r0,[sp,#0x1c]
000018  eba0060a          SUB      r6,r0,r10
;;;517    	uRow=HSX; 
00001c  f8cd9004          STR      r9,[sp,#4]
;;;518    	uCol=HSY;
000020  f8cda000          STR      r10,[sp,#0]
;;;519    	
;;;520    	if(delta_x>0)
000024  2d00              CMP      r5,#0
000026  dd01              BLE      |L4.44|
;;;521    		incx=1; //设置单步方向 
000028  2701              MOVS     r7,#1
00002a  e005              B        |L4.56|
                  |L4.44|
;;;522    	else if(delta_x==0)
00002c  b90d              CBNZ     r5,|L4.50|
;;;523    		incx=0;//垂直线 
00002e  2700              MOVS     r7,#0
000030  e002              B        |L4.56|
                  |L4.50|
;;;524    	else
;;;525    	{
;;;526    		incx=-1;
000032  f04f37ff          MOV      r7,#0xffffffff
;;;527    		delta_x=-delta_x;
000036  426d              RSBS     r5,r5,#0
                  |L4.56|
;;;528    	}
;;;529    		
;;;530    	if(delta_y>0)
000038  2e00              CMP      r6,#0
00003a  dd02              BLE      |L4.66|
;;;531    		incy=1; 
00003c  f04f0801          MOV      r8,#1
000040  e006              B        |L4.80|
                  |L4.66|
;;;532    	else if(delta_y==0)
000042  b916              CBNZ     r6,|L4.74|
;;;533    		incy=0;//水平线 
000044  f04f0800          MOV      r8,#0
000048  e002              B        |L4.80|
                  |L4.74|
;;;534    	else
;;;535    		{incy=-1;delta_y=-delta_y;}
00004a  f04f38ff          MOV      r8,#0xffffffff
00004e  4276              RSBS     r6,r6,#0
                  |L4.80|
;;;536    		
;;;537    	if( delta_x>delta_y)
000050  42b5              CMP      r5,r6
000052  dd01              BLE      |L4.88|
;;;538    		distance=delta_x; 								//选取基本增量坐标轴 
000054  462c              MOV      r4,r5
000056  e000              B        |L4.90|
                  |L4.88|
;;;539    	else
;;;540    		distance=delta_y;
000058  4634              MOV      r4,r6
                  |L4.90|
;;;541    	
;;;542    	for(t=0;t<distance+1;t++ )					//画线输出 
00005a  2000              MOVS     r0,#0
00005c  9003              STR      r0,[sp,#0xc]
00005e  e01e              B        |L4.158|
                  |L4.96|
;;;543    	{  
;;;544    		R61509V_DrawDot(uRow,uCol,Color);			//画点 
000060  9a00              LDR      r2,[sp,#0]
000062  b291              UXTH     r1,r2
000064  9a01              LDR      r2,[sp,#4]
000066  b290              UXTH     r0,r2
000068  9a11              LDR      r2,[sp,#0x44]
00006a  f7fffffe          BL       R61509V_DrawDot
;;;545    		xerr+=delta_x ; 
00006e  9802              LDR      r0,[sp,#8]
000070  4428              ADD      r0,r0,r5
000072  9002              STR      r0,[sp,#8]
;;;546    		yerr+=delta_y ; 
000074  44b3              ADD      r11,r11,r6
;;;547    		if(xerr>distance) 
000076  9802              LDR      r0,[sp,#8]
000078  42a0              CMP      r0,r4
00007a  dd05              BLE      |L4.136|
;;;548    		{ 
;;;549    			xerr-=distance; 
00007c  9802              LDR      r0,[sp,#8]
00007e  1b00              SUBS     r0,r0,r4
000080  9002              STR      r0,[sp,#8]
;;;550    			uRow+=incx; 
000082  9801              LDR      r0,[sp,#4]
000084  4438              ADD      r0,r0,r7
000086  9001              STR      r0,[sp,#4]
                  |L4.136|
;;;551    		} 
;;;552    		if(yerr>distance) 
000088  45a3              CMP      r11,r4
00008a  dd04              BLE      |L4.150|
;;;553    		{ 
;;;554    			yerr-=distance;
00008c  ebab0b04          SUB      r11,r11,r4
;;;555    			uCol+=incy; 
000090  9800              LDR      r0,[sp,#0]
000092  4440              ADD      r0,r0,r8
000094  9000              STR      r0,[sp,#0]
                  |L4.150|
000096  9803              LDR      r0,[sp,#0xc]          ;542
000098  1c40              ADDS     r0,r0,#1              ;542
00009a  b280              UXTH     r0,r0                 ;542
00009c  9003              STR      r0,[sp,#0xc]          ;542
                  |L4.158|
00009e  1c61              ADDS     r1,r4,#1              ;542
0000a0  9803              LDR      r0,[sp,#0xc]          ;542
0000a2  4288              CMP      r0,r1                 ;542
0000a4  dbdc              BLT      |L4.96|
;;;556    		} 
;;;557    	}
;;;558    }
0000a6  b008              ADD      sp,sp,#0x20
0000a8  e8bd8ff0          POP      {r4-r11,pc}
;;;559    /**************************************************************************************************
                          ENDP


                          AREA ||i.R61509V_DrawRectangle||, CODE, READONLY, ALIGN=1

                  R61509V_DrawRectangle PROC
;;;629    **************************************************************************************************/
;;;630    void R61509V_DrawRectangle(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
000000  e92d41f8          PUSH     {r3-r8,lr}
;;;631    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  9c07              LDR      r4,[sp,#0x1c]
;;;632    	R61509V_DrawLine( x1, y1,	x1,	y2, color );
00000e  4643              MOV      r3,r8
000010  462a              MOV      r2,r5
000012  4631              MOV      r1,r6
000014  4628              MOV      r0,r5
000016  9400              STR      r4,[sp,#0]
000018  f7fffffe          BL       R61509V_DrawLine
;;;633    	R61509V_DrawLine( x1, y1,	x2,	y1, color );
00001c  4633              MOV      r3,r6
00001e  463a              MOV      r2,r7
000020  4631              MOV      r1,r6
000022  4628              MOV      r0,r5
000024  9400              STR      r4,[sp,#0]
000026  f7fffffe          BL       R61509V_DrawLine
;;;634    	R61509V_DrawLine( x2, y1,	x2,	y2, color );
00002a  4643              MOV      r3,r8
00002c  463a              MOV      r2,r7
00002e  4631              MOV      r1,r6
000030  4638              MOV      r0,r7
000032  9400              STR      r4,[sp,#0]
000034  f7fffffe          BL       R61509V_DrawLine
;;;635    	R61509V_DrawLine( x1, y2,	x2,	y2, color );
000038  4643              MOV      r3,r8
00003a  463a              MOV      r2,r7
00003c  4641              MOV      r1,r8
00003e  4628              MOV      r0,r5
000040  9400              STR      r4,[sp,#0]
000042  f7fffffe          BL       R61509V_DrawLine
;;;636    }
000046  e8bd81f8          POP      {r3-r8,pc}
;;;637    /*******************************************************************************
                          ENDP


                          AREA ||i.R61509V_Fill||, CODE, READONLY, ALIGN=2

                  R61509V_Fill PROC
;;;642    *******************************************************************************/
;;;643    void R61509V_Fill(
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;644    							unsigned short x1, unsigned short y1, 	//x1,y1:起点坐标
;;;645    							unsigned short x2, unsigned short y2,		//x2,y2:终点坐标
;;;646    							u16 Color
;;;647    )
;;;648    {          
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dda020          LDR      r10,[sp,#0x20]
;;;649    	unsigned int x;
;;;650    	unsigned int y;	
;;;651    	R61509V_SetWindowAddress(x1,y1,x2,y2);
000010  463b              MOV      r3,r7
000012  4632              MOV      r2,r6
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       R61509V_SetWindowAddress
;;;652    	R61509V_WriteIndex( R61509V_R202_GDRW );
00001c  f2402002          MOV      r0,#0x202
000020  f7fffffe          BL       R61509V_WriteIndex
;;;653    	R61509VCrl(CS);	//LCD_CS_LOW;
000024  4811              LDR      r0,|L6.108|
000026  6800              LDR      r0,[r0,#0]  ; pR61509V
000028  8d80              LDRH     r0,[r0,#0x2c]
00002a  4910              LDR      r1,|L6.108|
00002c  6809              LDR      r1,[r1,#0]  ; pR61509V
00002e  6a89              LDR      r1,[r1,#0x28]
000030  6148              STR      r0,[r1,#0x14]
;;;654    	for(x=0;x<=x2-x1;x++)
000032  f04f0800          MOV      r8,#0
000036  e00c              B        |L6.82|
                  |L6.56|
;;;655    	{
;;;656    		for(y=0;y<=y2-y1;y++)
000038  f04f0900          MOV      r9,#0
00003c  e004              B        |L6.72|
                  |L6.62|
;;;657    		{
;;;658    			R61509V_WriteData(Color);							//写数据
00003e  4650              MOV      r0,r10
000040  f7fffffe          BL       R61509V_WriteData
000044  f1090901          ADD      r9,r9,#1              ;656
                  |L6.72|
000048  1b78              SUBS     r0,r7,r5              ;656
00004a  4548              CMP      r0,r9                 ;656
00004c  d2f7              BCS      |L6.62|
00004e  f1080801          ADD      r8,r8,#1              ;654
                  |L6.82|
000052  1b30              SUBS     r0,r6,r4              ;654
000054  4540              CMP      r0,r8                 ;654
000056  d2ef              BCS      |L6.56|
;;;659    		}
;;;660    	}	
;;;661    	R61509VSet(CS);	//LCD_CS_HIGH;
000058  4804              LDR      r0,|L6.108|
00005a  6800              LDR      r0,[r0,#0]  ; pR61509V
00005c  8d80              LDRH     r0,[r0,#0x2c]
00005e  4903              LDR      r1,|L6.108|
000060  6809              LDR      r1,[r1,#0]  ; pR61509V
000062  6a89              LDR      r1,[r1,#0x28]
000064  6108              STR      r0,[r1,#0x10]
;;;662    }
000066  e8bd87f0          POP      {r4-r10,pc}
;;;663    /*******************************************************************************
                          ENDP

00006a  0000              DCW      0x0000
                  |L6.108|
                          DCD      pR61509V

                          AREA ||i.R61509V_Initialize||, CODE, READONLY, ALIGN=2

                  R61509V_Initialize PROC
;;;53     *******************************************************************************/
;;;54     unsigned short R61509V_Initialize(void*	pInfo)
000000  b570              PUSH     {r4-r6,lr}
;;;55     {
000002  4605              MOV      r5,r0
;;;56     	static unsigned short	DeviceCode	=	0;
;;;57     	LCDPortDef*	Port	=	NULL;
000004  2400              MOVS     r4,#0
;;;58     	if(NULL==	pInfo)
000006  b90d              CBNZ     r5,|L7.12|
;;;59     		return 0;
000008  2000              MOVS     r0,#0
                  |L7.10|
;;;60     	
;;;61     	pR61509V		=	(LCDDef*)pInfo;		//指针指向
;;;62     	Port	=	&pR61509V->Port;
;;;63     	
;;;64     	//==========================GPIO配置
;;;65     	GPIO_Configuration_OPP50	(Port->sBL_PORT,				Port->sBL_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;66     	GPIO_Configuration_OPP50	(Port->sRD_PORT,				Port->sRD_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;67     	GPIO_Configuration_OPP50	(Port->sREST_PORT,			Port->sREST_Pin);				//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;68     	GPIO_Configuration_OPP50	(Port->sDC_PORT,				Port->sDC_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;69     	GPIO_Configuration_OPP50	(Port->sWR_PORT,				Port->sWR_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;70     	GPIO_Configuration_OPP50	(Port->sCS_PORT,				Port->sCS_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;71     	GPIO_Configuration_OPP50	(Port->sTE_PORT,				Port->sTE_Pin);					//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;72     	GPIO_Configuration_OPP50	(Port->sDATABUS_PORT,		Port->sDATABUS_Pin);		//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
;;;73     	
;;;74     	DeviceCode	=	R61509V_ReadRegister(R61509V_R000_IR);
;;;75     	if(0xB509	!=	DeviceCode)
;;;76     	{
;;;77     		return 0;	//识别失败
;;;78     	}
;;;79     	//==========================检查背景色与画笔色是否相同
;;;80     	if(pR61509V->Data.PColor	==	pR61509V->Data.BColor)
;;;81     	{
;;;82     		pR61509V->Data.PColor	=	pR61509V->Data.BColor^0xFFFF;
;;;83     	}
;;;84     	
;;;85     	pR61509V->Data.MaxH	=	R61509V_H;					//最大水平宽度
;;;86     	pR61509V->Data.MaxV	=	R61509V_V;					//最大垂直高度	
;;;87     	
;;;88     	//==========================接口函数
;;;89     	pR61509V->Display.WriteAddress		=	R61509V_SetWindowAddress;
;;;90     	pR61509V->Display.PowerOn					=	R61509V_PowerOn;
;;;91     	pR61509V->Display.DispOff					=	R61509V_PowerOff;
;;;92     	
;;;93     	pR61509V->Display.DrawDot					=	R61509V_DrawDot;
;;;94     	pR61509V->Display.DrawLine				=	R61509V_DrawLine;
;;;95     	pR61509V->Display.DrawCircle			=	R61509V_DrawCircle;
;;;96     	pR61509V->Display.DrawRectangle		=	R61509V_DrawRectangle;
;;;97     	
;;;98     	pR61509V->Display.Fill						=	R61509V_Fill;
;;;99     	pR61509V->Display.Clean						=	R61509V_Clean;
;;;100    	pR61509V->Display.SetBackground		=	R61509V_SetBackground;
;;;101    	
;;;102    	pR61509V->Display.ShowChar				=	R61509V_ShowChar;
;;;103    	pR61509V->Display.ShowWord				=	R61509V_ShowWord;
;;;104    	
;;;105    	R61509V_PowerOn();
;;;106    	R61509V_Clean(pR61509V->Data.BColor);
;;;107    	
;;;108    	R61509VSet(BL);
;;;109    	return DeviceCode;		//配置成功
;;;110    }
00000a  bd70              POP      {r4-r6,pc}
                  |L7.12|
00000c  484d              LDR      r0,|L7.324|
00000e  6005              STR      r5,[r0,#0]            ;61  ; pR61509V
000010  6804              LDR      r4,[r0,#0]            ;62  ; pR61509V
000012  88a1              LDRH     r1,[r4,#4]            ;65
000014  6820              LDR      r0,[r4,#0]            ;65
000016  f7fffffe          BL       GPIO_Configuration_OPP50
00001a  89a1              LDRH     r1,[r4,#0xc]          ;66
00001c  68a0              LDR      r0,[r4,#8]            ;66
00001e  f7fffffe          BL       GPIO_Configuration_OPP50
000022  8aa1              LDRH     r1,[r4,#0x14]         ;67
000024  6920              LDR      r0,[r4,#0x10]         ;67
000026  f7fffffe          BL       GPIO_Configuration_OPP50
00002a  8ba1              LDRH     r1,[r4,#0x1c]         ;68
00002c  69a0              LDR      r0,[r4,#0x18]         ;68
00002e  f7fffffe          BL       GPIO_Configuration_OPP50
000032  8ca1              LDRH     r1,[r4,#0x24]         ;69
000034  6a20              LDR      r0,[r4,#0x20]         ;69
000036  f7fffffe          BL       GPIO_Configuration_OPP50
00003a  8da1              LDRH     r1,[r4,#0x2c]         ;70
00003c  6aa0              LDR      r0,[r4,#0x28]         ;70
00003e  f7fffffe          BL       GPIO_Configuration_OPP50
000042  8ea1              LDRH     r1,[r4,#0x34]         ;71
000044  6b20              LDR      r0,[r4,#0x30]         ;71
000046  f7fffffe          BL       GPIO_Configuration_OPP50
00004a  8fa1              LDRH     r1,[r4,#0x3c]         ;72
00004c  6ba0              LDR      r0,[r4,#0x38]         ;72
00004e  f7fffffe          BL       GPIO_Configuration_OPP50
000052  2000              MOVS     r0,#0                 ;74
000054  f7fffffe          BL       R61509V_ReadRegister
000058  493b              LDR      r1,|L7.328|
00005a  8008              STRH     r0,[r1,#0]            ;74
00005c  4608              MOV      r0,r1                 ;75
00005e  8800              LDRH     r0,[r0,#0]            ;75  ; DeviceCode
000060  f24b5109          MOV      r1,#0xb509            ;75
000064  4288              CMP      r0,r1                 ;75
000066  d001              BEQ      |L7.108|
000068  2000              MOVS     r0,#0                 ;77
00006a  e7ce              B        |L7.10|
                  |L7.108|
00006c  4835              LDR      r0,|L7.324|
00006e  6800              LDR      r0,[r0,#0]            ;80  ; pR61509V
000070  f8b01050          LDRH     r1,[r0,#0x50]         ;80
000074  4833              LDR      r0,|L7.324|
000076  6800              LDR      r0,[r0,#0]            ;80  ; pR61509V
000078  f8b00052          LDRH     r0,[r0,#0x52]         ;80
00007c  4281              CMP      r1,r0                 ;80
00007e  d10a              BNE      |L7.150|
000080  4830              LDR      r0,|L7.324|
000082  6800              LDR      r0,[r0,#0]            ;82  ; pR61509V
000084  f8b00052          LDRH     r0,[r0,#0x52]         ;82
000088  f64f71ff          MOV      r1,#0xffff            ;82
00008c  4048              EORS     r0,r0,r1              ;82
00008e  492d              LDR      r1,|L7.324|
000090  6809              LDR      r1,[r1,#0]            ;82  ; pR61509V
000092  f8a10050          STRH     r0,[r1,#0x50]         ;82
                  |L7.150|
000096  20f0              MOVS     r0,#0xf0              ;85
000098  492a              LDR      r1,|L7.324|
00009a  6809              LDR      r1,[r1,#0]            ;85  ; pR61509V
00009c  f8a10040          STRH     r0,[r1,#0x40]         ;85
0000a0  f44f71c8          MOV      r1,#0x190             ;86
0000a4  4827              LDR      r0,|L7.324|
0000a6  6800              LDR      r0,[r0,#0]            ;86  ; pR61509V
0000a8  f8a01042          STRH     r1,[r0,#0x42]         ;86
0000ac  4827              LDR      r0,|L7.332|
0000ae  4925              LDR      r1,|L7.324|
0000b0  6809              LDR      r1,[r1,#0]            ;89  ; pR61509V
0000b2  6608              STR      r0,[r1,#0x60]         ;89
0000b4  4926              LDR      r1,|L7.336|
0000b6  4823              LDR      r0,|L7.324|
0000b8  6800              LDR      r0,[r0,#0]            ;90  ; pR61509V
0000ba  6781              STR      r1,[r0,#0x78]         ;90
0000bc  4925              LDR      r1,|L7.340|
0000be  4821              LDR      r0,|L7.324|
0000c0  6800              LDR      r0,[r0,#0]            ;91  ; pR61509V
0000c2  f8c01080          STR      r1,[r0,#0x80]         ;91
0000c6  4924              LDR      r1,|L7.344|
0000c8  481e              LDR      r0,|L7.324|
0000ca  6800              LDR      r0,[r0,#0]            ;93  ; pR61509V
0000cc  f8c01084          STR      r1,[r0,#0x84]         ;93
0000d0  4922              LDR      r1,|L7.348|
0000d2  481c              LDR      r0,|L7.324|
0000d4  6800              LDR      r0,[r0,#0]            ;94  ; pR61509V
0000d6  f8c01088          STR      r1,[r0,#0x88]         ;94
0000da  4921              LDR      r1,|L7.352|
0000dc  4819              LDR      r0,|L7.324|
0000de  6800              LDR      r0,[r0,#0]            ;95  ; pR61509V
0000e0  f8c0108c          STR      r1,[r0,#0x8c]         ;95
0000e4  491f              LDR      r1,|L7.356|
0000e6  4817              LDR      r0,|L7.324|
0000e8  6800              LDR      r0,[r0,#0]            ;96  ; pR61509V
0000ea  f8c01090          STR      r1,[r0,#0x90]         ;96
0000ee  491e              LDR      r1,|L7.360|
0000f0  4814              LDR      r0,|L7.324|
0000f2  6800              LDR      r0,[r0,#0]            ;98  ; pR61509V
0000f4  f8c01094          STR      r1,[r0,#0x94]         ;98
0000f8  491c              LDR      r1,|L7.364|
0000fa  4812              LDR      r0,|L7.324|
0000fc  6800              LDR      r0,[r0,#0]            ;99  ; pR61509V
0000fe  f8c01098          STR      r1,[r0,#0x98]         ;99
000102  491b              LDR      r1,|L7.368|
000104  480f              LDR      r0,|L7.324|
000106  6800              LDR      r0,[r0,#0]            ;100  ; pR61509V
000108  f8c0109c          STR      r1,[r0,#0x9c]         ;100
00010c  4919              LDR      r1,|L7.372|
00010e  480d              LDR      r0,|L7.324|
000110  6800              LDR      r0,[r0,#0]            ;102  ; pR61509V
000112  f8c010a0          STR      r1,[r0,#0xa0]         ;102
000116  4918              LDR      r1,|L7.376|
000118  480a              LDR      r0,|L7.324|
00011a  6800              LDR      r0,[r0,#0]            ;103  ; pR61509V
00011c  f8c010a4          STR      r1,[r0,#0xa4]         ;103
000120  f7fffffe          BL       R61509V_PowerOn
000124  4907              LDR      r1,|L7.324|
000126  6809              LDR      r1,[r1,#0]            ;106  ; pR61509V
000128  f8b10052          LDRH     r0,[r1,#0x52]         ;106
00012c  f7fffffe          BL       R61509V_Clean
000130  4804              LDR      r0,|L7.324|
000132  6800              LDR      r0,[r0,#0]            ;108  ; pR61509V
000134  8880              LDRH     r0,[r0,#4]            ;108
000136  4903              LDR      r1,|L7.324|
000138  6809              LDR      r1,[r1,#0]            ;108  ; pR61509V
00013a  6809              LDR      r1,[r1,#0]            ;108
00013c  6108              STR      r0,[r1,#0x10]         ;108
00013e  4802              LDR      r0,|L7.328|
000140  8800              LDRH     r0,[r0,#0]            ;109  ; DeviceCode
000142  e762              B        |L7.10|
;;;111    /*******************************************************************************
                          ENDP

                  |L7.324|
                          DCD      pR61509V
                  |L7.328|
                          DCD      DeviceCode
                  |L7.332|
                          DCD      R61509V_SetWindowAddress
                  |L7.336|
                          DCD      R61509V_PowerOn
                  |L7.340|
                          DCD      R61509V_PowerOff
                  |L7.344|
                          DCD      R61509V_DrawDot
                  |L7.348|
                          DCD      R61509V_DrawLine
                  |L7.352|
                          DCD      R61509V_DrawCircle
                  |L7.356|
                          DCD      R61509V_DrawRectangle
                  |L7.360|
                          DCD      R61509V_Fill
                  |L7.364|
                          DCD      R61509V_Clean
                  |L7.368|
                          DCD      R61509V_SetBackground
                  |L7.372|
                          DCD      R61509V_ShowChar
                  |L7.376|
                          DCD      R61509V_ShowWord

                          AREA ||i.R61509V_PowerOff||, CODE, READONLY, ALIGN=2

                  R61509V_PowerOff PROC
;;;311    **************************************************************************************************/
;;;312    void R61509V_PowerOff( void )
000000  b508              PUSH     {r3,lr}
;;;313    {
;;;314    	LCD_BL_OFF;		//关背光
000002  2000              MOVS     r0,#0
000004  4602              MOV      r2,r0
000006  4b05              LDR      r3,|L8.28|
000008  2103              MOVS     r1,#3
00000a  9000              STR      r0,[sp,#0]
00000c  0318              LSLS     r0,r3,#12
00000e  f7fffffe          BL       PWM_OUT
;;;315    	R61509V_WriteCommand( R61509V_R009_DC3, 0 );	
000012  2100              MOVS     r1,#0
000014  2009              MOVS     r0,#9
000016  f7fffffe          BL       R61509V_WriteCommand
;;;316    }
00001a  bd08              POP      {r3,pc}
;;;317    /*******************************************************************************
                          ENDP

                  |L8.28|
                          DCD      0x40140000

                          AREA ||i.R61509V_PowerOn||, CODE, READONLY, ALIGN=2

                  R61509V_PowerOn PROC
;;;322    *******************************************************************************/
;;;323    void R61509V_PowerOn(void)			//按照主控芯片R61509V的power supply on sequence 进行配置
000000  b570              PUSH     {r4-r6,lr}
;;;324    {
;;;325    	u32 dtime=2000;
000002  f44f66fa          MOV      r6,#0x7d0
;;;326    	
;;;327    	void(*Command)(unsigned short Index,unsigned short Command);//LcdDisplay.WriteCommand
;;;328    	
;;;329    	void(*DelaymS)(unsigned long xms) = LCD_DelaymS;
000006  4d61              LDR      r5,|L9.396|
;;;330    	
;;;331    	Command	=	R61509V_WriteCommand;
000008  4c61              LDR      r4,|L9.400|
;;;332    
;;;333    	
;;;334    	R61509V_Reset();
00000a  f7fffffe          BL       R61509V_Reset
;;;335    	DelaymS( 10 );
00000e  200a              MOVS     r0,#0xa
000010  47a8              BLX      r5
;;;336    	
;;;337    	Command(R61509V_R000_IR		,	0x0000);	//四次写0x00
000012  2100              MOVS     r1,#0
000014  4608              MOV      r0,r1
000016  47a0              BLX      r4
;;;338    	Command(R61509V_R000_IR		,	0x0000);	//四次写0x00
000018  2100              MOVS     r1,#0
00001a  4608              MOV      r0,r1
00001c  47a0              BLX      r4
;;;339    	Command(R61509V_R000_IR		,	0x0000);	//四次写0x00
00001e  2100              MOVS     r1,#0
000020  4608              MOV      r0,r1
000022  47a0              BLX      r4
;;;340    	Command(R61509V_R000_IR		,	0x0000);	//四次写0x00
000024  2100              MOVS     r1,#0
000026  4608              MOV      r0,r1
000028  47a0              BLX      r4
;;;341    	
;;;342    	DelaymS( 10 );
00002a  200a              MOVS     r0,#0xa
00002c  47a8              BLX      r5
;;;343    	
;;;344    	Command(R61509V_R001_DOC	,	0x0300);	//--------显示方向控制When SS = “1” and BGR = “1”, RGB dots are assigned one to one from S720 to S1.
00002e  f44f7140          MOV      r1,#0x300
000032  2001              MOVS     r0,#1
000034  47a0              BLX      r4
;;;345    	Command(R61509V_R002_DWC	,	0x0100);	//--------	
000036  f44f7180          MOV      r1,#0x100
00003a  2002              MOVS     r0,#2
00003c  47a0              BLX      r4
;;;346    	Command(R61509V_R003_EM		,	0X5030);	//--------RGB设为5-6-5模式------------0X5030
00003e  f2450130          MOV      r1,#0x5030
000042  2003              MOVS     r0,#3
000044  47a0              BLX      r4
;;;347    	Command(R61509V_R007_DC1	,	0x0100);	//--------测试显示控制base image的关与开
000046  f44f7180          MOV      r1,#0x100
00004a  2007              MOVS     r0,#7
00004c  47a0              BLX      r4
;;;348    	Command(R61509V_R008_DC2	,	0X0808);	//--------
00004e  f6400108          MOV      r1,#0x808
000052  2008              MOVS     r0,#8
000054  47a0              BLX      r4
;;;349    	Command(R61509V_R009_DC3	,	0x0001);	//--------	
000056  2101              MOVS     r1,#1
000058  2009              MOVS     r0,#9
00005a  47a0              BLX      r4
;;;350    	
;;;351    	Command(R61509V_R00B_ECC		,	0x0001);	//--------
00005c  2101              MOVS     r1,#1
00005e  200b              MOVS     r0,#0xb
000060  47a0              BLX      r4
;;;352    	Command(R61509V_R00C_EDIC1	,	0x0000);	//--------
000062  2100              MOVS     r1,#0
000064  200c              MOVS     r0,#0xc
000066  47a0              BLX      r4
;;;353    	Command(R61509V_R00F_EDIC2	,	0x0000);	//--------
000068  2100              MOVS     r1,#0
00006a  200f              MOVS     r0,#0xf
00006c  47a0              BLX      r4
;;;354    	
;;;355    	DelaymS( 10 );
00006e  200a              MOVS     r0,#0xa
000070  47a8              BLX      r5
;;;356    	
;;;357    	Command(R61509V_R010_PIC1	,	0x0019);	//--------面板频率--0x19
000072  2119              MOVS     r1,#0x19
000074  2010              MOVS     r0,#0x10
000076  47a0              BLX      r4
;;;358    	Command(R61509V_R011_PIC2	,	0x0101);	//--------		Panel Interface Control 2 (R011h)
000078  f2401101          MOV      r1,#0x101
00007c  2011              MOVS     r0,#0x11
00007e  47a0              BLX      r4
;;;359    	Command(R61509V_R012_PIC3	,	0x0000);	//--------
000080  2100              MOVS     r1,#0
000082  2012              MOVS     r0,#0x12
000084  47a0              BLX      r4
;;;360    	Command(R61509V_R013_PIC4	,	0x0001);	//--------
000086  2101              MOVS     r1,#1
000088  2013              MOVS     r0,#0x13
00008a  47a0              BLX      r4
;;;361    	Command(R61509V_R014_PIC5	,	0x0055);	//--------
00008c  2155              MOVS     r1,#0x55
00008e  2014              MOVS     r0,#0x14
000090  47a0              BLX      r4
;;;362    	Command(R61509V_R020_PIC6	,	0x0010);	//--------
000092  2110              MOVS     r1,#0x10
000094  2020              MOVS     r0,#0x20
000096  47a0              BLX      r4
;;;363    	Command(R61509V_R021_PIC7	,	0x0101);	//--------
000098  f2401101          MOV      r1,#0x101
00009c  2021              MOVS     r0,#0x21
00009e  47a0              BLX      r4
;;;364    	Command(R61509V_R022_PIC8	,	0x0000);	//--------
0000a0  2100              MOVS     r1,#0
0000a2  2022              MOVS     r0,#0x22
0000a4  47a0              BLX      r4
;;;365    	Command(R61509V_R023_PIC9	,	0x0001);	//--------	
0000a6  2101              MOVS     r1,#1
0000a8  2023              MOVS     r0,#0x23
0000aa  47a0              BLX      r4
;;;366    	
;;;367    	DelaymS( 10 );
0000ac  200a              MOVS     r0,#0xa
0000ae  47a8              BLX      r5
;;;368    	
;;;369    	Command(R61509V_R090_FMC		,	0x8000);	//--------窗特征控制，FMARK interface
0000b0  f44f4100          MOV      r1,#0x8000
0000b4  2090              MOVS     r0,#0x90
0000b6  47a0              BLX      r4
;;;370    	
;;;371    	Command(R61509V_R100_PC1		,	0x0330);	//--------设置电源控制，平衡显示与电消耗
0000b8  f44f714c          MOV      r1,#0x330
0000bc  f44f7080          MOV      r0,#0x100
0000c0  47a0              BLX      r4
;;;372    	Command(R61509V_R101_PC2		,	0x0227);	//--------Power Control 2
0000c2  f2402127          MOV      r1,#0x227
0000c6  f2401001          MOV      r0,#0x101
0000ca  47a0              BLX      r4
;;;373    	Command(R61509V_R102_PC3		,	0xC1B0);	//--------PSON,PON 都设为1，电源供应打开
0000cc  f24c11b0          MOV      r1,#0xc1b0
0000d0  f44f7081          MOV      r0,#0x102
0000d4  47a0              BLX      r4
;;;374    	Command(R61509V_R103_PC4		,	0x0D00);	//--------	
0000d6  f44f6150          MOV      r1,#0xd00
0000da  f2401003          MOV      r0,#0x103
0000de  47a0              BLX      r4
;;;375    	
;;;376    	DelaymS( 20 );
0000e0  2014              MOVS     r0,#0x14
0000e2  47a8              BLX      r5
;;;377    	
;;;378    	Command(R61509V_R200_HA			,	0x0000);	//--------RAM address 设置
0000e4  2100              MOVS     r1,#0
0000e6  f44f7000          MOV      r0,#0x200
0000ea  47a0              BLX      r4
;;;379    	Command(R61509V_R201_VA			,	0x0000);	//--------
0000ec  2100              MOVS     r1,#0
0000ee  f2402001          MOV      r0,#0x201
0000f2  47a0              BLX      r4
;;;380    	
;;;381    	Command(R61509V_R280_NVM		,	0xB000);	//--------VCM
0000f4  f44f4130          MOV      r1,#0xb000
0000f8  f44f7020          MOV      r0,#0x280
0000fc  47a0              BLX      r4
;;;382    	
;;;383    	Command(R61509V_R300_YC1		,	0x0C00);	//--------
0000fe  f44f6140          MOV      r1,#0xc00
000102  1088              ASRS     r0,r1,#2
000104  47a0              BLX      r4
;;;384    	Command(R61509V_R301_YC2		,	0x5A0B);	//--------
000106  f645210b          MOV      r1,#0x5a0b
00010a  f2403001          MOV      r0,#0x301
00010e  47a0              BLX      r4
;;;385    	Command(R61509V_R302_YC3		,	0x0906);	//--------
000110  f6401106          MOV      r1,#0x906
000114  f2403002          MOV      r0,#0x302
000118  47a0              BLX      r4
;;;386    	Command(R61509V_R303_YC4		,	0x1017);	//--------
00011a  f2410117          MOV      r1,#0x1017
00011e  f2403003          MOV      r0,#0x303
000122  47a0              BLX      r4
;;;387    	Command(R61509V_R304_YC5		,	0x2300);	//--------
000124  f44f510c          MOV      r1,#0x2300
000128  f44f7041          MOV      r0,#0x304
00012c  47a0              BLX      r4
;;;388    	Command(R61509V_R305_YC6		,	0x1700);	//--------
00012e  f44f51b8          MOV      r1,#0x1700
000132  f2403005          MOV      r0,#0x305
000136  47a0              BLX      r4
;;;389    	Command(R61509V_R306_YC7		,	0x6309);	//--------
000138  f2463109          MOV      r1,#0x6309
00013c  f2403006          MOV      r0,#0x306
000140  47a0              BLX      r4
;;;390    	Command(R61509V_R307_YC8		,	0x0C09);	//--------
000142  f6404109          MOV      r1,#0xc09
000146  f2403007          MOV      r0,#0x307
00014a  47a0              BLX      r4
;;;391    	Command(R61509V_R308_YC9		,	0x100C);	//--------
00014c  f241010c          MOV      r1,#0x100c
000150  f44f7042          MOV      r0,#0x308
000154  47a0              BLX      r4
;;;392    	Command(R61509V_R309_YC10		,	0x2232);	//--------
000156  f2422132          MOV      r1,#0x2232
00015a  f2403009          MOV      r0,#0x309
00015e  47a0              BLX      r4
;;;393    	
;;;394    	DelaymS( 10 );
000160  200a              MOVS     r0,#0xa
000162  47a8              BLX      r5
;;;395    	
;;;396    	Command(R61509V_R400_BINL		,	0X6400);	//base image 设置 400线
000164  f44f41c8          MOV      r1,#0x6400
000168  f44f6080          MOV      r0,#0x400
00016c  47a0              BLX      r4
;;;397    	Command(R61509V_R401_BIDC		,	0x0004);	//--------设置base image 滚动模式，开启滚动(颜色反相设置）
00016e  2104              MOVS     r1,#4
000170  f2404001          MOV      r0,#0x401
000174  47a0              BLX      r4
;;;398    	Command(R61509V_R404_BIVSC	,	0x0000);	//--------从0线开始滚屏
000176  2100              MOVS     r1,#0
000178  f2404004          MOV      r0,#0x404
00017c  47a0              BLX      r4
;;;399    	
;;;400    	Command(R61509V_R502_PTEA		,	0x005f);
00017e  215f              MOVS     r1,#0x5f
000180  f2405002          MOV      r0,#0x502
000184  47a0              BLX      r4
;;;401    	DelaymS( 10 );
000186  200a              MOVS     r0,#0xa
000188  47a8              BLX      r5
;;;402    }
00018a  bd70              POP      {r4-r6,pc}
;;;403    /*******************************************************************************
                          ENDP

                  |L9.396|
                          DCD      LCD_DelaymS
                  |L9.400|
                          DCD      R61509V_WriteCommand

                          AREA ||i.R61509V_ReadData||, CODE, READONLY, ALIGN=2

                  R61509V_ReadData PROC
;;;137    *******************************************************************************/
;;;138    unsigned short R61509V_ReadData(void)
000000  2000              MOVS     r0,#0
;;;139    {
;;;140    	unsigned short Data	=	0;
;;;141    #if	1	//Bus16Bit
;;;142    	R61509VCrl(RD);	//LCD_RD_LOW;
000002  490a              LDR      r1,|L10.44|
000004  6809              LDR      r1,[r1,#0]  ; pR61509V
000006  8989              LDRH     r1,[r1,#0xc]
000008  4a08              LDR      r2,|L10.44|
00000a  6812              LDR      r2,[r2,#0]  ; pR61509V
00000c  6892              LDR      r2,[r2,#8]
00000e  6151              STR      r1,[r2,#0x14]
;;;143    	Data	=	R61509V_DATABUS_PORT->IDR;
000010  4906              LDR      r1,|L10.44|
000012  6809              LDR      r1,[r1,#0]  ; pR61509V
000014  6b89              LDR      r1,[r1,#0x38]
000016  6889              LDR      r1,[r1,#8]
000018  b288              UXTH     r0,r1
;;;144    	R61509VSet(RD);	//LCD_RD_HIGH;
00001a  4904              LDR      r1,|L10.44|
00001c  6809              LDR      r1,[r1,#0]  ; pR61509V
00001e  8989              LDRH     r1,[r1,#0xc]
000020  4a02              LDR      r2,|L10.44|
000022  6812              LDR      r2,[r2,#0]  ; pR61509V
000024  6892              LDR      r2,[r2,#8]
000026  6111              STR      r1,[r2,#0x10]
;;;145    #else	
;;;146    	R61509VCrl(RD);	//LCD_RD_LOW;
;;;147    	Data	=	R61509V_DATABUS_PORT->IDR;
;;;148    	R61509VSet(RD);	//LCD_RD_HIGH;
;;;149    	
;;;150    	Data	<<=8;
;;;151    	
;;;152    	R61509VCrl(RD);	//LCD_RD_LOW;
;;;153    	Data	|=	R61509V_DATABUS_PORT->IDR;
;;;154    	R61509VSet(RD);	//LCD_RD_HIGH;
;;;155    #endif	
;;;156    	return Data;
;;;157    }
000028  4770              BX       lr
;;;158    /*******************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L10.44|
                          DCD      pR61509V

                          AREA ||i.R61509V_ReadGRAM||, CODE, READONLY, ALIGN=2

                  R61509V_ReadGRAM PROC
;;;294    *******************************************************************************/
;;;295    void R61509V_ReadGRAM(unsigned	short* RAM,unsigned long length)
000000  b570              PUSH     {r4-r6,lr}
;;;296    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;297    	unsigned	long	i	=	0;
000006  2400              MOVS     r4,#0
;;;298    	R61509VCrl(CS);	//LCD_CS_LOW;
000008  4815              LDR      r0,|L11.96|
00000a  6800              LDR      r0,[r0,#0]  ; pR61509V
00000c  8d80              LDRH     r0,[r0,#0x2c]
00000e  4914              LDR      r1,|L11.96|
000010  6809              LDR      r1,[r1,#0]  ; pR61509V
000012  6a89              LDR      r1,[r1,#0x28]
000014  6148              STR      r0,[r1,#0x14]
;;;299    	R61509V_WriteIndex(R61509V_R202_GDRW);
000016  f2402002          MOV      r0,#0x202
00001a  f7fffffe          BL       R61509V_WriteIndex
;;;300    	GPIO_Configuration_IPU	(R61509V_DATABUS_PORT,R61509V_DATABUS_Pin);			//将GPIO相应管脚配置为上拉输入模式----V20170605
00001e  4a10              LDR      r2,|L11.96|
000020  6812              LDR      r2,[r2,#0]  ; pR61509V
000022  8f91              LDRH     r1,[r2,#0x3c]
000024  4a0e              LDR      r2,|L11.96|
000026  6812              LDR      r2,[r2,#0]  ; pR61509V
000028  6b90              LDR      r0,[r2,#0x38]
00002a  f7fffffe          BL       GPIO_Configuration_IPU
;;;301    	for(i=0;i<length;i++)
00002e  bf00              NOP      
000030  e004              B        |L11.60|
                  |L11.50|
;;;302    	{
;;;303    		RAM[i]=R61509V_ReadData();
000032  f7fffffe          BL       R61509V_ReadData
000036  f8250014          STRH     r0,[r5,r4,LSL #1]
00003a  1c64              ADDS     r4,r4,#1              ;301
                  |L11.60|
00003c  42b4              CMP      r4,r6                 ;301
00003e  d3f8              BCC      |L11.50|
;;;304    	}
;;;305    	R61509VSet(CS);	//LCD_CS_HIGH;
000040  4807              LDR      r0,|L11.96|
000042  6800              LDR      r0,[r0,#0]  ; pR61509V
000044  8d80              LDRH     r0,[r0,#0x2c]
000046  4906              LDR      r1,|L11.96|
000048  6809              LDR      r1,[r1,#0]  ; pR61509V
00004a  6a89              LDR      r1,[r1,#0x28]
00004c  6108              STR      r0,[r1,#0x10]
;;;306    	GPIO_Configuration_OPP50	(R61509V_DATABUS_PORT,R61509V_DATABUS_Pin);		//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605	
00004e  4a04              LDR      r2,|L11.96|
000050  6812              LDR      r2,[r2,#0]  ; pR61509V
000052  8f91              LDRH     r1,[r2,#0x3c]
000054  4a02              LDR      r2,|L11.96|
000056  6812              LDR      r2,[r2,#0]  ; pR61509V
000058  6b90              LDR      r0,[r2,#0x38]
00005a  f7fffffe          BL       GPIO_Configuration_OPP50
;;;307    }
00005e  bd70              POP      {r4-r6,pc}
;;;308    /**************************************************************************************************
                          ENDP

                  |L11.96|
                          DCD      pR61509V

                          AREA ||i.R61509V_ReadRegister||, CODE, READONLY, ALIGN=2

                  R61509V_ReadRegister PROC
;;;166    *******************************************************************************/
;;;167    unsigned short R61509V_ReadRegister(unsigned	short	Addr)
000000  b570              PUSH     {r4-r6,lr}
;;;168    {
000002  4604              MOV      r4,r0
;;;169    	unsigned short Data	=	0;
000004  2500              MOVS     r5,#0
;;;170    	R61509VCrl(CS);	//LCD_CS_LOW;
000006  4813              LDR      r0,|L12.84|
000008  6800              LDR      r0,[r0,#0]  ; pR61509V
00000a  8d80              LDRH     r0,[r0,#0x2c]
00000c  4911              LDR      r1,|L12.84|
00000e  6809              LDR      r1,[r1,#0]  ; pR61509V
000010  6a89              LDR      r1,[r1,#0x28]
000012  6148              STR      r0,[r1,#0x14]
;;;171    	//---------------------Write Index
;;;172    	R61509V_WriteAddr(Addr);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       R61509V_WriteAddr
;;;173    	//---------------------Read Data
;;;174    	GPIO_Configuration_IPU	(R61509V_DATABUS_PORT,R61509V_DATABUS_Pin);			//将GPIO相应管脚配置为上拉输入模式----V20170605
00001a  4a0e              LDR      r2,|L12.84|
00001c  6812              LDR      r2,[r2,#0]  ; pR61509V
00001e  8f91              LDRH     r1,[r2,#0x3c]
000020  4a0c              LDR      r2,|L12.84|
000022  6812              LDR      r2,[r2,#0]  ; pR61509V
000024  6b90              LDR      r0,[r2,#0x38]
000026  f7fffffe          BL       GPIO_Configuration_IPU
;;;175    	Data	=	R61509V_ReadData();
00002a  f7fffffe          BL       R61509V_ReadData
00002e  4605              MOV      r5,r0
;;;176    	R61509VSet(CS);	//LCD_CS_HIGH;
000030  4808              LDR      r0,|L12.84|
000032  6800              LDR      r0,[r0,#0]  ; pR61509V
000034  8d80              LDRH     r0,[r0,#0x2c]
000036  4907              LDR      r1,|L12.84|
000038  6809              LDR      r1,[r1,#0]  ; pR61509V
00003a  6a89              LDR      r1,[r1,#0x28]
00003c  6108              STR      r0,[r1,#0x10]
;;;177    	GPIO_Configuration_OPP50	(R61509V_DATABUS_PORT,R61509V_DATABUS_Pin);		//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605	
00003e  4a05              LDR      r2,|L12.84|
000040  6812              LDR      r2,[r2,#0]  ; pR61509V
000042  8f91              LDRH     r1,[r2,#0x3c]
000044  4a03              LDR      r2,|L12.84|
000046  6812              LDR      r2,[r2,#0]  ; pR61509V
000048  6b90              LDR      r0,[r2,#0x38]
00004a  f7fffffe          BL       GPIO_Configuration_OPP50
;;;178    	return Data;
00004e  4628              MOV      r0,r5
;;;179    }
000050  bd70              POP      {r4-r6,pc}
;;;180    /*******************************************************************************
                          ENDP

000052  0000              DCW      0x0000
                  |L12.84|
                          DCD      pR61509V

                          AREA ||i.R61509V_Reset||, CODE, READONLY, ALIGN=2

                  R61509V_Reset PROC
;;;119    *******************************************************************************/
;;;120    void R61509V_Reset(void)
000000  b510              PUSH     {r4,lr}
;;;121    {
;;;122    	R61509VSet(RST);
000002  480f              LDR      r0,|L13.64|
000004  6800              LDR      r0,[r0,#0]  ; pR61509V
000006  8a80              LDRH     r0,[r0,#0x14]
000008  490d              LDR      r1,|L13.64|
00000a  6809              LDR      r1,[r1,#0]  ; pR61509V
00000c  6909              LDR      r1,[r1,#0x10]
00000e  6108              STR      r0,[r1,#0x10]
;;;123    	LCD_DelaymS(5);				//SysTick延时nmS
000010  2005              MOVS     r0,#5
000012  f7fffffe          BL       LCD_DelaymS
;;;124    	R61509VCrl(RST);;
000016  480a              LDR      r0,|L13.64|
000018  6800              LDR      r0,[r0,#0]  ; pR61509V
00001a  8a80              LDRH     r0,[r0,#0x14]
00001c  4908              LDR      r1,|L13.64|
00001e  6809              LDR      r1,[r1,#0]  ; pR61509V
000020  6909              LDR      r1,[r1,#0x10]
000022  6148              STR      r0,[r1,#0x14]
;;;125    	LCD_DelaymS(5);				//SysTick延时nmS
000024  2005              MOVS     r0,#5
000026  f7fffffe          BL       LCD_DelaymS
;;;126    	R61509VSet(RST);
00002a  4805              LDR      r0,|L13.64|
00002c  6800              LDR      r0,[r0,#0]  ; pR61509V
00002e  8a80              LDRH     r0,[r0,#0x14]
000030  4903              LDR      r1,|L13.64|
000032  6809              LDR      r1,[r1,#0]  ; pR61509V
000034  6909              LDR      r1,[r1,#0x10]
000036  6108              STR      r0,[r1,#0x10]
;;;127    	LCD_DelaymS(10);				//SysTick延时nmS
000038  200a              MOVS     r0,#0xa
00003a  f7fffffe          BL       LCD_DelaymS
;;;128    }
00003e  bd10              POP      {r4,pc}
;;;129    /*******************************************************************************
                          ENDP

                  |L13.64|
                          DCD      pR61509V

                          AREA ||i.R61509V_SetBackground||, CODE, READONLY, ALIGN=2

                  R61509V_SetBackground PROC
;;;713    **************************************************************************************************/
;;;714    void R61509V_SetBackground(  u16 BackColor )
000000  b510              PUSH     {r4,lr}
;;;715    {
000002  4604              MOV      r4,r0
;;;716    	pR61509V->Data.BColor	=	BackColor;
000004  4803              LDR      r0,|L14.20|
000006  6800              LDR      r0,[r0,#0]  ; pR61509V
000008  f8a04052          STRH     r4,[r0,#0x52]
;;;717    	R61509V_Clean(BackColor);	//清除屏幕函数
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       R61509V_Clean
;;;718    }
000012  bd10              POP      {r4,pc}
;;;719    
                          ENDP

                  |L14.20|
                          DCD      pR61509V

                          AREA ||i.R61509V_SetWindowAddress||, CODE, READONLY, ALIGN=2

                  R61509V_SetWindowAddress PROC
;;;408    *******************************************************************************/
;;;409    void R61509V_SetWindowAddress(			//设置窗口地址
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;410    															unsigned short x1,		//水平起始点
;;;411    															unsigned short y1,		//水平终止点
;;;412    															unsigned short x2,		//垂直起始点
;;;413    															unsigned short y2			//垂直终止点
;;;414    															)
;;;415    {	
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;416    	unsigned short MaxH,MaxV;
;;;417    	unsigned short Model	=	0x5030;
00000c  f2450a30          MOV      r10,#0x5030
;;;418    	eRotate	Rotate	=	pR61509V->Flag.Rotate;
000010  4880              LDR      r0,|L15.532|
000012  6800              LDR      r0,[r0,#0]  ; pR61509V
000014  f890b05c          LDRB     r11,[r0,#0x5c]
;;;419    	
;;;420    	void(*Command)(unsigned short Index,unsigned short Command);//LcdDisplay.WriteCommand	
;;;421    	Command	=	R61509V_WriteCommand;
000018  487f              LDR      r0,|L15.536|
00001a  9000              STR      r0,[sp,#0]
;;;422    	
;;;423    	MaxH	=	pR61509V->Data.MaxH;
00001c  487d              LDR      r0,|L15.532|
00001e  6800              LDR      r0,[r0,#0]  ; pR61509V
000020  f8b08040          LDRH     r8,[r0,#0x40]
;;;424    	MaxV	=	pR61509V->Data.MaxV;
000024  487b              LDR      r0,|L15.532|
000026  6800              LDR      r0,[r0,#0]  ; pR61509V
000028  f8b09042          LDRH     r9,[r0,#0x42]
;;;425    	
;;;426    	switch(Rotate)
00002c  f1bb0f00          CMP      r11,#0
000030  d006              BEQ      |L15.64|
000032  f1bb0f01          CMP      r11,#1
000036  d026              BEQ      |L15.134|
000038  f1bb0f02          CMP      r11,#2
00003c  d17d              BNE      |L15.314|
00003e  e04d              B        |L15.220|
                  |L15.64|
;;;427    	{
;;;428    		case 	Draw_Rotate_0D:
;;;429    					pR61509V->Data.HSX	=	x1;
000040  4874              LDR      r0,|L15.532|
000042  6800              LDR      r0,[r0,#0]  ; pR61509V
000044  f8a04044          STRH     r4,[r0,#0x44]
;;;430    					pR61509V->Data.HEX	=	x2;
000048  4872              LDR      r0,|L15.532|
00004a  6800              LDR      r0,[r0,#0]  ; pR61509V
00004c  f8a06046          STRH     r6,[r0,#0x46]
;;;431    					pR61509V->Data.VSY	=	y1;
000050  4870              LDR      r0,|L15.532|
000052  6800              LDR      r0,[r0,#0]  ; pR61509V
000054  f8a05048          STRH     r5,[r0,#0x48]
;;;432    					pR61509V->Data.VEY	=	y2;	
000058  486e              LDR      r0,|L15.532|
00005a  6800              LDR      r0,[r0,#0]  ; pR61509V
00005c  f8a0704a          STRH     r7,[r0,#0x4a]
;;;433    					pR61509V->Data.HXA	=	pR61509V->Data.HSX;
000060  486c              LDR      r0,|L15.532|
000062  6800              LDR      r0,[r0,#0]  ; pR61509V
000064  f8b01044          LDRH     r1,[r0,#0x44]
000068  486a              LDR      r0,|L15.532|
00006a  6800              LDR      r0,[r0,#0]  ; pR61509V
00006c  f8a0104c          STRH     r1,[r0,#0x4c]
;;;434    					pR61509V->Data.VYA	=	pR61509V->Data.VSY;	
000070  4868              LDR      r0,|L15.532|
000072  6800              LDR      r0,[r0,#0]  ; pR61509V
000074  f8b01048          LDRH     r1,[r0,#0x48]
000078  4866              LDR      r0,|L15.532|
00007a  6800              LDR      r0,[r0,#0]  ; pR61509V
00007c  f8a0104e          STRH     r1,[r0,#0x4e]
;;;435    					Model	=	0x5030;
000080  f2450a30          MOV      r10,#0x5030
;;;436    			break;
000084  e08a              B        |L15.412|
                  |L15.134|
;;;437    		case 	Draw_Rotate_90D:
;;;438    					pR61509V->Data.HSX	=	y1;
000086  4863              LDR      r0,|L15.532|
000088  6800              LDR      r0,[r0,#0]  ; pR61509V
00008a  f8a05044          STRH     r5,[r0,#0x44]
;;;439    					pR61509V->Data.HEX	=	y2;	
00008e  4861              LDR      r0,|L15.532|
000090  6800              LDR      r0,[r0,#0]  ; pR61509V
000092  f8a07046          STRH     r7,[r0,#0x46]
;;;440    					pR61509V->Data.VSY	=	MaxV	-	x2	-	1;
000096  eba90006          SUB      r0,r9,r6
00009a  1e40              SUBS     r0,r0,#1
00009c  b281              UXTH     r1,r0
00009e  485d              LDR      r0,|L15.532|
0000a0  6800              LDR      r0,[r0,#0]  ; pR61509V
0000a2  f8a01048          STRH     r1,[r0,#0x48]
;;;441    					pR61509V->Data.VEY	=	MaxV	-	x1	-	1;	
0000a6  eba90004          SUB      r0,r9,r4
0000aa  1e40              SUBS     r0,r0,#1
0000ac  b281              UXTH     r1,r0
0000ae  4859              LDR      r0,|L15.532|
0000b0  6800              LDR      r0,[r0,#0]  ; pR61509V
0000b2  f8a0104a          STRH     r1,[r0,#0x4a]
;;;442    					pR61509V->Data.HXA	=	pR61509V->Data.HSX;
0000b6  4857              LDR      r0,|L15.532|
0000b8  6800              LDR      r0,[r0,#0]  ; pR61509V
0000ba  f8b01044          LDRH     r1,[r0,#0x44]
0000be  4855              LDR      r0,|L15.532|
0000c0  6800              LDR      r0,[r0,#0]  ; pR61509V
0000c2  f8a0104c          STRH     r1,[r0,#0x4c]
;;;443    					pR61509V->Data.VYA	=	pR61509V->Data.VEY;
0000c6  4853              LDR      r0,|L15.532|
0000c8  6800              LDR      r0,[r0,#0]  ; pR61509V
0000ca  f8b0104a          LDRH     r1,[r0,#0x4a]
0000ce  4851              LDR      r0,|L15.532|
0000d0  6800              LDR      r0,[r0,#0]  ; pR61509V
0000d2  f8a0104e          STRH     r1,[r0,#0x4e]
;;;444    					Model	=	0X5018;								//GRAM(Graphics RAM--图形内存) Data Write (R202h)准备写入
0000d6  f2450a18          MOV      r10,#0x5018
;;;445    			break;
0000da  e05f              B        |L15.412|
                  |L15.220|
;;;446    		case 	Draw_Rotate_180D:
;;;447    					pR61509V->Data.HSX	=	MaxH	-	x2	-	1;
0000dc  eba80006          SUB      r0,r8,r6
0000e0  1e40              SUBS     r0,r0,#1
0000e2  b281              UXTH     r1,r0
0000e4  484b              LDR      r0,|L15.532|
0000e6  6800              LDR      r0,[r0,#0]  ; pR61509V
0000e8  f8a01044          STRH     r1,[r0,#0x44]
;;;448    					pR61509V->Data.HEX	=	MaxH	-	x1	-	1;
0000ec  eba80004          SUB      r0,r8,r4
0000f0  1e40              SUBS     r0,r0,#1
0000f2  b281              UXTH     r1,r0
0000f4  4847              LDR      r0,|L15.532|
0000f6  6800              LDR      r0,[r0,#0]  ; pR61509V
0000f8  f8a01046          STRH     r1,[r0,#0x46]
;;;449    					pR61509V->Data.VSY	=	MaxV	-	y2	-	1;
0000fc  eba90007          SUB      r0,r9,r7
000100  1e40              SUBS     r0,r0,#1
000102  b281              UXTH     r1,r0
000104  4843              LDR      r0,|L15.532|
000106  6800              LDR      r0,[r0,#0]  ; pR61509V
000108  f8a01048          STRH     r1,[r0,#0x48]
;;;450    					pR61509V->Data.VEY	=	MaxV	-	y1	-	1;	
00010c  eba90005          SUB      r0,r9,r5
000110  1e40              SUBS     r0,r0,#1
000112  b281              UXTH     r1,r0
000114  483f              LDR      r0,|L15.532|
000116  6800              LDR      r0,[r0,#0]  ; pR61509V
000118  f8a0104a          STRH     r1,[r0,#0x4a]
;;;451    					pR61509V->Data.HXA	=	pR61509V->Data.HEX;
00011c  483d              LDR      r0,|L15.532|
00011e  6800              LDR      r0,[r0,#0]  ; pR61509V
000120  f8b01046          LDRH     r1,[r0,#0x46]
000124  483b              LDR      r0,|L15.532|
000126  6800              LDR      r0,[r0,#0]  ; pR61509V
000128  f8a0104c          STRH     r1,[r0,#0x4c]
;;;452    					pR61509V->Data.VYA	=	pR61509V->Data.VEY;	
00012c  4839              LDR      r0,|L15.532|
00012e  6800              LDR      r0,[r0,#0]  ; pR61509V
000130  f8b0104a          LDRH     r1,[r0,#0x4a]
000134  4837              LDR      r0,|L15.532|
000136  6800              LDR      r0,[r0,#0]  ; pR61509V
000138  e000              B        |L15.316|
                  |L15.314|
00013a  e004              B        |L15.326|
                  |L15.316|
00013c  f8a0104e          STRH     r1,[r0,#0x4e]
;;;453    					Model	=	0X5000;
000140  f44f4aa0          MOV      r10,#0x5000
;;;454    			break;
000144  e02a              B        |L15.412|
                  |L15.326|
;;;455    		default:
;;;456    					pR61509V->Data.HSX	=	MaxH	-	y2	-	1;
000146  eba80007          SUB      r0,r8,r7
00014a  1e40              SUBS     r0,r0,#1
00014c  b281              UXTH     r1,r0
00014e  4831              LDR      r0,|L15.532|
000150  6800              LDR      r0,[r0,#0]  ; pR61509V
000152  f8a01044          STRH     r1,[r0,#0x44]
;;;457    					pR61509V->Data.HEX	=	MaxH	-	y1	-	1;
000156  eba80005          SUB      r0,r8,r5
00015a  1e40              SUBS     r0,r0,#1
00015c  b281              UXTH     r1,r0
00015e  482d              LDR      r0,|L15.532|
000160  6800              LDR      r0,[r0,#0]  ; pR61509V
000162  f8a01046          STRH     r1,[r0,#0x46]
;;;458    					pR61509V->Data.VSY	=	x1;
000166  482b              LDR      r0,|L15.532|
000168  6800              LDR      r0,[r0,#0]  ; pR61509V
00016a  f8a04048          STRH     r4,[r0,#0x48]
;;;459    					pR61509V->Data.VEY	=	x2;	
00016e  4829              LDR      r0,|L15.532|
000170  6800              LDR      r0,[r0,#0]  ; pR61509V
000172  f8a0604a          STRH     r6,[r0,#0x4a]
;;;460    					pR61509V->Data.HXA	=	pR61509V->Data.HEX;
000176  4827              LDR      r0,|L15.532|
000178  6800              LDR      r0,[r0,#0]  ; pR61509V
00017a  f8b01046          LDRH     r1,[r0,#0x46]
00017e  4825              LDR      r0,|L15.532|
000180  6800              LDR      r0,[r0,#0]  ; pR61509V
000182  f8a0104c          STRH     r1,[r0,#0x4c]
;;;461    					pR61509V->Data.VYA	=	pR61509V->Data.VSY;
000186  4823              LDR      r0,|L15.532|
000188  6800              LDR      r0,[r0,#0]  ; pR61509V
00018a  f8b01048          LDRH     r1,[r0,#0x48]
00018e  4821              LDR      r0,|L15.532|
000190  6800              LDR      r0,[r0,#0]  ; pR61509V
000192  f8a0104e          STRH     r1,[r0,#0x4e]
;;;462    					Model	=	0X5028;
000196  f2450a28          MOV      r10,#0x5028
;;;463    			break;
00019a  bf00              NOP      
                  |L15.412|
00019c  bf00              NOP                            ;436
;;;464    	}
;;;465    	//======================================区域设置
;;;466    	R61509V_WriteRegister(R61509V_R210_HSA,pR61509V->Data.HSX);		//Window Horizontal RAM Address Start(R210h)		//水平
00019e  481d              LDR      r0,|L15.532|
0001a0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001a2  f8b01044          LDRH     r1,[r0,#0x44]
0001a6  f44f7004          MOV      r0,#0x210
0001aa  f7fffffe          BL       R61509V_WriteRegister
;;;467    	R61509V_WriteRegister(R61509V_R211_HEA,pR61509V->Data.HEX);		//Window Horizontal RAM Address End(R211h)			//水平
0001ae  4819              LDR      r0,|L15.532|
0001b0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001b2  f8b01046          LDRH     r1,[r0,#0x46]
0001b6  f2402011          MOV      r0,#0x211
0001ba  f7fffffe          BL       R61509V_WriteRegister
;;;468    	R61509V_WriteRegister(R61509V_R212_VSA,pR61509V->Data.VSY);		//Window Vertical RAM Address Start (R212h)			//垂直
0001be  4815              LDR      r0,|L15.532|
0001c0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001c2  f8b01048          LDRH     r1,[r0,#0x48]
0001c6  f2402012          MOV      r0,#0x212
0001ca  f7fffffe          BL       R61509V_WriteRegister
;;;469    	R61509V_WriteRegister(R61509V_R213_VEA,pR61509V->Data.VEY);		//Window Vertical RAM Address End (R213h)				//垂直
0001ce  4811              LDR      r0,|L15.532|
0001d0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001d2  f8b0104a          LDRH     r1,[r0,#0x4a]
0001d6  f2402013          MOV      r0,#0x213
0001da  f7fffffe          BL       R61509V_WriteRegister
;;;470    	//======================================设置起始点
;;;471    	R61509V_WriteRegister(R61509V_R200_HA,pR61509V->Data.HXA);			//RAM Address Set (Horizontal Address) (R200h)
0001de  480d              LDR      r0,|L15.532|
0001e0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001e2  f8b0104c          LDRH     r1,[r0,#0x4c]
0001e6  f44f7000          MOV      r0,#0x200
0001ea  f7fffffe          BL       R61509V_WriteRegister
;;;472    	R61509V_WriteRegister(R61509V_R201_VA,pR61509V->Data.VYA);			//RAM Address Set (Vertical Address) (R201h)
0001ee  4809              LDR      r0,|L15.532|
0001f0  6800              LDR      r0,[r0,#0]  ; pR61509V
0001f2  f8b0104e          LDRH     r1,[r0,#0x4e]
0001f6  f2402001          MOV      r0,#0x201
0001fa  f7fffffe          BL       R61509V_WriteRegister
;;;473    	//======================================设置写入模式
;;;474    	R61509V_WriteRegister(R61509V_R003_EM,Model);						//RAM Address Set (Vertical Address) (R201h)
0001fe  4651              MOV      r1,r10
000200  2003              MOVS     r0,#3
000202  f7fffffe          BL       R61509V_WriteRegister
;;;475    	//======================================启动写入
;;;476    	R61509V_WriteIndex(R61509V_R202_GDRW);		//GRAM(Graphics RAM--图形内存) Data Write (R202h)准备写入
000206  f2402002          MOV      r0,#0x202
00020a  f7fffffe          BL       R61509V_WriteIndex
;;;477    }
00020e  e8bd8ff8          POP      {r3-r11,pc}
;;;478    //
                          ENDP

000212  0000              DCW      0x0000
                  |L15.532|
                          DCD      pR61509V
                  |L15.536|
                          DCD      R61509V_WriteCommand

                          AREA ||i.R61509V_ShowChar||, CODE, READONLY, ALIGN=2

                  R61509V_ShowChar PROC
;;;729    *******************************************************************************/
;;;730    void R61509V_ShowChar(
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;731    										u16 x,			//x				:起点x坐标
;;;732    										u16 y,			//y				:起点y坐标
;;;733    										u8 font,		//font		:字体大小
;;;734    										u16 color,	//字体颜色
;;;735    										u8 num,			//num			:字节数
;;;736    										u8 *Buffer	//Buffer	:显示的内容缓存
;;;737    										
;;;738    )		//高通字库测试程序
;;;739    {
000004  b085              SUB      sp,sp,#0x14
000006  4680              MOV      r8,r0
000008  4689              MOV      r9,r1
00000a  4614              MOV      r4,r2
00000c  469a              MOV      r10,r3
00000e  f8ddb03c          LDR      r11,[sp,#0x3c]
;;;740    	u8 temp;
;;;741    	u8 i=0,j=0;
000012  2500              MOVS     r5,#0
000014  2700              MOVS     r7,#0
;;;742    	unsigned short x1=0,x2=0,y1=0,y2=0;
000016  2000              MOVS     r0,#0
000018  9004              STR      r0,[sp,#0x10]
00001a  9003              STR      r0,[sp,#0xc]
00001c  9002              STR      r0,[sp,#8]
00001e  9001              STR      r0,[sp,#4]
;;;743    	unsigned short LCD_PEN_COLOR	=	0;   	//画笔色
000020  9000              STR      r0,[sp,#0]
;;;744    	x1	=	x;
000022  f8cd8010          STR      r8,[sp,#0x10]
;;;745    	y1	=	y;
000026  f8cd9008          STR      r9,[sp,#8]
;;;746    	x2	=	x+font/2-1;		//
00002a  4620              MOV      r0,r4
00002c  eb0471d0          ADD      r1,r4,r0,LSR #31
000030  eb080161          ADD      r1,r8,r1,ASR #1
000034  1e49              SUBS     r1,r1,#1
000036  b289              UXTH     r1,r1
000038  9103              STR      r1,[sp,#0xc]
;;;747    	y2	=	y+font-1;
00003a  eb090004          ADD      r0,r9,r4
00003e  1e40              SUBS     r0,r0,#1
000040  b280              UXTH     r0,r0
000042  9001              STR      r0,[sp,#4]
;;;748    	
;;;749    	R61509V_SetWindowAddress(x1,y1,x2,y2);//设置显示区域	
000044  e9dd3101          LDRD     r3,r1,[sp,#4]
000048  e9dd2003          LDRD     r2,r0,[sp,#0xc]
00004c  f7fffffe          BL       R61509V_SetWindowAddress
;;;750    	R61509V_WriteIndex( R61509V_R202_GDRW );
000050  f2402002          MOV      r0,#0x202
000054  f7fffffe          BL       R61509V_WriteIndex
;;;751    	R61509VCrl(CS);	//LCD_CS_LOW;
000058  4828              LDR      r0,|L16.252|
00005a  6800              LDR      r0,[r0,#0]  ; pR61509V
00005c  8d80              LDRH     r0,[r0,#0x2c]
00005e  4927              LDR      r1,|L16.252|
000060  6809              LDR      r1,[r1,#0]  ; pR61509V
000062  6a89              LDR      r1,[r1,#0x28]
000064  6148              STR      r0,[r1,#0x14]
;;;752    	for(i=0;i<num;i++)
000066  bf00              NOP      
000068  e03a              B        |L16.224|
                  |L16.106|
;;;753    	{ 
;;;754    		temp=Buffer[i];		 					//调用1608字体--二维数组形式--字库使用时取消
00006a  f81b6005          LDRB     r6,[r11,r5]
;;;755    		for(j=0;j<8;j++)
00006e  2700              MOVS     r7,#0
000070  e012              B        |L16.152|
                  |L16.114|
;;;756    		{
;;;757    			if((temp&0x80)==0X80)
000072  f0060080          AND      r0,r6,#0x80
000076  2880              CMP      r0,#0x80
000078  d102              BNE      |L16.128|
;;;758    			{
;;;759    				LCD_PEN_COLOR=color;
00007a  f8cda000          STR      r10,[sp,#0]
00007e  e004              B        |L16.138|
                  |L16.128|
;;;760    			}
;;;761    			else
;;;762    				LCD_PEN_COLOR=pR61509V->Data.BColor;
000080  481e              LDR      r0,|L16.252|
000082  6800              LDR      r0,[r0,#0]  ; pR61509V
000084  f8b00052          LDRH     r0,[r0,#0x52]
000088  9000              STR      r0,[sp,#0]
                  |L16.138|
;;;763    			R61509V_WriteData(LCD_PEN_COLOR);
00008a  9800              LDR      r0,[sp,#0]
00008c  f7fffffe          BL       R61509V_WriteData
;;;764    			temp=temp<<1;
000090  0670              LSLS     r0,r6,#25
000092  0e06              LSRS     r6,r0,#24
000094  1c78              ADDS     r0,r7,#1              ;755
000096  b2c7              UXTB     r7,r0                 ;755
                  |L16.152|
000098  2f08              CMP      r7,#8                 ;755
00009a  dbea              BLT      |L16.114|
;;;765    		}
;;;766        //=======================未满8位的补充定入
;;;767        if((24==font)||(12==font))
00009c  2c18              CMP      r4,#0x18
00009e  d001              BEQ      |L16.164|
0000a0  2c0c              CMP      r4,#0xc
0000a2  d11b              BNE      |L16.220|
                  |L16.164|
;;;768        {
;;;769          temp=Buffer[i+1];		 					
0000a4  1c68              ADDS     r0,r5,#1
0000a6  f81b6000          LDRB     r6,[r11,r0]
;;;770          for(j=0;j<4;j++)
0000aa  2700              MOVS     r7,#0
0000ac  e012              B        |L16.212|
                  |L16.174|
;;;771          {
;;;772            if((temp&0x80)==0X80)
0000ae  f0060080          AND      r0,r6,#0x80
0000b2  2880              CMP      r0,#0x80
0000b4  d102              BNE      |L16.188|
;;;773            {
;;;774              LCD_PEN_COLOR=color;
0000b6  f8cda000          STR      r10,[sp,#0]
0000ba  e004              B        |L16.198|
                  |L16.188|
;;;775            }
;;;776            else
;;;777              LCD_PEN_COLOR=pR61509V->Data.BColor;
0000bc  480f              LDR      r0,|L16.252|
0000be  6800              LDR      r0,[r0,#0]  ; pR61509V
0000c0  f8b00052          LDRH     r0,[r0,#0x52]
0000c4  9000              STR      r0,[sp,#0]
                  |L16.198|
;;;778            R61509V_WriteData(LCD_PEN_COLOR);
0000c6  9800              LDR      r0,[sp,#0]
0000c8  f7fffffe          BL       R61509V_WriteData
;;;779            temp=temp<<1;
0000cc  0670              LSLS     r0,r6,#25
0000ce  0e06              LSRS     r6,r0,#24
0000d0  1c78              ADDS     r0,r7,#1              ;770
0000d2  b2c7              UXTB     r7,r0                 ;770
                  |L16.212|
0000d4  2f04              CMP      r7,#4                 ;770
0000d6  dbea              BLT      |L16.174|
;;;780          }
;;;781          i++;
0000d8  1c68              ADDS     r0,r5,#1
0000da  b2c5              UXTB     r5,r0
                  |L16.220|
0000dc  1c68              ADDS     r0,r5,#1              ;752
0000de  b2c5              UXTB     r5,r0                 ;752
                  |L16.224|
0000e0  980e              LDR      r0,[sp,#0x38]         ;752
0000e2  4285              CMP      r5,r0                 ;752
0000e4  dbc1              BLT      |L16.106|
;;;782        }		
;;;783    	}
;;;784    	R61509VSet(CS);	//LCD_CS_HIGH;
0000e6  4805              LDR      r0,|L16.252|
0000e8  6800              LDR      r0,[r0,#0]  ; pR61509V
0000ea  8d80              LDRH     r0,[r0,#0x2c]
0000ec  4903              LDR      r1,|L16.252|
0000ee  6809              LDR      r1,[r1,#0]  ; pR61509V
0000f0  6a89              LDR      r1,[r1,#0x28]
0000f2  6108              STR      r0,[r1,#0x10]
;;;785    }
0000f4  b005              ADD      sp,sp,#0x14
0000f6  e8bd8ff0          POP      {r4-r11,pc}
;;;786    /*******************************************************************************
                          ENDP

0000fa  0000              DCW      0x0000
                  |L16.252|
                          DCD      pR61509V

                          AREA ||i.R61509V_ShowWord||, CODE, READONLY, ALIGN=2

                  R61509V_ShowWord PROC
;;;791    *******************************************************************************/
;;;792    void R61509V_ShowWord(
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;793    										u16 x,			//x				:起点x坐标
;;;794    										u16 y,			//y				:起点y坐标
;;;795    										u8 font,		//font		:字体大小
;;;796    										u16 color,	//字体颜色
;;;797    										u8 num,			//num			:字节数
;;;798    										u8 *Buffer	//Buffer	:显示的内容缓存
;;;799    										
;;;800    )		//高通字库测试程序
;;;801    {
000004  b085              SUB      sp,sp,#0x14
000006  4680              MOV      r8,r0
000008  4689              MOV      r9,r1
00000a  4615              MOV      r5,r2
00000c  469a              MOV      r10,r3
00000e  f8ddb03c          LDR      r11,[sp,#0x3c]
;;;802    	u8 temp;
;;;803    	u8 i=0,j=0;
000012  2400              MOVS     r4,#0
000014  2700              MOVS     r7,#0
;;;804    	unsigned short x1=0,x2=0,y1=0,y2=0;
000016  2000              MOVS     r0,#0
000018  9004              STR      r0,[sp,#0x10]
00001a  9003              STR      r0,[sp,#0xc]
00001c  9002              STR      r0,[sp,#8]
00001e  9001              STR      r0,[sp,#4]
;;;805    	unsigned short LCD_PEN_COLOR	=	0;   	//画笔色
000020  9000              STR      r0,[sp,#0]
;;;806    	x1	=	x;
000022  f8cd8010          STR      r8,[sp,#0x10]
;;;807    	y1	=	y;
000026  f8cd9008          STR      r9,[sp,#8]
;;;808      x2	=	x+font-1;
00002a  eb080005          ADD      r0,r8,r5
00002e  1e40              SUBS     r0,r0,#1
000030  b280              UXTH     r0,r0
000032  9003              STR      r0,[sp,#0xc]
;;;809      y2	=	y+font-1;
000034  eb090005          ADD      r0,r9,r5
000038  1e40              SUBS     r0,r0,#1
00003a  b280              UXTH     r0,r0
00003c  9001              STR      r0,[sp,#4]
;;;810    	R61509V_SetWindowAddress(x1,y1,x2,y2);//设置显示区域
00003e  e9dd3101          LDRD     r3,r1,[sp,#4]
000042  e9dd2003          LDRD     r2,r0,[sp,#0xc]
000046  f7fffffe          BL       R61509V_SetWindowAddress
;;;811    	R61509V_WriteIndex( R61509V_R202_GDRW );
00004a  f2402002          MOV      r0,#0x202
00004e  f7fffffe          BL       R61509V_WriteIndex
;;;812    	R61509VCrl(CS);	//LCD_CS_LOW;
000052  4827              LDR      r0,|L17.240|
000054  6800              LDR      r0,[r0,#0]  ; pR61509V
000056  8d80              LDRH     r0,[r0,#0x2c]
000058  4925              LDR      r1,|L17.240|
00005a  6809              LDR      r1,[r1,#0]  ; pR61509V
00005c  6a89              LDR      r1,[r1,#0x28]
00005e  6148              STR      r0,[r1,#0x14]
;;;813    	for(i=0;i<num;i++)
000060  bf00              NOP      
000062  e038              B        |L17.214|
                  |L17.100|
;;;814    	{ 
;;;815    		temp=Buffer[i];		 				
000064  f81b6004          LDRB     r6,[r11,r4]
;;;816    		for(j=0;j<8;j++)
000068  2700              MOVS     r7,#0
00006a  e012              B        |L17.146|
                  |L17.108|
;;;817    		{
;;;818    			if((temp&0x80)==0X80)
00006c  f0060080          AND      r0,r6,#0x80
000070  2880              CMP      r0,#0x80
000072  d102              BNE      |L17.122|
;;;819    			{
;;;820    				LCD_PEN_COLOR=color;
000074  f8cda000          STR      r10,[sp,#0]
000078  e004              B        |L17.132|
                  |L17.122|
;;;821    			}
;;;822    			else
;;;823    				LCD_PEN_COLOR=pR61509V->Data.BColor;
00007a  481d              LDR      r0,|L17.240|
00007c  6800              LDR      r0,[r0,#0]  ; pR61509V
00007e  f8b00052          LDRH     r0,[r0,#0x52]
000082  9000              STR      r0,[sp,#0]
                  |L17.132|
;;;824    			R61509V_WriteData(LCD_PEN_COLOR);
000084  9800              LDR      r0,[sp,#0]
000086  f7fffffe          BL       R61509V_WriteData
;;;825    			temp=temp<<1;
00008a  0670              LSLS     r0,r6,#25
00008c  0e06              LSRS     r6,r0,#24
00008e  1c78              ADDS     r0,r7,#1              ;816
000090  b2c7              UXTB     r7,r0                 ;816
                  |L17.146|
000092  2f08              CMP      r7,#8                 ;816
000094  dbea              BLT      |L17.108|
;;;826    		}
;;;827        //=======================未满8位的补充定入
;;;828        if((12==font))
000096  2d0c              CMP      r5,#0xc
000098  d11b              BNE      |L17.210|
;;;829        {
;;;830          temp=Buffer[i+1];		 					
00009a  1c60              ADDS     r0,r4,#1
00009c  f81b6000          LDRB     r6,[r11,r0]
;;;831          for(j=0;j<4;j++)
0000a0  2700              MOVS     r7,#0
0000a2  e012              B        |L17.202|
                  |L17.164|
;;;832          {
;;;833            if((temp&0x80)==0X80)
0000a4  f0060080          AND      r0,r6,#0x80
0000a8  2880              CMP      r0,#0x80
0000aa  d102              BNE      |L17.178|
;;;834            {
;;;835              LCD_PEN_COLOR=color;
0000ac  f8cda000          STR      r10,[sp,#0]
0000b0  e004              B        |L17.188|
                  |L17.178|
;;;836            }
;;;837            else
;;;838              LCD_PEN_COLOR=pR61509V->Data.BColor;
0000b2  480f              LDR      r0,|L17.240|
0000b4  6800              LDR      r0,[r0,#0]  ; pR61509V
0000b6  f8b00052          LDRH     r0,[r0,#0x52]
0000ba  9000              STR      r0,[sp,#0]
                  |L17.188|
;;;839            R61509V_WriteData(LCD_PEN_COLOR);
0000bc  9800              LDR      r0,[sp,#0]
0000be  f7fffffe          BL       R61509V_WriteData
;;;840            temp=temp<<1;
0000c2  0670              LSLS     r0,r6,#25
0000c4  0e06              LSRS     r6,r0,#24
0000c6  1c78              ADDS     r0,r7,#1              ;831
0000c8  b2c7              UXTB     r7,r0                 ;831
                  |L17.202|
0000ca  2f04              CMP      r7,#4                 ;831
0000cc  dbea              BLT      |L17.164|
;;;841          }
;;;842          i++;
0000ce  1c60              ADDS     r0,r4,#1
0000d0  b2c4              UXTB     r4,r0
                  |L17.210|
0000d2  1c60              ADDS     r0,r4,#1              ;813
0000d4  b2c4              UXTB     r4,r0                 ;813
                  |L17.214|
0000d6  980e              LDR      r0,[sp,#0x38]         ;813
0000d8  4284              CMP      r4,r0                 ;813
0000da  dbc3              BLT      |L17.100|
;;;843        }			
;;;844    	}
;;;845    	R61509VSet(CS);	//LCD_CS_HIGH;
0000dc  4804              LDR      r0,|L17.240|
0000de  6800              LDR      r0,[r0,#0]  ; pR61509V
0000e0  8d80              LDRH     r0,[r0,#0x2c]
0000e2  4903              LDR      r1,|L17.240|
0000e4  6809              LDR      r1,[r1,#0]  ; pR61509V
0000e6  6a89              LDR      r1,[r1,#0x28]
0000e8  6108              STR      r0,[r1,#0x10]
;;;846    }
0000ea  b005              ADD      sp,sp,#0x14
0000ec  e8bd8ff0          POP      {r4-r11,pc}
;;;847    
                          ENDP

                  |L17.240|
                          DCD      pR61509V

                          AREA ||i.R61509V_WriteAddr||, CODE, READONLY, ALIGN=2

                  R61509V_WriteAddr PROC
;;;213    *******************************************************************************/
;;;214    void R61509V_WriteAddr(unsigned	short	Addr)
000000  b500              PUSH     {lr}
;;;215    {
000002  4603              MOV      r3,r0
;;;216    	R61509VCrl(DC);	//LCD_DC_LOW;		//RS
000004  4808              LDR      r0,|L18.40|
000006  6800              LDR      r0,[r0,#0]  ; pR61509V
000008  8b80              LDRH     r0,[r0,#0x1c]
00000a  4907              LDR      r1,|L18.40|
00000c  6809              LDR      r1,[r1,#0]  ; pR61509V
00000e  6989              LDR      r1,[r1,#0x18]
000010  6148              STR      r0,[r1,#0x14]
;;;217    	R61509V_WriteData(Addr);
000012  4618              MOV      r0,r3
000014  f7fffffe          BL       R61509V_WriteData
;;;218    	R61509VSet(DC);	//LCD_DC_HIGH;	//RS
000018  4803              LDR      r0,|L18.40|
00001a  6800              LDR      r0,[r0,#0]  ; pR61509V
00001c  8b80              LDRH     r0,[r0,#0x1c]
00001e  4902              LDR      r1,|L18.40|
000020  6809              LDR      r1,[r1,#0]  ; pR61509V
000022  6989              LDR      r1,[r1,#0x18]
000024  6108              STR      r0,[r1,#0x10]
;;;219    }
000026  bd00              POP      {pc}
;;;220    /*******************************************************************************
                          ENDP

                  |L18.40|
                          DCD      pR61509V

                          AREA ||i.R61509V_WriteCommand||, CODE, READONLY, ALIGN=1

                  R61509V_WriteCommand PROC
;;;261    *******************************************************************************/
;;;262    void R61509V_WriteCommand(unsigned	short	Index,unsigned short Cmd)
000000  b530              PUSH     {r4,r5,lr}
;;;263    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;264    	R61509V_WriteRegister(Index,Cmd);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       R61509V_WriteRegister
;;;265    }
00000e  bd30              POP      {r4,r5,pc}
;;;266    /*******************************************************************************
                          ENDP


                          AREA ||i.R61509V_WriteData||, CODE, READONLY, ALIGN=2

                  R61509V_WriteData PROC
;;;188    *******************************************************************************/
;;;189    void R61509V_WriteData(unsigned	short	Data)
000000  4909              LDR      r1,|L20.40|
;;;190    {
;;;191    #if	1	//Bus16Bit
;;;192    	R61509VCrl(WR);	//LCD_WR_LOW;
000002  6809              LDR      r1,[r1,#0]  ; pR61509V
000004  8c89              LDRH     r1,[r1,#0x24]
000006  4a08              LDR      r2,|L20.40|
000008  6812              LDR      r2,[r2,#0]  ; pR61509V
00000a  6a12              LDR      r2,[r2,#0x20]
00000c  6151              STR      r1,[r2,#0x14]
;;;193    	R61509V_DATABUS_PORT->ODR = Data;
00000e  4906              LDR      r1,|L20.40|
000010  6809              LDR      r1,[r1,#0]  ; pR61509V
000012  6b89              LDR      r1,[r1,#0x38]
000014  60c8              STR      r0,[r1,#0xc]
;;;194    	R61509VSet(WR);	//LCD_WR_HIGH;
000016  4904              LDR      r1,|L20.40|
000018  6809              LDR      r1,[r1,#0]  ; pR61509V
00001a  8c89              LDRH     r1,[r1,#0x24]
00001c  4a02              LDR      r2,|L20.40|
00001e  6812              LDR      r2,[r2,#0]  ; pR61509V
000020  6a12              LDR      r2,[r2,#0x20]
000022  6111              STR      r1,[r2,#0x10]
;;;195    #else
;;;196    	R61509VCrl(WR);	//LCD_WR_LOW;
;;;197    	R61509V_DATABUS_PORT->ODR = Data>>8;
;;;198    	R61509VSet(WR);	//LCD_WR_HIGH;
;;;199    	
;;;200    	R61509VCrl(WR);	//LCD_WR_LOW;
;;;201    	R61509V_DATABUS_PORT->ODR = Data&0xFF;
;;;202    	R61509VSet(WR);	//LCD_WR_HIGH;
;;;203    #endif
;;;204    }
000024  4770              BX       lr
;;;205    /*******************************************************************************
                          ENDP

000026  0000              DCW      0x0000
                  |L20.40|
                          DCD      pR61509V

                          AREA ||i.R61509V_WriteGRAM||, CODE, READONLY, ALIGN=2

                  R61509V_WriteGRAM PROC
;;;274    *******************************************************************************/
;;;275    void R61509V_WriteGRAM(unsigned	short* RAM,unsigned long length)
000000  b570              PUSH     {r4-r6,lr}
;;;276    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;277    	unsigned	long	i	=	0;
000006  2400              MOVS     r4,#0
;;;278    	R61509VCrl(CS);	//LCD_CS_LOW;
000008  480d              LDR      r0,|L21.64|
00000a  6800              LDR      r0,[r0,#0]  ; pR61509V
00000c  8d80              LDRH     r0,[r0,#0x2c]
00000e  490c              LDR      r1,|L21.64|
000010  6809              LDR      r1,[r1,#0]  ; pR61509V
000012  6a89              LDR      r1,[r1,#0x28]
000014  6148              STR      r0,[r1,#0x14]
;;;279    	R61509V_WriteAddr(R61509V_R202_GDRW);
000016  f2402002          MOV      r0,#0x202
00001a  f7fffffe          BL       R61509V_WriteAddr
;;;280    	for(i=0;i<length;i++)
00001e  bf00              NOP      
000020  e004              B        |L21.44|
                  |L21.34|
;;;281    	{
;;;282    		R61509V_WriteData(RAM[i]);
000022  f8350014          LDRH     r0,[r5,r4,LSL #1]
000026  f7fffffe          BL       R61509V_WriteData
00002a  1c64              ADDS     r4,r4,#1              ;280
                  |L21.44|
00002c  42b4              CMP      r4,r6                 ;280
00002e  d3f8              BCC      |L21.34|
;;;283    	}
;;;284    	R61509VSet(CS);	//LCD_CS_HIGH;
000030  4803              LDR      r0,|L21.64|
000032  6800              LDR      r0,[r0,#0]  ; pR61509V
000034  8d80              LDRH     r0,[r0,#0x2c]
000036  4902              LDR      r1,|L21.64|
000038  6809              LDR      r1,[r1,#0]  ; pR61509V
00003a  6a89              LDR      r1,[r1,#0x28]
00003c  6108              STR      r0,[r1,#0x10]
;;;285    }
00003e  bd70              POP      {r4-r6,pc}
;;;286    /*******************************************************************************
                          ENDP

                  |L21.64|
                          DCD      pR61509V

                          AREA ||i.R61509V_WriteIndex||, CODE, READONLY, ALIGN=2

                  R61509V_WriteIndex PROC
;;;228    *******************************************************************************/
;;;229    void R61509V_WriteIndex(unsigned	short	Index)
000000  b510              PUSH     {r4,lr}
;;;230    {
000002  4604              MOV      r4,r0
;;;231    	R61509VCrl(CS);	//LCD_CS_LOW;	
000004  4808              LDR      r0,|L22.40|
000006  6800              LDR      r0,[r0,#0]  ; pR61509V
000008  8d80              LDRH     r0,[r0,#0x2c]
00000a  4907              LDR      r1,|L22.40|
00000c  6809              LDR      r1,[r1,#0]  ; pR61509V
00000e  6a89              LDR      r1,[r1,#0x28]
000010  6148              STR      r0,[r1,#0x14]
;;;232    	R61509V_WriteAddr(Index);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       R61509V_WriteAddr
;;;233    	R61509VSet(CS);	//LCD_CS_HIGH;
000018  4803              LDR      r0,|L22.40|
00001a  6800              LDR      r0,[r0,#0]  ; pR61509V
00001c  8d80              LDRH     r0,[r0,#0x2c]
00001e  4902              LDR      r1,|L22.40|
000020  6809              LDR      r1,[r1,#0]  ; pR61509V
000022  6a89              LDR      r1,[r1,#0x28]
000024  6108              STR      r0,[r1,#0x10]
;;;234    }
000026  bd10              POP      {r4,pc}
;;;235    /*******************************************************************************
                          ENDP

                  |L22.40|
                          DCD      pR61509V

                          AREA ||i.R61509V_WriteRegister||, CODE, READONLY, ALIGN=2

                  R61509V_WriteRegister PROC
;;;243    *******************************************************************************/
;;;244    void R61509V_WriteRegister(unsigned	short	Addr,unsigned short Data)
000000  b530              PUSH     {r4,r5,lr}
;;;245    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;246    	R61509VCrl(CS);	//LCD_CS_LOW;	
000006  480a              LDR      r0,|L23.48|
000008  6800              LDR      r0,[r0,#0]  ; pR61509V
00000a  8d80              LDRH     r0,[r0,#0x2c]
00000c  4908              LDR      r1,|L23.48|
00000e  6809              LDR      r1,[r1,#0]  ; pR61509V
000010  6a89              LDR      r1,[r1,#0x28]
000012  6148              STR      r0,[r1,#0x14]
;;;247    	//---------------------Write Index
;;;248    	R61509V_WriteAddr(Addr);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       R61509V_WriteAddr
;;;249    	//---------------------Write Data
;;;250    	R61509V_WriteData(Data);	
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       R61509V_WriteData
;;;251    	R61509VSet(CS);	//LCD_CS_HIGH;	
000020  4803              LDR      r0,|L23.48|
000022  6800              LDR      r0,[r0,#0]  ; pR61509V
000024  8d80              LDRH     r0,[r0,#0x2c]
000026  4902              LDR      r1,|L23.48|
000028  6809              LDR      r1,[r1,#0]  ; pR61509V
00002a  6a89              LDR      r1,[r1,#0x28]
00002c  6108              STR      r0,[r1,#0x10]
;;;252    }
00002e  bd30              POP      {r4,r5,pc}
;;;253    /*******************************************************************************
                          ENDP

                  |L23.48|
                          DCD      pR61509V

                          AREA ||.data||, DATA, ALIGN=2

                  pR61509V
                          DCD      0x00000000
                  DeviceCode
000004  0000              DCW      0x0000
