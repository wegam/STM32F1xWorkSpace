; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\stm32_exti.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\stm32_exti.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\stm32_exti.crf ..\..\Driver\WOW\SCR\STM32_EXTI.C]
                          THUMB

                          AREA ||i.EXTI_ClockConf||, CODE, READONLY, ALIGN=2

                  EXTI_ClockConf PROC
;;;36     *******************************************************************************/
;;;37     void EXTI_ClockConf(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b570              PUSH     {r4-r6,lr}
;;;38     										u16 GPIO_Pin_x									//GPIO引脚
;;;39     										)		//打开外部中断相应管脚时钟--20171213	
;;;40     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;41     	/* Check the parameters */
;;;42       assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;43       assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;44     	switch (*(u32*)&GPIOx)
000006  493f              LDR      r1,|L1.260|
000008  1a68              SUBS     r0,r5,r1
00000a  428d              CMP      r5,r1
00000c  d062              BEQ      |L1.212|
00000e  dc09              BGT      |L1.36|
000010  483d              LDR      r0,|L1.264|
000012  4428              ADD      r0,r0,r5
000014  b180              CBZ      r0,|L1.56|
000016  f5b06f80          CMP      r0,#0x400
00001a  d02e              BEQ      |L1.122|
00001c  f5b06f00          CMP      r0,#0x800
000020  d16c              BNE      |L1.252|
000022  e044              B        |L1.174|
                  |L1.36|
000024  f5b06f80          CMP      r0,#0x400
000028  d059              BEQ      |L1.222|
00002a  f5b06f00          CMP      r0,#0x800
00002e  d05b              BEQ      |L1.232|
000030  f5b06f40          CMP      r0,#0xc00
000034  d162              BNE      |L1.252|
000036  e05c              B        |L1.242|
                  |L1.56|
;;;45     	{
;;;46     		//********************GPIOA时钟使能********************	
;;;47     		case GPIOA_BASE:
;;;48     //			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
;;;49     			if(((GPIO_Pin_x&GPIO_Pin_13)==GPIO_Pin_13)||((GPIO_Pin_x&GPIO_Pin_14)==GPIO_Pin_14)||((GPIO_Pin_x&GPIO_Pin_15)==GPIO_Pin_15)||(GPIO_Pin_x==GPIO_Pin_All))
000038  f4045000          AND      r0,r4,#0x2000
00003c  f5b05f00          CMP      r0,#0x2000
000040  d00d              BEQ      |L1.94|
000042  f4044080          AND      r0,r4,#0x4000
000046  f5b04f80          CMP      r0,#0x4000
00004a  d008              BEQ      |L1.94|
00004c  f4044000          AND      r0,r4,#0x8000
000050  f5b04f00          CMP      r0,#0x8000
000054  d003              BEQ      |L1.94|
000056  f64f70ff          MOV      r0,#0xffff
00005a  4284              CMP      r4,r0
00005c  d108              BNE      |L1.112|
                  |L1.94|
;;;50     			{
;;;51     				RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_AFIO, ENABLE);
00005e  2101              MOVS     r1,#1
000060  2005              MOVS     r0,#5
000062  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;52     				//GPIO_PinRemapConfig(GPIO_Remap_SWJ_Disable,ENABLE);			//关闭SW功能
;;;53     				GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);		//关闭JTAG,SW功能开启
000066  2101              MOVS     r1,#1
000068  4828              LDR      r0,|L1.268|
00006a  f7fffffe          BL       GPIO_PinRemapConfig
00006e  e003              B        |L1.120|
                  |L1.112|
;;;54     			}
;;;55     			else
;;;56     				RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000070  2101              MOVS     r1,#1
000072  2004              MOVS     r0,#4
000074  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.120|
;;;57     			break;
000078  e041              B        |L1.254|
                  |L1.122|
;;;58     		//********************GPIOB时钟使能********************
;;;59     		case GPIOB_BASE:
;;;60     			if(((GPIO_Pin_x&GPIO_Pin_3)==GPIO_Pin_3)||((GPIO_Pin_x&GPIO_Pin_4)==GPIO_Pin_4)||(GPIO_Pin_x==GPIO_Pin_All))
00007a  f0040008          AND      r0,r4,#8
00007e  2808              CMP      r0,#8
000080  d007              BEQ      |L1.146|
000082  f0040010          AND      r0,r4,#0x10
000086  2810              CMP      r0,#0x10
000088  d003              BEQ      |L1.146|
00008a  f64f70ff          MOV      r0,#0xffff
00008e  4284              CMP      r4,r0
000090  d108              BNE      |L1.164|
                  |L1.146|
;;;61     			{
;;;62     				RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_AFIO, ENABLE);
000092  2101              MOVS     r1,#1
000094  2009              MOVS     r0,#9
000096  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;63     				GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);				//关闭JTAG
00009a  2101              MOVS     r1,#1
00009c  481b              LDR      r0,|L1.268|
00009e  f7fffffe          BL       GPIO_PinRemapConfig
0000a2  e003              B        |L1.172|
                  |L1.164|
;;;64     			}
;;;65     			else
;;;66     				RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
0000a4  2101              MOVS     r1,#1
0000a6  2008              MOVS     r0,#8
0000a8  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.172|
;;;67     			break;
0000ac  e027              B        |L1.254|
                  |L1.174|
;;;68     		//********************GPIOC时钟使能********************
;;;69     		case GPIOC_BASE:
;;;70     			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
0000ae  2101              MOVS     r1,#1
0000b0  2010              MOVS     r0,#0x10
0000b2  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;71     			if(((GPIO_Pin_x&GPIO_Pin_14)==GPIO_Pin_14)||((GPIO_Pin_x&GPIO_Pin_15)==GPIO_Pin_15))
0000b6  f4044080          AND      r0,r4,#0x4000
0000ba  f5b04f80          CMP      r0,#0x4000
0000be  d004              BEQ      |L1.202|
0000c0  f4044000          AND      r0,r4,#0x8000
0000c4  f5b04f00          CMP      r0,#0x8000
0000c8  d103              BNE      |L1.210|
                  |L1.202|
;;;72     				RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC |RCC_APB2Periph_AFIO, ENABLE);
0000ca  2101              MOVS     r1,#1
0000cc  2011              MOVS     r0,#0x11
0000ce  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.210|
;;;73     			break;
0000d2  e014              B        |L1.254|
                  |L1.212|
;;;74     		//********************GPIOD时钟使能********************
;;;75     		case GPIOD_BASE:
;;;76     			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
0000d4  2101              MOVS     r1,#1
0000d6  2020              MOVS     r0,#0x20
0000d8  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;77     			break;
0000dc  e00f              B        |L1.254|
                  |L1.222|
;;;78     		//********************GPIOE时钟使能********************
;;;79     		case GPIOE_BASE:
;;;80     			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);
0000de  2101              MOVS     r1,#1
0000e0  2040              MOVS     r0,#0x40
0000e2  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;81     			break;
0000e6  e00a              B        |L1.254|
                  |L1.232|
;;;82     		//********************GPIOF时钟使能********************
;;;83     		case GPIOF_BASE:
;;;84     			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);
0000e8  2101              MOVS     r1,#1
0000ea  2080              MOVS     r0,#0x80
0000ec  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;85     			break;
0000f0  e005              B        |L1.254|
                  |L1.242|
;;;86     		//********************GPIOG时钟使能********************
;;;87     		case GPIOG_BASE:
;;;88     			RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG, ENABLE);
0000f2  2101              MOVS     r1,#1
0000f4  0208              LSLS     r0,r1,#8
0000f6  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;89     			break;		
0000fa  e000              B        |L1.254|
                  |L1.252|
;;;90     		default: break;		
0000fc  bf00              NOP      
                  |L1.254|
0000fe  bf00              NOP                            ;57
;;;91     	}
;;;92     }
000100  bd70              POP      {r4-r6,pc}
;;;93     /*******************************************************************************
                          ENDP

000102  0000              DCW      0x0000
                  |L1.260|
                          DCD      0x40011400
                  |L1.264|
                          DCD      0xbffef800
                  |L1.268|
                          DCD      0x00300200

                          AREA ||i.EXTI_Configuration_ITF||, CODE, READONLY, ALIGN=1

                  EXTI_Configuration_ITF PROC
;;;426    *******************************************************************************/
;;;427    void EXTI_Configuration_ITF(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b570              PUSH     {r4-r6,lr}
;;;428    														u16 GPIO_Pin_x									//GPIO引脚
;;;429    														)		//外部下降沿中断配置--20171213
;;;430    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;431    	/* Check the parameters */
;;;432      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;433    	assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;434    	
;;;435    	EXTI_ClockConf(GPIOx,GPIO_Pin_x);								//打开外部中断相应管脚时钟--20171213
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       EXTI_ClockConf
;;;436    	EXTI_GPIOConf(GPIOx,GPIO_Pin_x,GPIO_Mode_IPU);	//根据输入模式初始化GPIO--20171213---上拉
00000e  2248              MOVS     r2,#0x48
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       EXTI_GPIOConf
;;;437    	EXTI_LineConf(GPIOx,GPIO_Pin_x);								//设置中断线--20171213	
000018  4621              MOV      r1,r4
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       EXTI_LineConf
;;;438    	EXTI_TTMConf(GPIO_Pin_x,EXTI_Trigger_Falling);	//外部中断触发模式配置--20171213--下降沿中断
000020  210c              MOVS     r1,#0xc
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       EXTI_TTMConf
;;;439    	EXTI_NVICConf(GPIOx,GPIO_Pin_x);								//中断通道及优先级配置--20171213	
000028  4621              MOV      r1,r4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       EXTI_NVICConf
;;;440    }
000030  bd70              POP      {r4-r6,pc}
;;;441    /*******************************************************************************
                          ENDP


                          AREA ||i.EXTI_Configuration_ITR||, CODE, READONLY, ALIGN=1

                  EXTI_Configuration_ITR PROC
;;;403    *******************************************************************************/
;;;404    void EXTI_Configuration_ITR(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b570              PUSH     {r4-r6,lr}
;;;405    														u16 GPIO_Pin_x									//GPIO引脚
;;;406    														)		//外部上升沿中断配置--20171213
;;;407    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;408    	/* Check the parameters */
;;;409      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;410    	assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;411    	
;;;412    	EXTI_ClockConf(GPIOx,GPIO_Pin_x);								//打开外部中断相应管脚时钟--20171213
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       EXTI_ClockConf
;;;413    	EXTI_GPIOConf(GPIOx,GPIO_Pin_x,GPIO_Mode_IPD);	//根据输入模式初始化GPIO--20171213---下拉
00000e  2228              MOVS     r2,#0x28
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       EXTI_GPIOConf
;;;414    	EXTI_LineConf(GPIOx,GPIO_Pin_x);								//设置中断线--20171213	
000018  4621              MOV      r1,r4
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       EXTI_LineConf
;;;415    	EXTI_TTMConf(GPIO_Pin_x,EXTI_Trigger_Rising);		//外部中断触发模式配置--20171213--上升沿中断
000020  2108              MOVS     r1,#8
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       EXTI_TTMConf
;;;416    	EXTI_NVICConf(GPIOx,GPIO_Pin_x);								//中断通道及优先级配置--20171213	
000028  4621              MOV      r1,r4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       EXTI_NVICConf
;;;417    }
000030  bd70              POP      {r4-r6,pc}
;;;418    /*******************************************************************************
                          ENDP


                          AREA ||i.EXTI_Configuration_ITRF||, CODE, READONLY, ALIGN=1

                  EXTI_Configuration_ITRF PROC
;;;449    *******************************************************************************/
;;;450    void EXTI_Configuration_ITRF(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b570              PUSH     {r4-r6,lr}
;;;451    														u16 GPIO_Pin_x									//GPIO引脚
;;;452    														)		//外部边沿触发中断配置--20171213
;;;453    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;454    	/* Check the parameters */
;;;455      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;456    	assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;457    	
;;;458    	EXTI_ClockConf(GPIOx,GPIO_Pin_x);												//打开外部中断相应管脚时钟--20171213
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       EXTI_ClockConf
;;;459    	EXTI_GPIOConf(GPIOx,GPIO_Pin_x,GPIO_Mode_IN_FLOATING);	//根据输入模式初始化GPIO--20171213---浮空
00000e  2204              MOVS     r2,#4
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       EXTI_GPIOConf
;;;460    	EXTI_LineConf(GPIOx,GPIO_Pin_x);												//设置中断线--20171213	
000018  4621              MOV      r1,r4
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       EXTI_LineConf
;;;461    	EXTI_TTMConf(GPIO_Pin_x,EXTI_Trigger_Rising_Falling);		//外部中断触发模式配置--20171213--边沿中断
000020  2110              MOVS     r1,#0x10
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       EXTI_TTMConf
;;;462    	EXTI_NVICConf(GPIOx,GPIO_Pin_x);												//中断通道及优先级配置--20171213	
000028  4621              MOV      r1,r4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       EXTI_NVICConf
;;;463    }
000030  bd70              POP      {r4-r6,pc}
;;;464    
                          ENDP


                          AREA ||i.EXTI_Event_Configuration||, CODE, READONLY, ALIGN=2

                  EXTI_Event_Configuration PROC
;;;471    *******************************************************************************/
;;;472    void EXTI_Event_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;473    {
;;;474    	if(EXTI_GetITStatus(EXTI_Line0))
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       EXTI_GetITStatus
000008  b138              CBZ      r0,|L5.26|
;;;475    	{
;;;476    		Trigger_Line.Trigger_Line0	=	1;
00000a  4866              LDR      r0,|L5.420|
00000c  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
00000e  f0200001          BIC      r0,r0,#1
000012  1c40              ADDS     r0,r0,#1
000014  4963              LDR      r1,|L5.420|
000016  8008              STRH     r0,[r1,#0]
000018  e0c2              B        |L5.416|
                  |L5.26|
;;;477    //		EXTI_ClearITPendingBit(EXTI_Line0);
;;;478    	}
;;;479    	else if(EXTI_GetITStatus(EXTI_Line1))
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       EXTI_GetITStatus
000020  b138              CBZ      r0,|L5.50|
;;;480    	{
;;;481    		Trigger_Line.Trigger_Line1	=	1;
000022  4860              LDR      r0,|L5.420|
000024  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000026  f0200002          BIC      r0,r0,#2
00002a  1c80              ADDS     r0,r0,#2
00002c  495d              LDR      r1,|L5.420|
00002e  8008              STRH     r0,[r1,#0]
000030  e0b6              B        |L5.416|
                  |L5.50|
;;;482    //		EXTI_ClearITPendingBit(EXTI_Line1);
;;;483    	}
;;;484    	else if(EXTI_GetITStatus(EXTI_Line2))
000032  2004              MOVS     r0,#4
000034  f7fffffe          BL       EXTI_GetITStatus
000038  b138              CBZ      r0,|L5.74|
;;;485    	{
;;;486    		Trigger_Line.Trigger_Line2	=	1;
00003a  485a              LDR      r0,|L5.420|
00003c  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
00003e  f0200004          BIC      r0,r0,#4
000042  1d00              ADDS     r0,r0,#4
000044  4957              LDR      r1,|L5.420|
000046  8008              STRH     r0,[r1,#0]
000048  e0aa              B        |L5.416|
                  |L5.74|
;;;487    //		EXTI_ClearITPendingBit(EXTI_Line2);
;;;488    	}
;;;489    	else if(EXTI_GetITStatus(EXTI_Line3))
00004a  2008              MOVS     r0,#8
00004c  f7fffffe          BL       EXTI_GetITStatus
000050  b138              CBZ      r0,|L5.98|
;;;490    	{
;;;491    		Trigger_Line.Trigger_Line3	=	1;
000052  4854              LDR      r0,|L5.420|
000054  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000056  f0200008          BIC      r0,r0,#8
00005a  3008              ADDS     r0,r0,#8
00005c  4951              LDR      r1,|L5.420|
00005e  8008              STRH     r0,[r1,#0]
000060  e09e              B        |L5.416|
                  |L5.98|
;;;492    //		EXTI_ClearITPendingBit(EXTI_Line3);
;;;493    	}
;;;494    	else if(EXTI_GetITStatus(EXTI_Line4))
000062  2010              MOVS     r0,#0x10
000064  f7fffffe          BL       EXTI_GetITStatus
000068  b138              CBZ      r0,|L5.122|
;;;495    	{
;;;496    		Trigger_Line.Trigger_Line4	=	1;
00006a  484e              LDR      r0,|L5.420|
00006c  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
00006e  f0200010          BIC      r0,r0,#0x10
000072  3010              ADDS     r0,r0,#0x10
000074  494b              LDR      r1,|L5.420|
000076  8008              STRH     r0,[r1,#0]
000078  e092              B        |L5.416|
                  |L5.122|
;;;497    //		EXTI_ClearITPendingBit(EXTI_Line4);
;;;498    	}
;;;499    	else if(EXTI_GetITStatus(EXTI_Line5))
00007a  2020              MOVS     r0,#0x20
00007c  f7fffffe          BL       EXTI_GetITStatus
000080  b138              CBZ      r0,|L5.146|
;;;500    	{
;;;501    		Trigger_Line.Trigger_Line5	=	1;
000082  4848              LDR      r0,|L5.420|
000084  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000086  f0200020          BIC      r0,r0,#0x20
00008a  3020              ADDS     r0,r0,#0x20
00008c  4945              LDR      r1,|L5.420|
00008e  8008              STRH     r0,[r1,#0]
000090  e086              B        |L5.416|
                  |L5.146|
;;;502    //		EXTI_ClearITPendingBit(EXTI_Line5);
;;;503    	}
;;;504    	else if(EXTI_GetITStatus(EXTI_Line6))
000092  2040              MOVS     r0,#0x40
000094  f7fffffe          BL       EXTI_GetITStatus
000098  b138              CBZ      r0,|L5.170|
;;;505    	{
;;;506    		Trigger_Line.Trigger_Line6	=	1;
00009a  4842              LDR      r0,|L5.420|
00009c  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
00009e  f0200040          BIC      r0,r0,#0x40
0000a2  3040              ADDS     r0,r0,#0x40
0000a4  493f              LDR      r1,|L5.420|
0000a6  8008              STRH     r0,[r1,#0]
0000a8  e07a              B        |L5.416|
                  |L5.170|
;;;507    //		EXTI_ClearITPendingBit(EXTI_Line6);
;;;508    	}
;;;509    	else if(EXTI_GetITStatus(EXTI_Line7))
0000aa  2080              MOVS     r0,#0x80
0000ac  f7fffffe          BL       EXTI_GetITStatus
0000b0  b138              CBZ      r0,|L5.194|
;;;510    	{
;;;511    		Trigger_Line.Trigger_Line7	=	1;
0000b2  483c              LDR      r0,|L5.420|
0000b4  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
0000b6  f0200080          BIC      r0,r0,#0x80
0000ba  3080              ADDS     r0,r0,#0x80
0000bc  4939              LDR      r1,|L5.420|
0000be  8008              STRH     r0,[r1,#0]
0000c0  e06e              B        |L5.416|
                  |L5.194|
;;;512    //		EXTI_ClearITPendingBit(EXTI_Line7);
;;;513    	}
;;;514    	else if(EXTI_GetITStatus(EXTI_Line8))
0000c2  f44f7080          MOV      r0,#0x100
0000c6  f7fffffe          BL       EXTI_GetITStatus
0000ca  b140              CBZ      r0,|L5.222|
;;;515    	{
;;;516    		Trigger_Line.Trigger_Line8	=	1;
0000cc  4835              LDR      r0,|L5.420|
0000ce  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
0000d0  f4207080          BIC      r0,r0,#0x100
0000d4  f5007080          ADD      r0,r0,#0x100
0000d8  4932              LDR      r1,|L5.420|
0000da  8008              STRH     r0,[r1,#0]
0000dc  e060              B        |L5.416|
                  |L5.222|
;;;517    //		EXTI_ClearITPendingBit(EXTI_Line8);
;;;518    	}
;;;519    	else if(EXTI_GetITStatus(EXTI_Line9))
0000de  f44f7000          MOV      r0,#0x200
0000e2  f7fffffe          BL       EXTI_GetITStatus
0000e6  b140              CBZ      r0,|L5.250|
;;;520    	{
;;;521    		Trigger_Line.Trigger_Line9	=	1;
0000e8  482e              LDR      r0,|L5.420|
0000ea  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
0000ec  f4207000          BIC      r0,r0,#0x200
0000f0  f5007000          ADD      r0,r0,#0x200
0000f4  492b              LDR      r1,|L5.420|
0000f6  8008              STRH     r0,[r1,#0]
0000f8  e052              B        |L5.416|
                  |L5.250|
;;;522    //		EXTI_ClearITPendingBit(EXTI_Line9);
;;;523    	}
;;;524    	else if(EXTI_GetITStatus(EXTI_Line10))
0000fa  f44f6080          MOV      r0,#0x400
0000fe  f7fffffe          BL       EXTI_GetITStatus
000102  b140              CBZ      r0,|L5.278|
;;;525    	{
;;;526    		Trigger_Line.Trigger_Line10	=	1;
000104  4827              LDR      r0,|L5.420|
000106  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000108  f4206080          BIC      r0,r0,#0x400
00010c  f5006080          ADD      r0,r0,#0x400
000110  4924              LDR      r1,|L5.420|
000112  8008              STRH     r0,[r1,#0]
000114  e044              B        |L5.416|
                  |L5.278|
;;;527    //		EXTI_ClearITPendingBit(EXTI_Line10);
;;;528    	}
;;;529    	else if(EXTI_GetITStatus(EXTI_Line11))
000116  f44f6000          MOV      r0,#0x800
00011a  f7fffffe          BL       EXTI_GetITStatus
00011e  b140              CBZ      r0,|L5.306|
;;;530    	{
;;;531    		Trigger_Line.Trigger_Line11	=	1;
000120  4820              LDR      r0,|L5.420|
000122  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000124  f4206000          BIC      r0,r0,#0x800
000128  f5006000          ADD      r0,r0,#0x800
00012c  491d              LDR      r1,|L5.420|
00012e  8008              STRH     r0,[r1,#0]
000130  e036              B        |L5.416|
                  |L5.306|
;;;532    //		EXTI_ClearITPendingBit(EXTI_Line11);
;;;533    	}
;;;534    	else if(EXTI_GetITStatus(EXTI_Line12))
000132  f44f5080          MOV      r0,#0x1000
000136  f7fffffe          BL       EXTI_GetITStatus
00013a  b140              CBZ      r0,|L5.334|
;;;535    	{
;;;536    		Trigger_Line.Trigger_Line12	=	1;
00013c  4819              LDR      r0,|L5.420|
00013e  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000140  f4205080          BIC      r0,r0,#0x1000
000144  f5005080          ADD      r0,r0,#0x1000
000148  4916              LDR      r1,|L5.420|
00014a  8008              STRH     r0,[r1,#0]
00014c  e028              B        |L5.416|
                  |L5.334|
;;;537    //		EXTI_ClearITPendingBit(EXTI_Line12);
;;;538    	}
;;;539    	else if(EXTI_GetITStatus(EXTI_Line13))
00014e  f44f5000          MOV      r0,#0x2000
000152  f7fffffe          BL       EXTI_GetITStatus
000156  b140              CBZ      r0,|L5.362|
;;;540    	{
;;;541    		Trigger_Line.Trigger_Line13	=	1;
000158  4812              LDR      r0,|L5.420|
00015a  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
00015c  f4205000          BIC      r0,r0,#0x2000
000160  f5005000          ADD      r0,r0,#0x2000
000164  490f              LDR      r1,|L5.420|
000166  8008              STRH     r0,[r1,#0]
000168  e01a              B        |L5.416|
                  |L5.362|
;;;542    //		EXTI_ClearITPendingBit(EXTI_Line13);
;;;543    	}
;;;544    	else if(EXTI_GetITStatus(EXTI_Line14))
00016a  f44f4080          MOV      r0,#0x4000
00016e  f7fffffe          BL       EXTI_GetITStatus
000172  b140              CBZ      r0,|L5.390|
;;;545    	{
;;;546    		Trigger_Line.Trigger_Line14	=	1;
000174  480b              LDR      r0,|L5.420|
000176  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000178  f4204080          BIC      r0,r0,#0x4000
00017c  f5004080          ADD      r0,r0,#0x4000
000180  4908              LDR      r1,|L5.420|
000182  8008              STRH     r0,[r1,#0]
000184  e00c              B        |L5.416|
                  |L5.390|
;;;547    //		EXTI_ClearITPendingBit(EXTI_Line14);
;;;548    	}
;;;549    	else if(EXTI_GetITStatus(EXTI_Line15))
000186  f44f4000          MOV      r0,#0x8000
00018a  f7fffffe          BL       EXTI_GetITStatus
00018e  b138              CBZ      r0,|L5.416|
;;;550    	{
;;;551    		Trigger_Line.Trigger_Line15	=	1;
000190  4804              LDR      r0,|L5.420|
000192  8800              LDRH     r0,[r0,#0]  ; Trigger_Line
000194  f4204000          BIC      r0,r0,#0x8000
000198  f5004000          ADD      r0,r0,#0x8000
00019c  4901              LDR      r1,|L5.420|
00019e  8008              STRH     r0,[r1,#0]
                  |L5.416|
;;;552    //		EXTI_ClearITPendingBit(EXTI_Line15);
;;;553    	}
;;;554    }
0001a0  bd10              POP      {r4,pc}
;;;555    
                          ENDP

0001a2  0000              DCW      0x0000
                  |L5.420|
                          DCD      Trigger_Line

                          AREA ||i.EXTI_GPIOConf||, CODE, READONLY, ALIGN=1

                  EXTI_GPIOConf PROC
;;;101    *******************************************************************************/
;;;102    void EXTI_GPIOConf(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b5f8              PUSH     {r3-r7,lr}
;;;103    										u16 GPIO_Pin_x,								//GPIO引脚
;;;104    										GPIOMode_TypeDef GPIO_Mode		//模式
;;;105    										)		//根据输入模式初始化GPIO--20171213	
;;;106    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;107    	//1）GPIO结构体定义
;;;108    	GPIO_InitTypeDef	GPIO_InitStructure;
;;;109    	/* Check the parameters */
;;;110      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;111      assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;112    	
;;;113    	GPIO_InitStructure.GPIO_Pin  		= GPIO_Pin_x;
000008  f8ad4000          STRH     r4,[sp,#0]
;;;114      GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_2MHz;					//输入模式下时钟配置无效
00000c  2002              MOVS     r0,#2
00000e  f88d0002          STRB     r0,[sp,#2]
;;;115      GPIO_InitStructure.GPIO_Mode 		= GPIO_Mode;								//输入模式
000012  f88d5003          STRB     r5,[sp,#3]
;;;116    	//3）初始化GPIO
;;;117    	GPIO_Init(GPIOx,&GPIO_InitStructure);												//初始化
000016  4669              MOV      r1,sp
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       GPIO_Init
;;;118    }
00001e  bdf8              POP      {r3-r7,pc}
;;;119    /*******************************************************************************
                          ENDP


                          AREA ||i.EXTI_LineConf||, CODE, READONLY, ALIGN=2

                  EXTI_LineConf PROC
;;;127    *******************************************************************************/
;;;128    void EXTI_LineConf(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;129    										u16 GPIO_Pin_x								//GPIO引脚
;;;130    										)		//设置中断线--20171213	
;;;131    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;132    	u8 GPIO_PortSource=0;
000008  2600              MOVS     r6,#0
;;;133    	u8 GPIO_PinSource=0;
00000a  2700              MOVS     r7,#0
;;;134    	
;;;135    	/* Check the parameters */
;;;136      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;137      assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;138    	
;;;139    	//==============GPIO_PortSource选择
;;;140    	switch (*(u32*)&GPIOx)
00000c  493f              LDR      r1,|L7.268|
00000e  1a60              SUBS     r0,r4,r1
000010  428c              CMP      r4,r1
000012  d01a              BEQ      |L7.74|
000014  dc09              BGT      |L7.42|
000016  483e              LDR      r0,|L7.272|
000018  4420              ADD      r0,r0,r4
00001a  b180              CBZ      r0,|L7.62|
00001c  f5b06f80          CMP      r0,#0x400
000020  d00f              BEQ      |L7.66|
000022  f5b06f00          CMP      r0,#0x800
000026  d118              BNE      |L7.90|
000028  e00d              B        |L7.70|
                  |L7.42|
00002a  f5b06f80          CMP      r0,#0x400
00002e  d00e              BEQ      |L7.78|
000030  f5b06f00          CMP      r0,#0x800
000034  d00d              BEQ      |L7.82|
000036  f5b06f40          CMP      r0,#0xc00
00003a  d10e              BNE      |L7.90|
00003c  e00b              B        |L7.86|
                  |L7.62|
;;;141    	{
;;;142    		//********************中断源端口为GPIOA********************	
;;;143    		case GPIOA_BASE:
;;;144    			GPIO_PortSource	=	GPIO_PortSourceGPIOA;
00003e  2600              MOVS     r6,#0
;;;145    			break;
000040  e00c              B        |L7.92|
                  |L7.66|
;;;146    		//********************中断源端口为GPIOA********************	
;;;147    		case GPIOB_BASE:
;;;148    			GPIO_PortSource	=	GPIO_PortSourceGPIOB;
000042  2601              MOVS     r6,#1
;;;149    			break;
000044  e00a              B        |L7.92|
                  |L7.70|
;;;150    		//********************中断源端口为GPIOA********************	
;;;151    		case GPIOC_BASE:
;;;152    			GPIO_PortSource	=	GPIO_PortSourceGPIOC;
000046  2602              MOVS     r6,#2
;;;153    			break;
000048  e008              B        |L7.92|
                  |L7.74|
;;;154    		//********************中断源端口为GPIOA********************	
;;;155    		case GPIOD_BASE:
;;;156    			GPIO_PortSource	=	GPIO_PortSourceGPIOD;
00004a  2603              MOVS     r6,#3
;;;157    			break;
00004c  e006              B        |L7.92|
                  |L7.78|
;;;158    		//********************中断源端口为GPIOA********************	
;;;159    		case GPIOE_BASE:
;;;160    			GPIO_PortSource	=	GPIO_PortSourceGPIOE;
00004e  2604              MOVS     r6,#4
;;;161    			break;
000050  e004              B        |L7.92|
                  |L7.82|
;;;162    		//********************中断源端口为GPIOA********************	
;;;163    		case GPIOF_BASE:
;;;164    			GPIO_PortSource	=	GPIO_PortSourceGPIOF;
000052  2605              MOVS     r6,#5
;;;165    			break;
000054  e002              B        |L7.92|
                  |L7.86|
;;;166    		//********************中断源端口为GPIOA********************	
;;;167    		case GPIOG_BASE:
;;;168    			GPIO_PortSource	=	GPIO_PortSourceGPIOG;
000056  2606              MOVS     r6,#6
;;;169    			break;
000058  e000              B        |L7.92|
                  |L7.90|
;;;170    		default:	
;;;171    			break;
00005a  bf00              NOP      
                  |L7.92|
00005c  bf00              NOP                            ;145
;;;172    	}
;;;173    	//==============GPIO_PinSource选择
;;;174    	switch ((u16)GPIO_Pin_x)
00005e  f5b57f80          CMP      r5,#0x100
000062  d03b              BEQ      |L7.220|
000064  dc12              BGT      |L7.140|
000066  2d10              CMP      r5,#0x10
000068  d030              BEQ      |L7.204|
00006a  dc08              BGT      |L7.126|
00006c  2d01              CMP      r5,#1
00006e  d025              BEQ      |L7.188|
000070  2d02              CMP      r5,#2
000072  d025              BEQ      |L7.192|
000074  2d04              CMP      r5,#4
000076  d025              BEQ      |L7.196|
000078  2d08              CMP      r5,#8
00007a  d13f              BNE      |L7.252|
00007c  e024              B        |L7.200|
                  |L7.126|
00007e  2d20              CMP      r5,#0x20
000080  d026              BEQ      |L7.208|
000082  2d40              CMP      r5,#0x40
000084  d026              BEQ      |L7.212|
000086  2d80              CMP      r5,#0x80
000088  d138              BNE      |L7.252|
00008a  e025              B        |L7.216|
                  |L7.140|
00008c  f5b55f80          CMP      r5,#0x1000
000090  d02c              BEQ      |L7.236|
000092  dc09              BGT      |L7.168|
000094  f5b57f00          CMP      r5,#0x200
000098  d022              BEQ      |L7.224|
00009a  f5b56f80          CMP      r5,#0x400
00009e  d021              BEQ      |L7.228|
0000a0  f5b56f00          CMP      r5,#0x800
0000a4  d12a              BNE      |L7.252|
0000a6  e01f              B        |L7.232|
                  |L7.168|
0000a8  f5b55f00          CMP      r5,#0x2000
0000ac  d020              BEQ      |L7.240|
0000ae  f5b54f80          CMP      r5,#0x4000
0000b2  d01f              BEQ      |L7.244|
0000b4  f5b54f00          CMP      r5,#0x8000
0000b8  d120              BNE      |L7.252|
0000ba  e01d              B        |L7.248|
                  |L7.188|
;;;175    	{
;;;176    		case GPIO_Pin_0:
;;;177    			GPIO_PinSource	=	GPIO_PinSource0;
0000bc  2700              MOVS     r7,#0
;;;178    			break;
0000be  e01e              B        |L7.254|
                  |L7.192|
;;;179    		case GPIO_Pin_1:
;;;180    			GPIO_PinSource	=	GPIO_PinSource1;
0000c0  2701              MOVS     r7,#1
;;;181    			break;
0000c2  e01c              B        |L7.254|
                  |L7.196|
;;;182    		case GPIO_Pin_2:
;;;183    			GPIO_PinSource	=	GPIO_PinSource2;
0000c4  2702              MOVS     r7,#2
;;;184    			break;
0000c6  e01a              B        |L7.254|
                  |L7.200|
;;;185    		case GPIO_Pin_3:
;;;186    			GPIO_PinSource	=	GPIO_PinSource3;
0000c8  2703              MOVS     r7,#3
;;;187    			break;
0000ca  e018              B        |L7.254|
                  |L7.204|
;;;188    		case GPIO_Pin_4:
;;;189    			GPIO_PinSource	=	GPIO_PinSource4;
0000cc  2704              MOVS     r7,#4
;;;190    			break;
0000ce  e016              B        |L7.254|
                  |L7.208|
;;;191    		case GPIO_Pin_5:
;;;192    			GPIO_PinSource	=	GPIO_PinSource5;
0000d0  2705              MOVS     r7,#5
;;;193    			break;
0000d2  e014              B        |L7.254|
                  |L7.212|
;;;194    		case GPIO_Pin_6:
;;;195    			GPIO_PinSource	=	GPIO_PinSource6;
0000d4  2706              MOVS     r7,#6
;;;196    			break;
0000d6  e012              B        |L7.254|
                  |L7.216|
;;;197    		case GPIO_Pin_7:
;;;198    			GPIO_PinSource	=	GPIO_PinSource7;
0000d8  2707              MOVS     r7,#7
;;;199    			break;
0000da  e010              B        |L7.254|
                  |L7.220|
;;;200    		case GPIO_Pin_8:
;;;201    			GPIO_PinSource	=	GPIO_PinSource8;
0000dc  2708              MOVS     r7,#8
;;;202    			break;
0000de  e00e              B        |L7.254|
                  |L7.224|
;;;203    		case GPIO_Pin_9:
;;;204    			GPIO_PinSource	=	GPIO_PinSource9;
0000e0  2709              MOVS     r7,#9
;;;205    			break;
0000e2  e00c              B        |L7.254|
                  |L7.228|
;;;206    		case GPIO_Pin_10:
;;;207    			GPIO_PinSource	=	GPIO_PinSource10;
0000e4  270a              MOVS     r7,#0xa
;;;208    			break;
0000e6  e00a              B        |L7.254|
                  |L7.232|
;;;209    		case GPIO_Pin_11:
;;;210    			GPIO_PinSource	=	GPIO_PinSource11;
0000e8  270b              MOVS     r7,#0xb
;;;211    			break;
0000ea  e008              B        |L7.254|
                  |L7.236|
;;;212    		case GPIO_Pin_12:
;;;213    			GPIO_PinSource	=	GPIO_PinSource12;
0000ec  270c              MOVS     r7,#0xc
;;;214    			break;
0000ee  e006              B        |L7.254|
                  |L7.240|
;;;215    		case GPIO_Pin_13:
;;;216    			GPIO_PinSource	=	GPIO_PinSource13;
0000f0  270d              MOVS     r7,#0xd
;;;217    			break;
0000f2  e004              B        |L7.254|
                  |L7.244|
;;;218    		case GPIO_Pin_14:
;;;219    			GPIO_PinSource	=	GPIO_PinSource14;
0000f4  270e              MOVS     r7,#0xe
;;;220    			break;
0000f6  e002              B        |L7.254|
                  |L7.248|
;;;221    		case GPIO_Pin_15:
;;;222    			GPIO_PinSource	=	GPIO_PinSource15;
0000f8  270f              MOVS     r7,#0xf
;;;223    			break;
0000fa  e000              B        |L7.254|
                  |L7.252|
;;;224    		
;;;225    		default:	
;;;226    			break;
0000fc  bf00              NOP      
                  |L7.254|
0000fe  bf00              NOP                            ;178
;;;227    	}
;;;228    	//====================配置外部中断源
;;;229    	GPIO_EXTILineConfig(GPIO_PortSource,GPIO_PinSource);
000100  4639              MOV      r1,r7
000102  4630              MOV      r0,r6
000104  f7fffffe          BL       GPIO_EXTILineConfig
;;;230    }
000108  e8bd81f0          POP      {r4-r8,pc}
;;;231    /*******************************************************************************
                          ENDP

                  |L7.268|
                          DCD      0x40011400
                  |L7.272|
                          DCD      0xbffef800

                          AREA ||i.EXTI_NVICConf||, CODE, READONLY, ALIGN=1

                  EXTI_NVICConf PROC
;;;319    *******************************************************************************/
;;;320    void EXTI_NVICConf(GPIO_TypeDef* GPIOx,						//GPIO端口			
000000  b5f8              PUSH     {r3-r7,lr}
;;;321    									u16 GPIO_Pin_x								//GPIO引脚
;;;322    									)		//中断通道及优先级配置--20171213
;;;323    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;324    	u8 EXTI_IRQChannel;
;;;325    	NVIC_InitTypeDef NVIC_InitStructure;
;;;326    	/* Check the parameters */
;;;327      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;328    	assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;329    	
;;;330    	//==============中断通道选择
;;;331    	switch ((u16)GPIO_Pin_x)
000006  f5b57f80          CMP      r5,#0x100
00000a  d03b              BEQ      |L8.132|
00000c  dc12              BGT      |L8.52|
00000e  2d10              CMP      r5,#0x10
000010  d030              BEQ      |L8.116|
000012  dc08              BGT      |L8.38|
000014  2d01              CMP      r5,#1
000016  d025              BEQ      |L8.100|
000018  2d02              CMP      r5,#2
00001a  d025              BEQ      |L8.104|
00001c  2d04              CMP      r5,#4
00001e  d025              BEQ      |L8.108|
000020  2d08              CMP      r5,#8
000022  d13f              BNE      |L8.164|
000024  e024              B        |L8.112|
                  |L8.38|
000026  2d20              CMP      r5,#0x20
000028  d026              BEQ      |L8.120|
00002a  2d40              CMP      r5,#0x40
00002c  d026              BEQ      |L8.124|
00002e  2d80              CMP      r5,#0x80
000030  d138              BNE      |L8.164|
000032  e025              B        |L8.128|
                  |L8.52|
000034  f5b55f80          CMP      r5,#0x1000
000038  d02c              BEQ      |L8.148|
00003a  dc09              BGT      |L8.80|
00003c  f5b57f00          CMP      r5,#0x200
000040  d022              BEQ      |L8.136|
000042  f5b56f80          CMP      r5,#0x400
000046  d021              BEQ      |L8.140|
000048  f5b56f00          CMP      r5,#0x800
00004c  d12a              BNE      |L8.164|
00004e  e01f              B        |L8.144|
                  |L8.80|
000050  f5b55f00          CMP      r5,#0x2000
000054  d020              BEQ      |L8.152|
000056  f5b54f80          CMP      r5,#0x4000
00005a  d01f              BEQ      |L8.156|
00005c  f5b54f00          CMP      r5,#0x8000
000060  d120              BNE      |L8.164|
000062  e01d              B        |L8.160|
                  |L8.100|
;;;332    	{
;;;333    		case GPIO_Pin_0:
;;;334    			EXTI_IRQChannel	=	EXTI0_IRQChannel;
000064  2406              MOVS     r4,#6
;;;335    			break;
000066  e01e              B        |L8.166|
                  |L8.104|
;;;336    		case GPIO_Pin_1:
;;;337    			EXTI_IRQChannel	=	EXTI1_IRQChannel;
000068  2407              MOVS     r4,#7
;;;338    			break;
00006a  e01c              B        |L8.166|
                  |L8.108|
;;;339    		case GPIO_Pin_2:
;;;340    			EXTI_IRQChannel	=	EXTI2_IRQChannel;
00006c  2408              MOVS     r4,#8
;;;341    			break;
00006e  e01a              B        |L8.166|
                  |L8.112|
;;;342    		case GPIO_Pin_3:
;;;343    			EXTI_IRQChannel	=	EXTI3_IRQChannel;
000070  2409              MOVS     r4,#9
;;;344    			break;
000072  e018              B        |L8.166|
                  |L8.116|
;;;345    		case GPIO_Pin_4:
;;;346    			EXTI_IRQChannel	=	EXTI4_IRQChannel;
000074  240a              MOVS     r4,#0xa
;;;347    			break;
000076  e016              B        |L8.166|
                  |L8.120|
;;;348    		
;;;349    		case GPIO_Pin_5:
;;;350    			EXTI_IRQChannel	=	EXTI9_5_IRQChannel;
000078  2417              MOVS     r4,#0x17
;;;351    			break;
00007a  e014              B        |L8.166|
                  |L8.124|
;;;352    		case GPIO_Pin_6:
;;;353    			EXTI_IRQChannel	=	EXTI9_5_IRQChannel;
00007c  2417              MOVS     r4,#0x17
;;;354    			break;
00007e  e012              B        |L8.166|
                  |L8.128|
;;;355    		case GPIO_Pin_7:
;;;356    			EXTI_IRQChannel	=	EXTI9_5_IRQChannel;
000080  2417              MOVS     r4,#0x17
;;;357    			break;
000082  e010              B        |L8.166|
                  |L8.132|
;;;358    		case GPIO_Pin_8:
;;;359    			EXTI_IRQChannel	=	EXTI9_5_IRQChannel;
000084  2417              MOVS     r4,#0x17
;;;360    			break;
000086  e00e              B        |L8.166|
                  |L8.136|
;;;361    		case GPIO_Pin_9:
;;;362    			EXTI_IRQChannel	=	EXTI9_5_IRQChannel;
000088  2417              MOVS     r4,#0x17
;;;363    			break;
00008a  e00c              B        |L8.166|
                  |L8.140|
;;;364    		
;;;365    		case GPIO_Pin_10:
;;;366    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
00008c  2428              MOVS     r4,#0x28
;;;367    			break;
00008e  e00a              B        |L8.166|
                  |L8.144|
;;;368    		case GPIO_Pin_11:
;;;369    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
000090  2428              MOVS     r4,#0x28
;;;370    			break;
000092  e008              B        |L8.166|
                  |L8.148|
;;;371    		case GPIO_Pin_12:
;;;372    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
000094  2428              MOVS     r4,#0x28
;;;373    			break;
000096  e006              B        |L8.166|
                  |L8.152|
;;;374    		case GPIO_Pin_13:
;;;375    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
000098  2428              MOVS     r4,#0x28
;;;376    			break;
00009a  e004              B        |L8.166|
                  |L8.156|
;;;377    		case GPIO_Pin_14:
;;;378    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
00009c  2428              MOVS     r4,#0x28
;;;379    			break;
00009e  e002              B        |L8.166|
                  |L8.160|
;;;380    		case GPIO_Pin_15:
;;;381    			EXTI_IRQChannel	=	EXTI15_10_IRQChannel;
0000a0  2428              MOVS     r4,#0x28
;;;382    			break;
0000a2  e000              B        |L8.166|
                  |L8.164|
;;;383    		
;;;384    		default:	
;;;385    			break;
0000a4  bf00              NOP      
                  |L8.166|
0000a6  bf00              NOP                            ;335
;;;386    	}
;;;387    	//7)**********配置中断
;;;388    	NVIC_InitStructure.NVIC_IRQChannel = EXTI_IRQChannel;					//选择中断通道-中断源
0000a8  f88d4000          STRB     r4,[sp,#0]
;;;389    	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;			//抢占优先级---暂时默认1
0000ac  2000              MOVS     r0,#0
0000ae  f88d0001          STRB     r0,[sp,#1]
;;;390    	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;						//响应优先级---暂时默认1
0000b2  f88d0002          STRB     r0,[sp,#2]
;;;391    	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;								//使能
0000b6  2001              MOVS     r0,#1
0000b8  f88d0003          STRB     r0,[sp,#3]
;;;392    	NVIC_Init(&NVIC_InitStructure);
0000bc  4668              MOV      r0,sp
0000be  f7fffffe          BL       NVIC_Init
;;;393    
;;;394    }
0000c2  bdf8              POP      {r3-r7,pc}
;;;395    /*******************************************************************************
                          ENDP


                          AREA ||i.EXTI_Server||, CODE, READONLY, ALIGN=2

                  EXTI_Server PROC
;;;562    *******************************************************************************/
;;;563    void EXTI_Server(void)
000000  b508              PUSH     {r3,lr}
;;;564    {
;;;565    	unsigned short temp	=	0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;566    	EXTI_Event_Configuration();
000006  f7fffffe          BL       EXTI_Event_Configuration
;;;567    	WOW_Server();				//服务函数
00000a  f7fffffe          BL       WOW_Server
;;;568    
;;;569    //	Trigger_Line	=	0;
;;;570    	Trigger_Line	=	*(Trigger_LineType*)&temp;			//清除标志
00000e  481e              LDR      r0,|L9.136|
000010  f8bd1000          LDRH     r1,[sp,#0]
000014  8001              STRH     r1,[r0,#0]
;;;571    	EXTI_ClearITPendingBit(EXTI_Line0);
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       EXTI_ClearITPendingBit
;;;572    	EXTI_ClearITPendingBit(EXTI_Line1);
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       EXTI_ClearITPendingBit
;;;573    	EXTI_ClearITPendingBit(EXTI_Line2);
000022  2004              MOVS     r0,#4
000024  f7fffffe          BL       EXTI_ClearITPendingBit
;;;574    	EXTI_ClearITPendingBit(EXTI_Line3);
000028  2008              MOVS     r0,#8
00002a  f7fffffe          BL       EXTI_ClearITPendingBit
;;;575    	EXTI_ClearITPendingBit(EXTI_Line4);
00002e  2010              MOVS     r0,#0x10
000030  f7fffffe          BL       EXTI_ClearITPendingBit
;;;576    	EXTI_ClearITPendingBit(EXTI_Line5);
000034  2020              MOVS     r0,#0x20
000036  f7fffffe          BL       EXTI_ClearITPendingBit
;;;577    	EXTI_ClearITPendingBit(EXTI_Line6);
00003a  2040              MOVS     r0,#0x40
00003c  f7fffffe          BL       EXTI_ClearITPendingBit
;;;578    	EXTI_ClearITPendingBit(EXTI_Line7);
000040  2080              MOVS     r0,#0x80
000042  f7fffffe          BL       EXTI_ClearITPendingBit
;;;579    	EXTI_ClearITPendingBit(EXTI_Line8);
000046  f44f7080          MOV      r0,#0x100
00004a  f7fffffe          BL       EXTI_ClearITPendingBit
;;;580    	EXTI_ClearITPendingBit(EXTI_Line9);
00004e  f44f7000          MOV      r0,#0x200
000052  f7fffffe          BL       EXTI_ClearITPendingBit
;;;581    	EXTI_ClearITPendingBit(EXTI_Line10);
000056  f44f6080          MOV      r0,#0x400
00005a  f7fffffe          BL       EXTI_ClearITPendingBit
;;;582    	EXTI_ClearITPendingBit(EXTI_Line11);
00005e  f44f6000          MOV      r0,#0x800
000062  f7fffffe          BL       EXTI_ClearITPendingBit
;;;583    	EXTI_ClearITPendingBit(EXTI_Line12);
000066  f44f5080          MOV      r0,#0x1000
00006a  f7fffffe          BL       EXTI_ClearITPendingBit
;;;584    	EXTI_ClearITPendingBit(EXTI_Line13);
00006e  f44f5000          MOV      r0,#0x2000
000072  f7fffffe          BL       EXTI_ClearITPendingBit
;;;585    	EXTI_ClearITPendingBit(EXTI_Line14);
000076  f44f4080          MOV      r0,#0x4000
00007a  f7fffffe          BL       EXTI_ClearITPendingBit
;;;586    	EXTI_ClearITPendingBit(EXTI_Line15);
00007e  f44f4000          MOV      r0,#0x8000
000082  f7fffffe          BL       EXTI_ClearITPendingBit
;;;587    }
000086  bd08              POP      {r3,pc}
;;;588    
                          ENDP

                  |L9.136|
                          DCD      Trigger_Line

                          AREA ||i.EXTI_TTMConf||, CODE, READONLY, ALIGN=1

                  EXTI_TTMConf PROC
;;;239    *******************************************************************************/
;;;240    void EXTI_TTMConf(u16 GPIO_Pin_x,										//GPIO端口			
000000  b57c              PUSH     {r2-r6,lr}
;;;241    									EXTITrigger_TypeDef EXTI_Trigger	//触发模式
;;;242    									)		//外部中断触发模式配置--20171213
;;;243    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;244    	u32 EXTI_Line;
;;;245    	EXTI_InitTypeDef EXTI_Initstructure;
;;;246    	assert_param(IS_GPIO_PIN(GPIO_Pin_x));
;;;247    	//==============GPIO_PinSource选择
;;;248    	switch ((u16)GPIO_Pin_x)
000006  f5b67f80          CMP      r6,#0x100
00000a  d03b              BEQ      |L10.132|
00000c  dc12              BGT      |L10.52|
00000e  2e10              CMP      r6,#0x10
000010  d030              BEQ      |L10.116|
000012  dc08              BGT      |L10.38|
000014  2e01              CMP      r6,#1
000016  d025              BEQ      |L10.100|
000018  2e02              CMP      r6,#2
00001a  d025              BEQ      |L10.104|
00001c  2e04              CMP      r6,#4
00001e  d025              BEQ      |L10.108|
000020  2e08              CMP      r6,#8
000022  d147              BNE      |L10.180|
000024  e024              B        |L10.112|
                  |L10.38|
000026  2e20              CMP      r6,#0x20
000028  d026              BEQ      |L10.120|
00002a  2e40              CMP      r6,#0x40
00002c  d026              BEQ      |L10.124|
00002e  2e80              CMP      r6,#0x80
000030  d140              BNE      |L10.180|
000032  e025              B        |L10.128|
                  |L10.52|
000034  f5b65f80          CMP      r6,#0x1000
000038  d030              BEQ      |L10.156|
00003a  dc09              BGT      |L10.80|
00003c  f5b67f00          CMP      r6,#0x200
000040  d023              BEQ      |L10.138|
000042  f5b66f80          CMP      r6,#0x400
000046  d023              BEQ      |L10.144|
000048  f5b66f00          CMP      r6,#0x800
00004c  d132              BNE      |L10.180|
00004e  e022              B        |L10.150|
                  |L10.80|
000050  f5b65f00          CMP      r6,#0x2000
000054  d025              BEQ      |L10.162|
000056  f5b64f80          CMP      r6,#0x4000
00005a  d025              BEQ      |L10.168|
00005c  f5b64f00          CMP      r6,#0x8000
000060  d128              BNE      |L10.180|
000062  e024              B        |L10.174|
                  |L10.100|
;;;249    	{
;;;250    		case GPIO_Pin_0:
;;;251    			EXTI_Line	=	EXTI_Line0;
000064  2401              MOVS     r4,#1
;;;252    			break;
000066  e026              B        |L10.182|
                  |L10.104|
;;;253    		case GPIO_Pin_1:
;;;254    			EXTI_Line	=	EXTI_Line1;
000068  2402              MOVS     r4,#2
;;;255    			break;
00006a  e024              B        |L10.182|
                  |L10.108|
;;;256    		case GPIO_Pin_2:
;;;257    			EXTI_Line	=	EXTI_Line2;
00006c  2404              MOVS     r4,#4
;;;258    			break;
00006e  e022              B        |L10.182|
                  |L10.112|
;;;259    		case GPIO_Pin_3:
;;;260    			EXTI_Line	=	EXTI_Line3;
000070  2408              MOVS     r4,#8
;;;261    			break;
000072  e020              B        |L10.182|
                  |L10.116|
;;;262    		case GPIO_Pin_4:
;;;263    			EXTI_Line	=	EXTI_Line4;
000074  2410              MOVS     r4,#0x10
;;;264    			break;
000076  e01e              B        |L10.182|
                  |L10.120|
;;;265    		case GPIO_Pin_5:
;;;266    			EXTI_Line	=	EXTI_Line5;
000078  2420              MOVS     r4,#0x20
;;;267    			break;
00007a  e01c              B        |L10.182|
                  |L10.124|
;;;268    		case GPIO_Pin_6:
;;;269    			EXTI_Line	=	EXTI_Line6;
00007c  2440              MOVS     r4,#0x40
;;;270    			break;
00007e  e01a              B        |L10.182|
                  |L10.128|
;;;271    		case GPIO_Pin_7:
;;;272    			EXTI_Line	=	EXTI_Line7;
000080  2480              MOVS     r4,#0x80
;;;273    			break;
000082  e018              B        |L10.182|
                  |L10.132|
;;;274    		case GPIO_Pin_8:
;;;275    			EXTI_Line	=	EXTI_Line8;
000084  f44f7480          MOV      r4,#0x100
;;;276    			break;
000088  e015              B        |L10.182|
                  |L10.138|
;;;277    		case GPIO_Pin_9:
;;;278    			EXTI_Line	=	EXTI_Line9;
00008a  f44f7400          MOV      r4,#0x200
;;;279    			break;
00008e  e012              B        |L10.182|
                  |L10.144|
;;;280    		case GPIO_Pin_10:
;;;281    			EXTI_Line	=	EXTI_Line10;
000090  f44f6480          MOV      r4,#0x400
;;;282    			break;
000094  e00f              B        |L10.182|
                  |L10.150|
;;;283    		case GPIO_Pin_11:
;;;284    			EXTI_Line	=	EXTI_Line11;
000096  f44f6400          MOV      r4,#0x800
;;;285    			break;
00009a  e00c              B        |L10.182|
                  |L10.156|
;;;286    		case GPIO_Pin_12:
;;;287    			EXTI_Line	=	EXTI_Line12;
00009c  f44f5480          MOV      r4,#0x1000
;;;288    			break;
0000a0  e009              B        |L10.182|
                  |L10.162|
;;;289    		case GPIO_Pin_13:
;;;290    			EXTI_Line	=	EXTI_Line13;
0000a2  f44f5400          MOV      r4,#0x2000
;;;291    			break;
0000a6  e006              B        |L10.182|
                  |L10.168|
;;;292    		case GPIO_Pin_14:
;;;293    			EXTI_Line	=	EXTI_Line14;
0000a8  f44f4480          MOV      r4,#0x4000
;;;294    			break;
0000ac  e003              B        |L10.182|
                  |L10.174|
;;;295    		case GPIO_Pin_15:
;;;296    			EXTI_Line	=	EXTI_Line15;
0000ae  f44f4400          MOV      r4,#0x8000
;;;297    			break;
0000b2  e000              B        |L10.182|
                  |L10.180|
;;;298    		
;;;299    		default:	
;;;300    			break;
0000b4  bf00              NOP      
                  |L10.182|
0000b6  bf00              NOP                            ;252
;;;301    	}
;;;302    	EXTI_Initstructure.EXTI_Line=EXTI_Line;												//外部中断线路
0000b8  9400              STR      r4,[sp,#0]
;;;303    	EXTI_Initstructure.EXTI_Mode=EXTI_Mode_Interrupt;							//中断模式
0000ba  2000              MOVS     r0,#0
0000bc  f88d0004          STRB     r0,[sp,#4]
;;;304    	EXTI_Initstructure.EXTI_Trigger=EXTI_Trigger;									//触发方式-
0000c0  f88d5005          STRB     r5,[sp,#5]
;;;305    	EXTI_Initstructure.EXTI_LineCmd=ENABLE;												//连接使能
0000c4  2001              MOVS     r0,#1
0000c6  f88d0006          STRB     r0,[sp,#6]
;;;306    	EXTI_Init(&EXTI_Initstructure);
0000ca  4668              MOV      r0,sp
0000cc  f7fffffe          BL       EXTI_Init
;;;307    	
;;;308    	EXTI_GenerateSWInterrupt(EXTI_Line);													//使能中断
0000d0  4620              MOV      r0,r4
0000d2  f7fffffe          BL       EXTI_GenerateSWInterrupt
;;;309    	EXTI_ClearITPendingBit(EXTI_Line);
0000d6  4620              MOV      r0,r4
0000d8  f7fffffe          BL       EXTI_ClearITPendingBit
;;;310    }
0000dc  bd7c              POP      {r2-r6,pc}
;;;311    /*******************************************************************************
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  Trigger_Line
000000  0000              DCB      0x00,0x00
