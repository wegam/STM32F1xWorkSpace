; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\tm1618.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\tm1618.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\tm1618.crf ..\..\Driver\Components\SCR\TM1618.C]
                          THUMB

                          AREA ||i.TM1618_DataCov||, CODE, READONLY, ALIGN=2

                  TM1618_DataCov PROC
;;;163    *******************************************************************************/
;;;164    void TM1618_DataCov(u16 number)
000000  b518              PUSH     {r3,r4,lr}
;;;165    {
000002  4601              MOV      r1,r0
;;;166    	unsigned char s[4];
;;;167    	unsigned char	i,j;
;;;168    	s[0]=TM1618_SegCode[number/1000];
000004  f44f737a          MOV      r3,#0x3e8
000008  fb91f3f3          SDIV     r3,r1,r3
00000c  4c23              LDR      r4,|L1.156|
00000e  5ce3              LDRB     r3,[r4,r3]
000010  f88d3000          STRB     r3,[sp,#0]
;;;169    	s[1]=TM1618_SegCode[number%1000/100];
000014  f44f737a          MOV      r3,#0x3e8
000018  fb91f4f3          SDIV     r4,r1,r3
00001c  fb031314          MLS      r3,r3,r4,r1
000020  2464              MOVS     r4,#0x64
000022  fb93f3f4          SDIV     r3,r3,r4
000026  4c1d              LDR      r4,|L1.156|
000028  5ce3              LDRB     r3,[r4,r3]
00002a  f88d3001          STRB     r3,[sp,#1]
;;;170    	s[2]=TM1618_SegCode[number%100/10];
00002e  2364              MOVS     r3,#0x64
000030  fb91f4f3          SDIV     r4,r1,r3
000034  fb031314          MLS      r3,r3,r4,r1
000038  240a              MOVS     r4,#0xa
00003a  fb93f3f4          SDIV     r3,r3,r4
00003e  4c17              LDR      r4,|L1.156|
000040  5ce3              LDRB     r3,[r4,r3]
000042  f88d3002          STRB     r3,[sp,#2]
;;;171    	s[3]=TM1618_SegCode[number%10];
000046  230a              MOVS     r3,#0xa
000048  fb91f4f3          SDIV     r4,r1,r3
00004c  fb031314          MLS      r3,r3,r4,r1
000050  4c12              LDR      r4,|L1.156|
000052  5ce3              LDRB     r3,[r4,r3]
000054  f88d3003          STRB     r3,[sp,#3]
;;;172    	
;;;173    //	if(number<10)
;;;174    //	{
;;;175    //		s[0]=TM1618_SegCode[10];
;;;176    //		s[1]=TM1618_SegCode[10];
;;;177    //		s[2]=TM1618_SegCode[10];
;;;178    //	}
;;;179    //	else if(100>number&&number>9)
;;;180    //	{
;;;181    //		s[0]=TM1618_SegCode[10];
;;;182    //		s[1]=TM1618_SegCode[10];
;;;183    //	}
;;;184    //	else if(1000>number&&number>99)
;;;185    //		s[0]=TM1618_SegCode[10];
;;;186    	
;;;187    	
;;;188    	
;;;189    	for(i=0;i<8;i++)
000058  2000              MOVS     r0,#0
00005a  e01c              B        |L1.150|
                  |L1.92|
;;;190    	{
;;;191    		for(j=0;j<4;j++)
00005c  2200              MOVS     r2,#0
00005e  e016              B        |L1.142|
                  |L1.96|
;;;192    		{
;;;193    			TM1618_CovSeg[i]<<=1;
000060  4b0f              LDR      r3,|L1.160|
000062  5c1b              LDRB     r3,[r3,r0]
000064  065b              LSLS     r3,r3,#25
000066  0e1b              LSRS     r3,r3,#24
000068  4c0d              LDR      r4,|L1.160|
00006a  5423              STRB     r3,[r4,r0]
;;;194    			if(s[j]&0x01)
00006c  f81d3002          LDRB     r3,[sp,r2]
000070  f0030301          AND      r3,r3,#1
000074  b123              CBZ      r3,|L1.128|
;;;195    			TM1618_CovSeg[i]|=0x01;
000076  4623              MOV      r3,r4
000078  5c1b              LDRB     r3,[r3,r0]
00007a  f0430301          ORR      r3,r3,#1
00007e  5423              STRB     r3,[r4,r0]
                  |L1.128|
;;;196    			s[j]>>=1;
000080  f81d3002          LDRB     r3,[sp,r2]
000084  105b              ASRS     r3,r3,#1
000086  f80d3002          STRB     r3,[sp,r2]
00008a  1c53              ADDS     r3,r2,#1              ;191
00008c  b2da              UXTB     r2,r3                 ;191
                  |L1.142|
00008e  2a04              CMP      r2,#4                 ;191
000090  dbe6              BLT      |L1.96|
000092  1c43              ADDS     r3,r0,#1              ;189
000094  b2d8              UXTB     r0,r3                 ;189
                  |L1.150|
000096  2808              CMP      r0,#8                 ;189
000098  dbe0              BLT      |L1.92|
;;;197    			
;;;198    		}
;;;199    	}
;;;200    
;;;201    }
00009a  bd18              POP      {r3,r4,pc}
;;;202    
                          ENDP

                  |L1.156|
                          DCD      TM1618_SegCode
                  |L1.160|
                          DCD      TM1618_CovSeg

                          AREA ||i.TM1618_Delay||, CODE, READONLY, ALIGN=1

                  TM1618_Delay PROC
;;;24     *******************************************************************************/
;;;25     void TM1618_Delay(u16 time)
000000  bf00              NOP      
                  |L2.2|
;;;26     {
;;;27     	while(time--);
000002  1e01              SUBS     r1,r0,#0
000004  f1a00201          SUB      r2,r0,#1
000008  b290              UXTH     r0,r2
00000a  d1fa              BNE      |L2.2|
;;;28     }
00000c  4770              BX       lr
;;;29     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_PinConf||, CODE, READONLY, ALIGN=1

                  TM1618_PinConf PROC
;;;34     *******************************************************************************/
;;;35     void TM1618_PinConf(TM1618_Pindef *Pinfo)
000000  b510              PUSH     {r4,lr}
;;;36     {
000002  4604              MOV      r4,r0
;;;37     	GPIO_Configuration_OPP50	(Pinfo->TM1618_DIO_PORT,		Pinfo->TM1618_DIO_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000004  88a1              LDRH     r1,[r4,#4]
000006  6820              LDR      r0,[r4,#0]
000008  f7fffffe          BL       GPIO_Configuration_OPP50
;;;38     	GPIO_Configuration_OPP50	(Pinfo->TM1618_CLK_PORT,		Pinfo->TM1618_CLK_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_Configuration_OPP50
;;;39     	GPIO_Configuration_OPP50	(Pinfo->TM1618_STB_PORT,		Pinfo->TM1618_STB_Pin);			//将GPIO相应管脚配置为PP(推挽)输出模式，最大速度2MHz----V20170605
000014  8aa1              LDRH     r1,[r4,#0x14]
000016  6920              LDR      r0,[r4,#0x10]
000018  f7fffffe          BL       GPIO_Configuration_OPP50
;;;40     }
00001c  bd10              POP      {r4,pc}
;;;41     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_WriteByte||, CODE, READONLY, ALIGN=1

                  TM1618_WriteByte PROC
;;;46     *******************************************************************************/
;;;47     void TM1618_WriteByte(TM1618_Pindef *Pinfo,unsigned char byted)
000000  b570              PUSH     {r4-r6,lr}
;;;48     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;49     	unsigned char i=0;
000006  2600              MOVS     r6,#0
;;;50     	for(i=0;i<8;i++)
000008  bf00              NOP      
00000a  e022              B        |L4.82|
                  |L4.12|
;;;51     	{
;;;52     		GPIO_ResetBits(Pinfo->TM1618_CLK_PORT, Pinfo->TM1618_CLK_Pin);
00000c  89a1              LDRH     r1,[r4,#0xc]
00000e  68a0              LDR      r0,[r4,#8]
000010  f7fffffe          BL       GPIO_ResetBits
;;;53     		TM1618_Delay(TM1618_DelayTime);
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       TM1618_Delay
;;;54     		if((byted&0x01)==0x01)						 //确认最低位数，从低位开始写入
00001c  f0050001          AND      r0,r5,#1
000020  b120              CBZ      r0,|L4.44|
;;;55     		{
;;;56     			GPIO_SetBits(Pinfo->TM1618_DIO_PORT, Pinfo->TM1618_DIO_Pin);
000022  88a1              LDRH     r1,[r4,#4]
000024  6820              LDR      r0,[r4,#0]
000026  f7fffffe          BL       GPIO_SetBits
00002a  e003              B        |L4.52|
                  |L4.44|
;;;57     		}
;;;58     		else
;;;59     		{
;;;60     			GPIO_ResetBits(Pinfo->TM1618_DIO_PORT, Pinfo->TM1618_DIO_Pin);
00002c  88a1              LDRH     r1,[r4,#4]
00002e  6820              LDR      r0,[r4,#0]
000030  f7fffffe          BL       GPIO_ResetBits
                  |L4.52|
;;;61     		}
;;;62     		TM1618_Delay(TM1618_DelayTime);
000034  f44f707a          MOV      r0,#0x3e8
000038  f7fffffe          BL       TM1618_Delay
;;;63     		GPIO_SetBits(Pinfo->TM1618_CLK_PORT, Pinfo->TM1618_CLK_Pin);
00003c  89a1              LDRH     r1,[r4,#0xc]
00003e  68a0              LDR      r0,[r4,#8]
000040  f7fffffe          BL       GPIO_SetBits
;;;64     		TM1618_Delay(TM1618_DelayTime);
000044  f44f707a          MOV      r0,#0x3e8
000048  f7fffffe          BL       TM1618_Delay
;;;65     		byted=byted>>1;							 //右移一位		
00004c  106d              ASRS     r5,r5,#1
00004e  1c70              ADDS     r0,r6,#1              ;50
000050  b2c6              UXTB     r6,r0                 ;50
                  |L4.82|
000052  2e08              CMP      r6,#8                 ;50
000054  dbda              BLT      |L4.12|
;;;66     	}
;;;67     }
000056  bd70              POP      {r4-r6,pc}
;;;68     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_WriteCommand||, CODE, READONLY, ALIGN=1

                  TM1618_WriteCommand PROC
;;;73     *******************************************************************************/
;;;74     void TM1618_WriteCommand(TM1618_Pindef *Pinfo,unsigned char command)
000000  b570              PUSH     {r4-r6,lr}
;;;75     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;76     //	stb=1;
;;;77     	GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);			//stb=0;
000006  8aa1              LDRH     r1,[r4,#0x14]
000008  6920              LDR      r0,[r4,#0x10]
00000a  f7fffffe          BL       GPIO_ResetBits
;;;78     	TM1618_Delay(TM1618_DelayTime);
00000e  f44f707a          MOV      r0,#0x3e8
000012  f7fffffe          BL       TM1618_Delay
;;;79     	TM1618_WriteByte(Pinfo,0x44);	//固定地址模式
000016  2144              MOVS     r1,#0x44
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       TM1618_WriteByte
;;;80     	TM1618_Delay(TM1618_DelayTime);
00001e  f44f707a          MOV      r0,#0x3e8
000022  f7fffffe          BL       TM1618_Delay
;;;81     	GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
000026  8aa1              LDRH     r1,[r4,#0x14]
000028  6920              LDR      r0,[r4,#0x10]
00002a  f7fffffe          BL       GPIO_SetBits
;;;82     	TM1618_Delay(TM1618_DelayTime);
00002e  f44f707a          MOV      r0,#0x3e8
000032  f7fffffe          BL       TM1618_Delay
;;;83     	
;;;84     	GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);			//stb=0;
000036  8aa1              LDRH     r1,[r4,#0x14]
000038  6920              LDR      r0,[r4,#0x10]
00003a  f7fffffe          BL       GPIO_ResetBits
;;;85     	TM1618_Delay(TM1618_DelayTime);
00003e  f44f707a          MOV      r0,#0x3e8
000042  f7fffffe          BL       TM1618_Delay
;;;86     	TM1618_WriteByte(Pinfo,command);				//脉冲宽度设置 0x80（关）<0x88<0x89<0x8a<0x8b<0x8c<0x8d<0x8e<0x8f
000046  4629              MOV      r1,r5
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       TM1618_WriteByte
;;;87     	TM1618_Delay(TM1618_DelayTime);
00004e  f44f707a          MOV      r0,#0x3e8
000052  f7fffffe          BL       TM1618_Delay
;;;88     	GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
000056  8aa1              LDRH     r1,[r4,#0x14]
000058  6920              LDR      r0,[r4,#0x10]
00005a  f7fffffe          BL       GPIO_SetBits
;;;89     	TM1618_Delay(TM1618_DelayTime);
00005e  f44f707a          MOV      r0,#0x3e8
000062  f7fffffe          BL       TM1618_Delay
;;;90     }
000066  bd70              POP      {r4-r6,pc}
;;;91     /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_WriteCommandN||, CODE, READONLY, ALIGN=1

                  TM1618_WriteCommandN PROC
;;;96     *******************************************************************************/
;;;97     void TM1618_WriteCommandN(TM1618_Pindef *Pinfo,unsigned char command)
000000  b570              PUSH     {r4-r6,lr}
;;;98     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;99     //	stb=1;
;;;100    	GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);			//stb=0;
000006  8aa1              LDRH     r1,[r4,#0x14]
000008  6920              LDR      r0,[r4,#0x10]
00000a  f7fffffe          BL       GPIO_SetBits
;;;101    	TM1618_Delay(TM1618_DelayTime);
00000e  f44f707a          MOV      r0,#0x3e8
000012  f7fffffe          BL       TM1618_Delay
;;;102    	TM1618_WriteByte(Pinfo,0x44);																			//地址模式  0x40-自增;0x44-固定地址
000016  2144              MOVS     r1,#0x44
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       TM1618_WriteByte
;;;103    	TM1618_Delay(TM1618_DelayTime);
00001e  f44f707a          MOV      r0,#0x3e8
000022  f7fffffe          BL       TM1618_Delay
;;;104    	GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
000026  8aa1              LDRH     r1,[r4,#0x14]
000028  6920              LDR      r0,[r4,#0x10]
00002a  f7fffffe          BL       GPIO_ResetBits
;;;105    	TM1618_Delay(TM1618_DelayTime);
00002e  f44f707a          MOV      r0,#0x3e8
000032  f7fffffe          BL       TM1618_Delay
;;;106    	
;;;107    	GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);			//stb=0;
000036  8aa1              LDRH     r1,[r4,#0x14]
000038  6920              LDR      r0,[r4,#0x10]
00003a  f7fffffe          BL       GPIO_SetBits
;;;108    	TM1618_Delay(TM1618_DelayTime);
00003e  f44f707a          MOV      r0,#0x3e8
000042  f7fffffe          BL       TM1618_Delay
;;;109    	TM1618_WriteByte(Pinfo,command);				//脉冲宽度设置(亮度) 0x80（关）<0x88<0x89<0x8a<0x8b<0x8c<0x8d<0x8e<0x8f
000046  4629              MOV      r1,r5
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       TM1618_WriteByte
;;;110    	TM1618_Delay(TM1618_DelayTime);
00004e  f44f707a          MOV      r0,#0x3e8
000052  f7fffffe          BL       TM1618_Delay
;;;111    	GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
000056  8aa1              LDRH     r1,[r4,#0x14]
000058  6920              LDR      r0,[r4,#0x10]
00005a  f7fffffe          BL       GPIO_ResetBits
;;;112    	TM1618_Delay(TM1618_DelayTime);
00005e  f44f707a          MOV      r0,#0x3e8
000062  f7fffffe          BL       TM1618_Delay
;;;113    }
000066  bd70              POP      {r4-r6,pc}
;;;114    /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_WriteData||, CODE, READONLY, ALIGN=1

                  TM1618_WriteData PROC
;;;119    *******************************************************************************/
;;;120    void TM1618_WriteData(TM1618_Pindef *Pinfo,u16 Data)
000000  b570              PUSH     {r4-r6,lr}
;;;121    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;122    	unsigned char i=0;
000006  2600              MOVS     r6,#0
;;;123    	
;;;124    	TM1618_WriteCommand(Pinfo,0X88);			//亮度
000008  2188              MOVS     r1,#0x88
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       TM1618_WriteCommand
;;;125    	TM1618_Delay(TM1618_DelayTime);
000010  f44f707a          MOV      r0,#0x3e8
000014  f7fffffe          BL       TM1618_Delay
;;;126    	for(i=0;i<8;i++)
000018  bf00              NOP      
00001a  e019              B        |L7.80|
                  |L7.28|
;;;127    	{
;;;128    		GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);	//stb=0;
00001c  8aa1              LDRH     r1,[r4,#0x14]
00001e  6920              LDR      r0,[r4,#0x10]
000020  f7fffffe          BL       GPIO_ResetBits
;;;129    		TM1618_Delay(TM1618_DelayTime);
000024  f44f707a          MOV      r0,#0x3e8
000028  f7fffffe          BL       TM1618_Delay
;;;130    		TM1618_WriteByte(Pinfo,Data);				//写入地址
00002c  b2e9              UXTB     r1,r5
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       TM1618_WriteByte
;;;131    		TM1618_WriteByte(Pinfo,Data);				//写入数据
000034  b2e9              UXTB     r1,r5
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       TM1618_WriteByte
;;;132    		TM1618_Delay(TM1618_DelayTime);
00003c  f44f707a          MOV      r0,#0x3e8
000040  f7fffffe          BL       TM1618_Delay
;;;133    		GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
000044  8aa1              LDRH     r1,[r4,#0x14]
000046  6920              LDR      r0,[r4,#0x10]
000048  f7fffffe          BL       GPIO_SetBits
00004c  1c70              ADDS     r0,r6,#1              ;126
00004e  b2c6              UXTB     r6,r0                 ;126
                  |L7.80|
000050  2e08              CMP      r6,#8                 ;126
000052  dbe3              BLT      |L7.28|
;;;134    	}
;;;135    }
000054  bd70              POP      {r4-r6,pc}
;;;136    /*******************************************************************************
                          ENDP


                          AREA ||i.TM1618_WriteDataN||, CODE, READONLY, ALIGN=2

                  TM1618_WriteDataN PROC
;;;141    *******************************************************************************/
;;;142    void TM1618_WriteDataN(TM1618_Pindef *Pinfo,u16 Data)
000000  b570              PUSH     {r4-r6,lr}
;;;143    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;144    	unsigned char i=0;
000006  2500              MOVS     r5,#0
;;;145    	TM1618_DataCov(Data);
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       TM1618_DataCov
;;;146    	TM1618_WriteCommandN(Pinfo,0X8A);			//亮度
00000e  218a              MOVS     r1,#0x8a
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       TM1618_WriteCommandN
;;;147    	TM1618_Delay(TM1618_DelayTime);
000016  f44f707a          MOV      r0,#0x3e8
00001a  f7fffffe          BL       TM1618_Delay
;;;148    	for(i=0;i<8;i++)
00001e  bf00              NOP      
000020  e01b              B        |L8.90|
                  |L8.34|
;;;149    	{
;;;150    		GPIO_SetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);			//stb=0;
000022  8aa1              LDRH     r1,[r4,#0x14]
000024  6920              LDR      r0,[r4,#0x10]
000026  f7fffffe          BL       GPIO_SetBits
;;;151    		TM1618_WriteByte(Pinfo,TM1618_Daddr[i]);				//写入地址
00002a  480d              LDR      r0,|L8.96|
00002c  5d41              LDRB     r1,[r0,r5]
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       TM1618_WriteByte
;;;152    		TM1618_Delay(TM1618_DelayTime);
000034  f44f707a          MOV      r0,#0x3e8
000038  f7fffffe          BL       TM1618_Delay
;;;153    		TM1618_WriteByte(Pinfo,TM1618_CovSeg[i]);				//写入数据
00003c  4809              LDR      r0,|L8.100|
00003e  5d41              LDRB     r1,[r0,r5]
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       TM1618_WriteByte
;;;154    		TM1618_Delay(TM1618_DelayTime);
000046  f44f707a          MOV      r0,#0x3e8
00004a  f7fffffe          BL       TM1618_Delay
;;;155    		GPIO_ResetBits(Pinfo->TM1618_STB_PORT, Pinfo->TM1618_STB_Pin);		//stb=1;
00004e  8aa1              LDRH     r1,[r4,#0x14]
000050  6920              LDR      r0,[r4,#0x10]
000052  f7fffffe          BL       GPIO_ResetBits
000056  1c68              ADDS     r0,r5,#1              ;148
000058  b2c5              UXTB     r5,r0                 ;148
                  |L8.90|
00005a  2d08              CMP      r5,#8                 ;148
00005c  dbe1              BLT      |L8.34|
;;;156    	}
;;;157    }
00005e  bd70              POP      {r4-r6,pc}
;;;158    /*******************************************************************************
                          ENDP

                  |L8.96|
                          DCD      TM1618_Daddr
                  |L8.100|
                          DCD      TM1618_CovSeg

                          AREA ||.data||, DATA, ALIGN=0

                  TM1618_Daddr
000000  c0c2c4c6          DCB      0xc0,0xc2,0xc4,0xc6
000004  c8caccce          DCB      0xc8,0xca,0xcc,0xce
                  TM1618_SegCode
000008  3f065b4f          DCB      0x3f,0x06,0x5b,0x4f
00000c  666d7d07          DCB      0x66,0x6d,0x7d,0x07
000010  7f6f00ff          DCB      0x7f,0x6f,0x00,0xff
                  TM1618_CovSeg
000014  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000
