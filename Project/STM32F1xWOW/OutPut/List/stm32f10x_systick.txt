; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\obj\stm32f10x_systick.o --asm_dir=.\OutPut\List\ --list_dir=.\OutPut\List\ --depend=.\output\obj\stm32f10x_systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Library\STM32F10x_StdPeriph_Driver\INC -I..\..\Library\Startup\STM32F10x -I..\..\Library\C -I..\..\Library\ARM\Include -I..\..\Driver\WOW\INC -I..\..\Driver\Components\INC -I..\..\Driver\Protocol -I..\..\Examples\DEMO\include -I..\..\Examples\WOW -I.\main -I..\..\Driver\Tool -I..\..\Driver\FatFs\source -IE:\Project\MKD\STM32\STM32F1xWorkSpace\Project\STM32F1xWOW\RTE -I"D:\Program Files (x86)\MDK\Pack\ARM\CMSIS\5.0.1\CMSIS\Include" -I"D:\Program Files (x86)\MDK\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F10X_HD -DAMPLCDV11 --omf_browse=.\output\obj\stm32f10x_systick.crf ..\..\Library\STM32F10x_StdPeriph_Driver\SCR\stm32f10x_systick.c]
                          THUMB

                          AREA ||i.SysTick_CLKSourceConfig||, CODE, READONLY, ALIGN=1

                  SysTick_CLKSourceConfig PROC
;;;42     *******************************************************************************/
;;;43     void SysTick_CLKSourceConfig(u32 SysTick_CLKSource)
000000  2804              CMP      r0,#4
;;;44     {
;;;45       /* Check the parameters */
;;;46       assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;47     
;;;48       if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000002  d108              BNE      |L1.22|
;;;49       {
;;;50         SysTick->CTRL |= SysTick_CLKSource_HCLK;
000004  f04f21e0          MOV      r1,#0xe000e000
000008  6909              LDR      r1,[r1,#0x10]
00000a  f0410104          ORR      r1,r1,#4
00000e  f04f22e0          MOV      r2,#0xe000e000
000012  6111              STR      r1,[r2,#0x10]
000014  e007              B        |L1.38|
                  |L1.22|
;;;51       }
;;;52       else
;;;53       {
;;;54         SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000016  f04f21e0          MOV      r1,#0xe000e000
00001a  6909              LDR      r1,[r1,#0x10]
00001c  f0210104          BIC      r1,r1,#4
000020  f04f22e0          MOV      r2,#0xe000e000
000024  6111              STR      r1,[r2,#0x10]
                  |L1.38|
;;;55       }
;;;56     }
000026  4770              BX       lr
;;;57     
                          ENDP


                          AREA ||i.SysTick_CounterCmd||, CODE, READONLY, ALIGN=1

                  SysTick_CounterCmd PROC
;;;84     *******************************************************************************/
;;;85     void SysTick_CounterCmd(u32 SysTick_Counter)
000000  2801              CMP      r0,#1
;;;86     {
;;;87       /* Check the parameters */
;;;88       assert_param(IS_SYSTICK_COUNTER(SysTick_Counter));
;;;89     
;;;90       if (SysTick_Counter == SysTick_Counter_Enable)
000002  d108              BNE      |L2.22|
;;;91       {
;;;92         SysTick->CTRL |= SysTick_Counter_Enable;
000004  f04f21e0          MOV      r1,#0xe000e000
000008  6909              LDR      r1,[r1,#0x10]
00000a  f0410101          ORR      r1,r1,#1
00000e  f04f22e0          MOV      r2,#0xe000e000
000012  6111              STR      r1,[r2,#0x10]
000014  e00e              B        |L2.52|
                  |L2.22|
;;;93       }
;;;94       else if (SysTick_Counter == SysTick_Counter_Disable) 
000016  1c81              ADDS     r1,r0,#2
000018  b941              CBNZ     r1,|L2.44|
;;;95       {
;;;96         SysTick->CTRL &= SysTick_Counter_Disable;
00001a  f04f21e0          MOV      r1,#0xe000e000
00001e  6909              LDR      r1,[r1,#0x10]
000020  f0210101          BIC      r1,r1,#1
000024  f04f22e0          MOV      r2,#0xe000e000
000028  6111              STR      r1,[r2,#0x10]
00002a  e003              B        |L2.52|
                  |L2.44|
;;;97       }
;;;98       else /* SysTick_Counter == SysTick_Counter_Clear */
;;;99       {
;;;100        SysTick->VAL = SysTick_Counter_Clear;
00002c  2100              MOVS     r1,#0
00002e  f04f22e0          MOV      r2,#0xe000e000
000032  6191              STR      r1,[r2,#0x18]
                  |L2.52|
;;;101      }    
;;;102    }
000034  4770              BX       lr
;;;103    
                          ENDP


                          AREA ||i.SysTick_GetCounter||, CODE, READONLY, ALIGN=1

                  SysTick_GetCounter PROC
;;;133    *******************************************************************************/
;;;134    u32 SysTick_GetCounter(void)
000000  f04f20e0          MOV      r0,#0xe000e000
;;;135    {
;;;136      return(SysTick->VAL);
000004  6980              LDR      r0,[r0,#0x18]
;;;137    }
000006  4770              BX       lr
;;;138    
                          ENDP


                          AREA ||i.SysTick_GetFlagStatus||, CODE, READONLY, ALIGN=1

                  SysTick_GetFlagStatus PROC
;;;149    *******************************************************************************/
;;;150    FlagStatus SysTick_GetFlagStatus(u8 SysTick_FLAG)
000000  b510              PUSH     {r4,lr}
;;;151    {
000002  4601              MOV      r1,r0
;;;152      u32 statusreg = 0, tmp = 0 ;
000004  2200              MOVS     r2,#0
000006  2300              MOVS     r3,#0
;;;153      FlagStatus bitstatus = RESET;
000008  2000              MOVS     r0,#0
;;;154    
;;;155      /* Check the parameters */
;;;156      assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));
;;;157    
;;;158      /* Get the SysTick register index */
;;;159      tmp = SysTick_FLAG >> 3;
00000a  10cb              ASRS     r3,r1,#3
;;;160    
;;;161      if (tmp == 2) /* The flag to check is in CTRL register */
00000c  2b02              CMP      r3,#2
00000e  d103              BNE      |L4.24|
;;;162      {
;;;163        statusreg = SysTick->CTRL;
000010  f04f24e0          MOV      r4,#0xe000e000
000014  6922              LDR      r2,[r4,#0x10]
000016  e002              B        |L4.30|
                  |L4.24|
;;;164      }
;;;165      else          /* The flag to check is in CALIB register */
;;;166      {
;;;167        statusreg = SysTick->CALIB;
000018  f04f24e0          MOV      r4,#0xe000e000
00001c  69e2              LDR      r2,[r4,#0x1c]
                  |L4.30|
;;;168      }
;;;169    
;;;170      if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
00001e  2401              MOVS     r4,#1
000020  408c              LSLS     r4,r4,r1
000022  4014              ANDS     r4,r4,r2
000024  b10c              CBZ      r4,|L4.42|
;;;171      {
;;;172        bitstatus = SET;
000026  2001              MOVS     r0,#1
000028  e000              B        |L4.44|
                  |L4.42|
;;;173      }
;;;174      else
;;;175      {
;;;176        bitstatus = RESET;
00002a  2000              MOVS     r0,#0
                  |L4.44|
;;;177      }
;;;178      return bitstatus;
;;;179    }
00002c  bd10              POP      {r4,pc}
;;;180    
                          ENDP


                          AREA ||i.SysTick_ITConfig||, CODE, READONLY, ALIGN=1

                  SysTick_ITConfig PROC
;;;111    *******************************************************************************/
;;;112    void SysTick_ITConfig(FunctionalState NewState)
000000  b140              CBZ      r0,|L5.20|
;;;113    {
;;;114      /* Check the parameters */
;;;115      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;116    
;;;117      if (NewState != DISABLE)
;;;118      {
;;;119        SysTick->CTRL |= CTRL_TICKINT_Set;
000002  f04f21e0          MOV      r1,#0xe000e000
000006  6909              LDR      r1,[r1,#0x10]
000008  f0410102          ORR      r1,r1,#2
00000c  f04f22e0          MOV      r2,#0xe000e000
000010  6111              STR      r1,[r2,#0x10]
000012  e007              B        |L5.36|
                  |L5.20|
;;;120      }
;;;121      else
;;;122      {
;;;123        SysTick->CTRL &= CTRL_TICKINT_Reset;
000014  f04f21e0          MOV      r1,#0xe000e000
000018  6909              LDR      r1,[r1,#0x10]
00001a  f0210102          BIC      r1,r1,#2
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6111              STR      r1,[r2,#0x10]
                  |L5.36|
;;;124      }
;;;125    }
000024  4770              BX       lr
;;;126    
                          ENDP


                          AREA ||i.SysTick_SetReload||, CODE, READONLY, ALIGN=1

                  SysTick_SetReload PROC
;;;65     *******************************************************************************/
;;;66     void SysTick_SetReload(u32 Reload)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;67     {
;;;68       /* Check the parameters */
;;;69       assert_param(IS_SYSTICK_RELOAD(Reload));
;;;70     
;;;71       SysTick->LOAD = Reload;
000004  6148              STR      r0,[r1,#0x14]
;;;72     }
000006  4770              BX       lr
;;;73     
                          ENDP

